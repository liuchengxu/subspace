var searchIndex = JSON.parse('{\
"pallet_feeds":{"doc":"Pallet feeds, used for storing arbitrary user-provided …","t":[4,3,8,13,4,4,16,13,6,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["Call","CallObjectLocation","Config","DataSubmitted","Error","Event","Event","FeedCreated","Module","Pallet","UnknownFeedId","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_str","as_u8","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","create","current_feed_id","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","dispatch_bypass_filter","encode_to","encode_to","eq","eq","eq","error_metadata","extract_object_location","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","integrity_test","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","migrate","name","new_call_variant_create","new_call_variant_put","offchain_worker","offset","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","put","put","size","storage_info","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","with_weight","data","feed_id","metadata","0","0","1","1","2"],"q":["pallet_feedspallet_feeds::Call","","","pallet_feeds::Event","","","",""],"d":["Contains one variant per dispatchable that can be called …","Mapping to the object offset and size within an extrinsic","Configuration trait of this pallet.","New object is added [object_metadata, account_id, …","<code>pallet-feeds</code> errors","<code>pallet-feeds</code> events","<code>pallet-feeds</code> events","New feed is created [feed_id, account_id]","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Pallet feeds, used for storing arbitrary user-provided …","<code>FeedId</code> doesn’t exist","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new feed","Create a new feed","","","","","","","","","","","","","","","","","","","","Extract object location if an extrinsic corresponds to <code>put</code> …","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>create</code>.","Create a call with the variant <code>put</code>.","","Offset","","","","","","","Put a new object into a feed","Put a new object into a feed","Size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,0,2,1,0,0,3,4,1,5,4,1,3,5,6,4,1,3,5,6,3,3,1,5,1,5,1,5,4,1,3,5,6,4,1,3,5,6,4,1,5,4,1,5,4,5,4,4,1,5,1,5,1,5,1,5,1,5,5,1,5,4,1,5,4,5,4,1,3,5,6,4,1,3,5,6,4,4,1,1,3,3,5,5,6,6,4,4,1,1,3,3,5,5,6,6,5,5,5,1,5,4,4,4,1,3,5,6,4,1,3,5,6,4,1,3,5,6,4,1,3,5,6,4,1,3,5,6,4,1,3,5,6,4,4,5,5,4,6,4,4,4,4,4,4,4,5,6,4,1,5,4,1,5,4,1,3,5,6,4,1,3,5,6,1,5,1,5,1,5,4,1,3,5,6,1,3,5,4,1,3,5,6,4,1,3,5,6,4,1,3,5,6,3,7,7,7,8,9,8,9,8],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["str",15]],[[],["u8",15]],[[]],[[]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["originfor",6]],["dispatchresult",6]],null,[[],["u64",15]],[[],["storageversion",3]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[],["dispatchresultwithpostinfo",6]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["palleterrormetadata",3],["option",4,["palleterrormetadata"]]]],[[],[["option",4,["callobjectlocation"]],["callobjectlocation",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[],["dispatchinfo",3]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["runtimedbweight",3]],["u64",15]],[[],["str",15]],[[]],[[["u64",15],["u8",15],["vec",3,["u8"]]]],[[]],null,[[],["storageversion",3]],[[]],[[]],[[["weight",6]],["weight",6]],[[],["weight",6]],[[],["weight",6]],[[["u64",15],["originfor",6],["u8",15],["vec",3,["u8"]]],["dispatchresult",6]],null,null,[[],[["vec",3,["storageinfo"]],["storageinfo",3]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],[["postdispatchinfo",3],["dispatcherrorwithpostinfo",3,["postdispatchinfo"]]]],null,null,null,null,null,null,null,null],"p":[[4,"Event"],[8,"Config"],[4,"Error"],[3,"Pallet"],[4,"Call"],[3,"CallObjectLocation"],[13,"put"],[13,"DataSubmitted"],[13,"FeedCreated"]]},\
"pallet_offences_subspace":{"doc":"Offences Subspace Pallet","t":[8,10,0,4,6,8,4,16,6,13,16,3,6,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["WeightInfo","on_initialize","pallet","Call","ConcurrentReportsIndex","Config","Event","Event","Module","Offence","OnOffenceHandler","Pallet","Reports","ReportsByKindIndex","_GeneratedPrefixForStorageConcurrentReportsIndex","_GeneratedPrefixForStorageReports","_GeneratedPrefixForStorageReportsByKindIndex","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","dispatch_bypass_filter","encode_to","eq","eq","eq","error_metadata","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","integrity_test","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_known_offence","migrate","name","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","pallet_prefix","pallet_prefix","pallet_prefix","report_offence","reports","storage_info","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","0","1"],"q":["pallet_offences_subspace","","","pallet_offences_subspace::palletpallet_offences_subspace::pallet::Event",""],"d":["","","The module that hosts all the FRAME types needed to add …","Contains one variant per dispatchable that can be called …","A vector of reports of the same kind that happened at the …","The pallet’s config trait.","Events type.","The overarching event type.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","There is an offence reported of the given <code>kind</code> happened at …","A handler called for every offence report.","The pallet implementing the on-chain logic.","The primary structure that holds all offence records keyed …","Enumerates all reports of a kind along with the time they …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The primary structure that holds all offence records keyed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,0,0,0,2,0,3,2,0,0,0,0,0,0,4,3,5,6,7,8,4,3,5,6,7,8,4,3,5,3,5,3,5,3,5,6,7,8,4,3,5,6,7,8,4,3,5,4,3,5,4,3,5,4,3,5,3,5,3,5,3,5,3,5,5,3,4,3,5,4,4,3,5,6,7,8,4,3,5,6,6,7,7,8,8,4,4,3,3,5,5,6,6,7,7,8,8,4,4,3,3,5,5,5,5,5,3,5,4,4,6,7,8,4,3,5,6,7,8,4,3,5,6,7,8,4,3,5,6,7,8,4,3,5,6,7,8,4,3,5,6,7,8,4,3,5,4,4,4,4,4,4,4,4,4,4,6,7,8,4,4,4,3,5,4,3,5,6,7,8,4,3,5,6,7,8,4,3,5,3,5,3,5,3,5,6,7,8,4,3,5,3,5,6,7,8,4,3,5,6,7,8,4,3,5,6,7,8,4,3,5,9,9],"f":[null,[[["u32",15]],["weight",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["storageversion",3]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],["dispatchresultwithpostinfo",6]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["palleterrormetadata"]],["palleterrormetadata",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[],["dispatchinfo",3]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["runtimedbweight",3]],["u64",15]],[[],["str",15]],[[]],[[],["storageversion",3]],[[]],[[]],[[["weight",6]],["weight",6]],[[],["weight",6]],[[],["weight",6]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],[["result",4,["offenceerror"]],["offenceerror",4]]],[[],[["offencedetails",3,["farmerpublickey"]],["option",4,["offencedetails"]]]],[[],[["vec",3,["storageinfo"]],["storageinfo",3]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null],"p":[[8,"WeightInfo"],[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"_GeneratedPrefixForStorageReports"],[3,"_GeneratedPrefixForStorageConcurrentReportsIndex"],[3,"_GeneratedPrefixForStorageReportsByKindIndex"],[13,"Offence"]]},\
"pallet_subspace":{"doc":"Subspace consensus pallet.","t":[8,8,8,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,16,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,10,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,5,10,4,8,16,6,13,16,16,6,16,16,6,16,16,6,4,4,16,16,3,6,16,16,13,13,6,3,16,16,16,6,16,16,13,6,16,6,16,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["EonChangeTrigger","EpochChangeTrigger","EraChangeTrigger","NormalEonChange","NormalEpochChange","NormalEraChange","WeightInfo","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","equivocation","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","migrations","pallet","plan_config_change","report_equivocation","store_root_block","trigger","trigger","trigger","trigger","trigger","trigger","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","EquivocationHandler","HandleEquivocation","ReportLongevity","SubspaceEquivocationOffence","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_known_offence","is_known_offence","offender","offenders","report_offence","report_offence","slot","submit_equivocation_report","submit_equivocation_report","time_slot","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","SubspacePalletPrefix","add_epoch_configuration","pallet_prefix","Call","Config","ConfirmationDepthK","CurrentSlot","DuplicateOffenceReport","EonChangeTrigger","EonDuration","EonIndex","EpochChangeTrigger","EpochDuration","EpochIndex","EraChangeTrigger","EraDuration","EraStartSlot","Error","Event","Event","ExpectedBlockTime","GenesisConfig","GenesisSlot","HandleEquivocation","InitialSolutionRange","InvalidEquivocationProof","InvalidKeyOwnershipProof","Module","Pallet","PreGenesisObjectCount","PreGenesisObjectSeed","PreGenesisObjectSize","Randomness","RecordSize","RecordedHistorySegmentSize","RootBlockStored","Salt","SlotProbability","SolutionRange","WeightInfo","_GeneratedPrefixForStorageCurrentSlot","_GeneratedPrefixForStorageEonIndex","_GeneratedPrefixForStorageEpochIndex","_GeneratedPrefixForStorageEraStartSlot","_GeneratedPrefixForStorageGenesisSlot","_GeneratedPrefixForStorageRandomness","_GeneratedPrefixForStorageSalt","_GeneratedPrefixForStorageSolutionRange","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_str","as_u8","author_por_randomness","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","clone","clone","clone","clone_into","clone_into","clone_into","current_eon_start","current_epoch","current_epoch_start","current_slot","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deserialize","dispatch_bypass_filter","enact_eon_change","enact_epoch_change","enact_era_change","encode_to","encode_to","eon_index","epoch_config","epoch_index","eq","eq","eq","error_metadata","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_slot","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","initialized","integrity_test","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_in_block_list","lateness","lateness","merkle_tree_for_segment_index","migrate","name","new_call_variant_plan_config_change","new_call_variant_report_equivocation","new_call_variant_store_root_block","next_epoch","next_expected_epoch_change","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_offence","on_runtime_upgrade","on_timestamp_set","pallet_prefix","pallet_prefix","pallet_prefix","pallet_prefix","pallet_prefix","pallet_prefix","pallet_prefix","pallet_prefix","plan_config_change","plan_config_change","pre_dispatch","pre_dispatch_equivocation_report","pre_dispatch_root_block","randomness","report_equivocation","report_equivocation","salt","serialize","should_eon_change","should_epoch_change","should_era_change","slot_duration","solution_range","storage_info","store_root_block","store_root_block","submit_equivocation_report","submit_store_root_block","submit_test_equivocation_report","submit_test_store_root_block","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_equivocation_report","validate_root_block","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_weight","config","equivocation_proof","root_block","0"],"q":["pallet_subspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_subspace::equivocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_subspace::migrations","","","pallet_subspace::palletpallet_subspace::pallet::Call","","","pallet_subspace::pallet::Event"],"d":["Trigger an era change, if any should take place.","Trigger an epoch change, if any should take place.","Trigger an era change, if any should take place.","A type signifying to Subspace that it should perform era …","A type signifying to Subspace that it should perform epoch …","A type signifying to Subspace that it should perform era …","","","","","","","","","","","","","","An opt-in utility module for reporting equivocations.","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","The module that hosts all the FRAME types needed to add …","","","","Trigger an epoch change, if any should take place. This …","Trigger an era change, if any should take place. This …","Trigger an era change, if any should take place. This …","","","","","","","","","","","","","","","","","","","","","","Generic equivocation handler. This type implements …","A trait with utility methods for handling equivocation …","The longevity, in blocks, that the equivocation report is …","A Subspace equivocation offence report.","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Returns true if all of the offenders at the given time …","","The authority that produced the equivocation.","","Report an offence proved by the given reporters.","","A Subspace slot in which this incident happened.","Create and dispatch an equivocation report extrinsic.","","","","","","","","","","","","","","","Something that can return the storage prefix of the …","A storage migration that adds the current epoch …","","Contains one variant per dispatchable that can be called …","Configuration trait of this pallet.","Depth <code>K</code> after which a block enters the recorded history (a …","Current slot number.","A given equivocation report is valid but already …","Subspace requires some logic to be triggered on every …","The amount of time, in slots, that each eon should last. …","Current eon index.","Subspace requires some logic to be triggered on every …","The amount of time, in slots, that each epoch should last. …","Current epoch index.","Subspace requires some logic to be triggered on every …","The amount of time, in blocks, that each era should last. …","The solution range for <em>current</em> era.","Custom dispatch errors of this pallet.","Events type.","The overarching event type.","The expected average block time at which Subspace should …","Can be used to configure the genesis state of this pallet.","The slot at which the first epoch actually started. This …","The equivocation handling subsystem, defines methods to …","Initial solution range used for challenges during the very …","An equivocation proof provided as part of an equivocation …","A key ownership proof provided as part of an equivocation …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The Subspace Pallet","This constant defines the number of a pre-genesis objects …","This constant defines the seed used for deriving …","This constant defines the size (in bytes) of one …","The epoch randomness for the <em>current</em> epoch.","The size of data in one piece (in bytes).","Recorded history is encoded and plotted in segments of …","Root block was stored in blockchain history. [root_block].","Salt for <em>current</em> eon.","How often in slots slots (on average, not counting …","The solution range for <em>current</em> era.","Weight information for extrinsics in this pallet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This field should always be populated during block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds the start slot of the current eon. only guaranteed to","Produces information about the current epoch.","Finds the start slot of the current epoch. only guaranteed …","Current slot number.","","","","","","","","","","","","","","","DANGEROUS: Enact an eon change. Should be done on every …","DANGEROUS: Enact an epoch change. Should be done on every …","DANGEROUS: Enact era change. Should be done on every block …","","","Current eon index.","","Current epoch index.","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","The slot at which the first epoch actually started. This …","","","","","","","Temporary value (cleared at block finalization) which is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if <code>farmer_public_key</code> is in block list (due to …","","How late the current block is compared to its parent.","Get MerkleRoot for specified segment index","","","Create a call with the variant <code>plan_config_change</code>.","Create a call with the variant <code>report_equivocation</code>.","Create a call with the variant <code>store_root_block</code>.","Produces information about the next epoch (which was …","Return the <em>best guess</em> block number, at which the next …","","","Block finalization","","","","Initialization","","","","","","","","","","","","","Plan an epoch config change. The epoch config change is …","Plan an epoch config change. The epoch config change is …","","","","The epoch randomness for the <em>current</em> epoch.","Report farmer equivocation/misbehavior. This method will …","Report farmer equivocation/misbehavior. This method will …","Salt for <em>current</em> eon.","","Determine whether an eon change should take place at this …","Determine whether an epoch change should take place at …","Determine whether an era change should take place at this …","Determine the Subspace slot duration based on the …","The solution range for <em>current</em> era.","","Submit new root block to the blockchain. Contents of this …","Submit new root block to the blockchain. Contents of this …","Submits an extrinsic to report an equivocation. This …","Submits an extrinsic to store root block. This method will …","Just stores offender from equivocation report in block …","Just stores root block in the storage, only used for tests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,1,2,3,1,1,2,2,3,3,1,1,2,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,4,4,4,5,6,7,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,8,0,9,10,9,10,9,10,9,10,9,9,10,9,9,10,10,9,9,10,10,9,10,9,10,9,10,9,10,9,10,9,10,8,9,10,10,8,9,10,8,9,10,9,10,9,10,9,10,9,10,9,10,9,10,0,0,11,0,0,12,0,13,12,12,0,12,12,0,12,12,0,0,0,12,12,0,0,12,12,13,13,0,0,12,12,12,0,12,12,14,0,12,0,12,0,0,0,0,0,0,0,0,15,14,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,13,13,15,14,16,14,16,14,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,25,25,15,14,16,15,14,16,15,15,15,15,15,14,16,14,16,14,16,14,16,14,16,25,25,16,15,15,15,14,16,15,25,15,15,14,16,15,15,14,13,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,15,15,14,14,13,13,25,25,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,15,15,14,14,13,13,25,25,16,16,15,16,16,16,14,16,15,15,15,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,15,15,15,15,15,15,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,17,18,19,20,21,22,23,24,15,16,15,15,15,15,15,16,15,25,15,15,15,15,15,15,15,16,15,15,15,15,14,16,15,14,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,14,16,14,16,14,16,17,18,19,20,21,22,23,24,15,14,13,25,16,14,13,16,17,18,19,20,21,22,23,24,15,14,13,25,16,17,18,19,20,21,22,23,24,15,14,13,25,16,15,15,15,17,18,19,20,21,22,23,24,15,14,13,25,16,13,26,27,28,29],"f":[null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["weight",6]],[[],["weight",6]],[[],["weight",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[["slot",3]],["bool",15]],[[["slot",3]],["bool",15]],null,[[],["vec",3]],[[["subspaceequivocationoffence",3,["farmerpublickey"]],["farmerpublickey",6]],[["result",4,["offenceerror"]],["offenceerror",4]]],[[["subspaceequivocationoffence",3,["farmerpublickey"]],["farmerpublickey",6]],[["result",4,["offenceerror"]],["offenceerror",4]]],null,[[["equivocationproof",6]],["dispatchresult",6]],[[["equivocationproof",6]],["dispatchresult",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["subspaceepochconfiguration",3]],["weight",6]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["str",15]],[[],["u8",15]],[[],[["option",4,["randomness"]],["randomness",6]]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["storage",3]],[["result",4,["string"]],["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["slot",3]],[[],["epoch",3]],[[],["slot",3]],[[],["slot",3]],[[],["storageversion",3]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],["genesisconfig",3]],[[],["result",4]],[[],["dispatchresultwithpostinfo",6]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],null,[[],["u64",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["palleterrormetadata"]],["palleterrormetadata",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["slot",3]],[[],["str",15]],[[]],[[],["dispatchinfo",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["usize",15]],[[],[["option",4,["randomness"]],["option",4,["option"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["farmerpublickey",6]],["bool",15]],[[]],[[]],[[["u64",15]],[["option",4,["sha256hash"]],["sha256hash",6]]],[[["runtimedbweight",3]],["u64",15]],[[],["str",15]],[[["nextconfigdescriptor",4]]],[[["box",3,["equivocationproof"]],["equivocationproof",6]]],[[["rootblock",4]]],[[],["epoch",3]],[[],["option",4]],[[]],[[],["storageversion",3]],[[["blocknumberfor",6]]],[[]],[[]],[[["weight",6]],["weight",6]],[[["blocknumberfor",6]],["weight",6]],[[],["weight",6]],[[]],[[],["weight",6]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["originfor",6],["nextconfigdescriptor",4]],["dispatchresult",6]],null,[[],[["result",4,["transactionvalidityerror"]],["transactionvalidityerror",4]]],[[["call",4]],[["result",4,["transactionvalidityerror"]],["transactionvalidityerror",4]]],[[["call",4]],[["result",4,["transactionvalidityerror"]],["transactionvalidityerror",4]]],[[],["randomness",6]],[[["originfor",6],["box",3,["equivocationproof"]],["equivocationproof",6]],["dispatchresultwithpostinfo",6]],null,[[],["u64",15]],[[],["result",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],[["u64",15],["option",4,["u64"]]]],[[],[["storageinfo",3],["vec",3,["storageinfo"]]]],[[["originfor",6],["rootblock",4]],["dispatchresultwithpostinfo",6]],null,[[["equivocationproof",6]],["option",4]],[[["rootblock",4]]],[[["equivocationproof",6]],["option",4]],[[["rootblock",4]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transactionsource",4],["call",4]],["transactionvalidity",6]],[[["transactionsource",4],["call",4]],["transactionvalidity",6]],[[["transactionsource",4]],["transactionvalidity",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],[["postdispatchinfo",3],["dispatcherrorwithpostinfo",3,["postdispatchinfo"]]]],null,null,null,null],"p":[[3,"NormalEpochChange"],[3,"NormalEraChange"],[3,"NormalEonChange"],[8,"WeightInfo"],[8,"EpochChangeTrigger"],[8,"EraChangeTrigger"],[8,"EonChangeTrigger"],[8,"HandleEquivocation"],[3,"EquivocationHandler"],[3,"SubspaceEquivocationOffence"],[8,"SubspacePalletPrefix"],[8,"Config"],[4,"Error"],[4,"Event"],[3,"Pallet"],[4,"Call"],[3,"_GeneratedPrefixForStorageEpochIndex"],[3,"_GeneratedPrefixForStorageEonIndex"],[3,"_GeneratedPrefixForStorageGenesisSlot"],[3,"_GeneratedPrefixForStorageCurrentSlot"],[3,"_GeneratedPrefixForStorageRandomness"],[3,"_GeneratedPrefixForStorageSolutionRange"],[3,"_GeneratedPrefixForStorageSalt"],[3,"_GeneratedPrefixForStorageEraStartSlot"],[3,"GenesisConfig"],[13,"plan_config_change"],[13,"report_equivocation"],[13,"store_root_block"],[13,"RootBlockStored"]]},\
"sc_consensus_subspace":{"doc":"Subspace Proof-of-Storage Consensus","t":[3,13,13,13,13,13,3,13,13,3,13,4,13,13,13,13,13,13,13,13,7,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,13,13,3,3,3,3,4,3,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,12,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,0,12,12,11,12,12,12,12,11,12,11,12,12,11,12,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ArchivedSegmentNotification","BadSignature","BadSolutionSignature","CheckInherents","CheckInherentsUnhandled","Client","Config","CreateInherents","EncodingOfWrongSize","Epoch","EpochForChild","Error","ExpectedEpochChange","Extraction","FarmerInBlockList","FetchEpoch","FetchParentHeader","ForkTree","HeaderBadSeal","HeaderUnsealed","INTERMEDIATE_KEY","InvalidCommitment","InvalidEncoding","MerkleRootNotFound","MissingSalt","MissingSolutionRange","MultipleConfigChangeDigests","MultipleEpochChangeDigests","MultipleNextSaltDigests","MultipleNextSolutionRangeDigests","MultiplePreRuntimeDigests","MultipleSaltDigests","MultipleSolutionRangeDigests","NewSlotInfo","NewSlotNotification","NoPreRuntimeDigest","OutsideOfSolutionRange","ParentBlockNoAssociatedWeight","ParentUnavailable","RuntimeApi","SlotMustIncrease","SubspaceBlockImport","SubspaceIntermediate","SubspaceLink","SubspaceParams","SubspaceRequest","SubspaceVerifier","SubspaceWorker","SubspaceWorkerHandle","TooFarInFuture","UnexpectedConfigChange","UnexpectedEpochChange","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","archived_segment_notification_stream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","aux_schema","backoff_authoring_blocks","block_import","block_import","block_proposal_slot_portion","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_author_with","challenge","check_block","client","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","config","create_inherent_data_providers","decode","decode_all","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","encode_to","end_slot","env","epoch_changes","epoch_descriptor","epoch_index","eq","equivalent","find_pre_digest","fmt","fmt","fmt","fmt","fmt","fmt","force_authoring","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis","get_or_compute","handle","import_block","import_queue","increment","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","into_future","justification_sync_link","max_block_proposal_slot_portion","ne","new_slot_info","new_slot_notification_stream","next_salt","notification","object_mapping","pieces","poll","randomness","root_block","salt","select_chain","send","slot","slot_duration","solution_range","solution_sender","start_slot","start_slot","start_subspace","start_subspace_archiver","subspace_link","sync_oracle","telemetry","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","0","1","2","3","load_block_weight","load_epoch_changes","SubspaceNotificationStream","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","subscribe","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["sc_consensus_subspacesc_consensus_subspace::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","","sc_consensus_subspace::SubspaceRequest","","","","sc_consensus_subspace::aux_schema","","sc_consensus_subspace::notification","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Archived segments notification with new pieces","Bad signature","Bad solution signature","Check inherents error","Unhandled check inherents error","Client error","A slot duration. Create with <code>get_or_compute</code>.","Create inherents error.","Encoding is of wrong size","Subspace epoch information","Request the epoch that a child of the given block, with …","Errors encountered by the Subspace authorship task.","Expected epoch change to happen.","Could not extract timestamp and slot","Farmer in block list","Could not fetch epoch","Could not fetch parent header","Fork tree error","Header has a bad seal","Header is unsealed","Intermediate key for Subspace engine.","Invalid commitment for salt","Invalid encoding of a piece","Merkle Root not found","Block has no associated salt","Block has no associated solution range","Multiple Subspace config change digests","Multiple Subspace epoch change digests","Multiple Subspace next salt digests","Multiple Subspace next solution range digests","Multiple Subspace pre-runtime digests","Multiple Subspace salt digests","Multiple Subspace solution range digests","Information about new slot that just arrived","New slot notification with slot information and sender for …","No Subspace pre-runtime digest found","Solution is outside of solution range","Parent block has no associated weight","Parent unavailable. Cannot import","Runtime Api error.","Slot number must increase","A block-import handler for Subspace.","Intermediate value passed to block importer.","State that must be shared between the import queue and the …","Parameters for Subspace.","Requests to the Subspace service.","A verifier for Subspace blocks.","Worker for Subspace which implements <code>Future&lt;Output=()&gt;</code>. …","A handle to the Subspace worker for issuing requests.","Header rejected: too far in the future","Unexpected config change.","Unexpected epoch change","","","","","","","","","Get stream with notifications about archived segment …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schema for Subspace epoch changes in the aux-db.","Strategy and parameters for backing off block production.","Produce a Subspace block-import object to be used later on …","The underlying block-import object to supply our produced …","The proportion of the slot dedicated to proposing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the current native implementation can author …","Slot challenge","","The client to use","","","","","","","","","","","","","","","","","Get the config of this link.","Configuration of the epoch.","Something that can create the inherent data providers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The duration of this epoch.","","","The environment we are producing blocks for.","Get the epoch changes of this link.","The epoch descriptor.","The epoch index.","","","Extract the Subspace pre digest from the given header. …","","","","","","","Force authoring of blocks even if we are offline","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Create the genesis epoch (epoch #0). This is defined to …","Either fetch the slot duration from disk or compute it …","Get a handle to the worker.","","Start an import queue for the Subspace consensus algorithm.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hook into the sync module to control the justification …","The maximum proportion of the slot dedicated to proposing …","","New slot information","Get stream with notifications about new slot arrival with …","Salt for the next eon","Utility module for handling Subspace client notifications.","Mappings for objects stored in corresponding pieces.","Pieces that correspond to the segment in root block","","Randomness for this epoch.","Root block","Salt","The SelectChain Strategy","Send a request to the Subspace service.","Slot","Get the inner slot duration","Acceptable solution range","Sender that can be used to send solutions for the slot","","The starting slot of the epoch.","Start the Subspace worker.","Start an archiver that will listen for imported blocks and …","The source of timestamps for relative slots","A sync oracle","Handle use to report telemetries.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load the cumulative chain-weight associated with a block.","Load or initialize persistent epoch change data from …","The receiving half of the Subspace notification channel.","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Subscribe to a channel through which notifications are …","","","","","","",""],"i":[0,1,1,1,1,1,0,1,1,0,2,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,3,4,5,6,7,8,9,10,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,0,12,0,12,12,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,12,4,3,12,3,4,5,6,7,8,9,10,3,4,5,6,7,8,9,10,10,7,12,7,7,7,7,7,11,12,2,13,14,3,4,5,6,7,1,8,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,7,7,7,12,10,11,7,7,7,0,4,5,6,7,1,1,12,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,7,8,13,3,0,7,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,13,13,12,12,7,5,10,4,0,6,6,13,7,6,4,12,9,4,8,4,5,7,7,0,0,12,12,12,7,3,4,5,6,7,8,9,10,1,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,11,12,2,13,14,3,4,5,6,7,1,8,9,10,14,11,12,2,13,14,3,4,5,6,7,1,8,9,10,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,21,22,31,40,40,40,40,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],[["subspacenotificationstream",3,["archivedsegmentnotification"]],["archivedsegmentnotification",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[["arc",3],["config",3]],["clientresult",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["blockcheckparams",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,[[]],[[],["newslotinfo",3]],[[],["newslotnotification",3]],[[],["archivedsegmentnotification",3]],[[],["epoch",3]],[[],["config",3]],[[],["subspaceworkerhandle",3]],[[],["subspacelink",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["config",3]],null,null,[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["subspacegenesisconfiguration",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[],["slot",3]],null,[[],["sharedepochchanges",6]],null,null,[[["epoch",3]],["bool",15]],[[],["bool",15]],[[],[["result",4,["predigest","error"]],["error",4],["predigest",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["slot",3],["subspacegenesisconfiguration",3]],["epoch",3]],[[],["clientresult",6]],[[],["subspaceworkerhandle",3]],[[["blockimportparams",3],["cachekeyid",6],["vec",3,["u8"]],["hashmap",3,["cachekeyid","vec"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["telemetryhandle",3],["arc",3],["subspacelink",3],["option",4,["boxjustificationimport"]],["boxjustificationimport",6],["option",4,["registry"]],["registry",3],["option",4,["telemetryhandle"]]],[["clientresult",6,["defaultimportqueue"]],["defaultimportqueue",6]]],[[],["epoch",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],null,null,[[["epoch",3]],["bool",15]],null,[[],[["newslotnotification",3],["subspacenotificationstream",3,["newslotnotification"]]]],null,null,null,null,[[["pin",3],["context",3]],["poll",4]],null,null,null,null,[[["subspacerequest",4]]],null,[[],["duration",3]],null,null,[[],["slot",3]],null,[[["subspaceparams",3]],[["error",4],["result",4,["subspaceworker","error"]],["subspaceworker",3]]],[[["arc",3],["subspacelink",3]]],null,null,null,[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockimportparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["encode",8]],[["clientresult",6,["option"]],["option",4,["subspaceblockweight"]]]],[[["subspacegenesisconfiguration",3]],[["sharedepochchanges",6,["epoch"]],["clientresult",6,["sharedepochchanges"]]]],null,[[["private",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["subspacenotificationstream",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["tracingunboundedreceiver",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[4,"Error"],[4,"SubspaceRequest"],[3,"SubspaceBlockImport"],[3,"NewSlotInfo"],[3,"NewSlotNotification"],[3,"ArchivedSegmentNotification"],[3,"Epoch"],[3,"Config"],[3,"SubspaceWorkerHandle"],[3,"SubspaceLink"],[3,"SubspaceIntermediate"],[3,"SubspaceParams"],[3,"SubspaceWorker"],[3,"SubspaceVerifier"],[13,"Client"],[13,"RuntimeApi"],[13,"ForkTree"],[13,"Extraction"],[13,"FetchEpoch"],[13,"TooFarInFuture"],[13,"ParentUnavailable"],[13,"SlotMustIncrease"],[13,"HeaderBadSeal"],[13,"HeaderUnsealed"],[13,"BadSignature"],[13,"BadSolutionSignature"],[13,"OutsideOfSolutionRange"],[13,"InvalidEncoding"],[13,"InvalidCommitment"],[13,"FetchParentHeader"],[13,"ExpectedEpochChange"],[13,"ParentBlockNoAssociatedWeight"],[13,"MissingSolutionRange"],[13,"MissingSalt"],[13,"FarmerInBlockList"],[13,"MerkleRootNotFound"],[13,"CheckInherents"],[13,"CheckInherentsUnhandled"],[13,"CreateInherents"],[13,"EpochForChild"],[3,"SubspaceNotificationStream"]]},\
"sc_consensus_subspace_rpc":{"doc":"RPC api for Subspace.","t":[3,3,16,3,3,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,10,11,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,10,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["EncodedBlockWithObjectMapping","FarmerMetadata","Metadata","ProposedProofOfReplicationResult","RpcArchivedSegment","RpcNewSlotInfo","RpcSolution","SubspaceRpcApi","SubspaceRpcApiClient","SubspaceRpcHandler","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","confirmation_depth_k","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encoding","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gen_client","get_block_by_number","get_block_by_number","get_farmer_metadata","get_farmer_metadata","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","next_salt","object_mapping","object_mapping","piece_index","pieces","pre_genesis_object_count","pre_genesis_object_seed","pre_genesis_object_size","propose_proof_of_replication","propose_proof_of_replication","public_key","record_size","recorded_history_segment_size","root_block","salt","secret_key","serialize","serialize","serialize","serialize","serialize","serialize","signature","slot_number","slot_number","solution","solution_range","subscribe_archived_segment","subscribe_archived_segment","subscribe_slot_info","subscribe_slot_info","tag","to_delegate","to_delegate","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unsubscribe_archived_segment","unsubscribe_archived_segment","unsubscribe_slot_info","unsubscribe_slot_info","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Client","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from","from_mut","from_ref","get_block_by_number","get_farmer_metadata","init","into","into_any","into_any_arc","into_any_rc","new","propose_proof_of_replication","subscribe_archived_segment","subscribe_slot_info","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["sc_consensus_subspace_rpcsc_consensus_subspace_rpc::gen_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Encoded block with mapping of objects that it contains","Metadata necessary for farmer operation","RPC metadata","","Information about new slot that just arrived","Information about new slot that just arrived","","Provides rpc methods for interacting with Subspace.","The Client.","Implements the SubspaceRpc trait for interacting with …","","","","","","","","","","","","","","","","","","","Encoded block","","","","","","","","","","","","","","","Slot challenge","","","","","","","","","Depth <code>K</code> after which a block enters the recorded history (a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","The generated client module.","Get encoded block by given block number","","Ger metadata necessary for farmer operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of the <code>SubspaceRpc</code> handler.","Salt for the next eon","Mapping of objects inside of the block","Mappings for objects stored in corresponding pieces.","","Pieces that correspond to the segment in root block","This constant defines the number of a pre-genesis objects …","This constant defines the seed used for deriving …","This constant defines the size (in bytes) of one …","","","","The size of data in one piece (in bytes).","Recorded history is encoded and plotted in segments of …","Root block","Salt","","","","","","","","","Slot number","","","Acceptable solution range","Archived segment subscription","","Slot info subscription","","","Create an <code>IoDelegate</code>, wiring rpc calls to the trait …","Create an <code>IoDelegate</code>, wiring rpc calls to the trait …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsubscribe from archived segment subscription.","","Unsubscribe from slot info subscription.","","","","","","","","","The Client.","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get encoded block by given block number","Ger metadata necessary for farmer operation","","","","","","Creates a new <code>Client</code>.","","Archived segment subscription","Slot info subscription","","","","","","",""],"i":[0,0,1,0,0,0,0,0,0,0,2,3,4,5,6,2,3,4,5,7,8,6,2,3,4,5,7,8,3,6,2,3,4,5,7,8,6,2,3,4,5,7,8,4,2,3,4,5,2,3,4,5,2,6,2,3,4,5,7,8,6,2,3,4,5,7,8,2,3,4,5,7,8,6,2,3,4,5,7,8,7,2,3,4,5,7,8,6,2,3,4,5,5,7,8,6,2,3,4,5,7,8,6,2,3,4,5,7,8,0,1,6,1,6,6,2,3,4,5,7,8,6,2,3,4,5,7,8,6,2,3,4,5,7,8,6,2,3,4,5,7,8,6,2,3,4,5,7,8,6,4,3,5,7,5,2,2,2,1,6,7,2,2,5,4,8,2,3,4,5,7,8,7,4,8,8,4,1,6,1,6,7,1,1,2,3,4,5,6,2,3,4,5,7,8,6,2,3,4,5,7,8,6,2,3,4,5,7,8,6,2,3,4,5,7,8,6,2,3,4,5,7,8,1,6,1,6,6,2,3,4,5,7,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["farmermetadata",3]],[[],["encodedblockwithobjectmapping",3]],[[],["rpcnewslotinfo",3]],[[],["rpcarchivedsegment",3]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["archivedsegmentnotification",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u32",15]],[["result",4,["option","rpcerror"]],["boxfuture",6,["result"]]]],[[["u32",15]],[["result",4,["option","rpcerror"]],["boxfuture",6,["result"]]]],[[],[["boxfuture",6,["result"]],["result",4,["farmermetadata","rpcerror"]]]],[[],[["boxfuture",6,["result"]],["result",4,["farmermetadata","rpcerror"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["subspacenotificationstream",3,["newslotnotification"]],["archivedsegmentnotification",3],["arc",3],["newslotnotification",3],["subspacenotificationstream",3,["archivedsegmentnotification"]]]],null,null,null,null,null,null,null,null,[[["proposedproofofreplicationresult",3]],[["result",4,["rpcerror"]],["boxfuture",6,["result"]]]],[[["proposedproofofreplicationresult",3]],[["result",4,["rpcerror"]],["boxfuture",6,["result"]]]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[["subscriber",3,["rpcarchivedsegment"]],["rpcarchivedsegment",3]]],[[["subscriber",3,["rpcarchivedsegment"]],["rpcarchivedsegment",3]]],[[["subscriber",3,["rpcnewslotinfo"]],["rpcnewslotinfo",3]]],[[["subscriber",3,["rpcnewslotinfo"]],["rpcnewslotinfo",3]]],null,[[],["iodelegate",3]],[[],["iodelegate",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4],["subscriptionid",4]],[["rpcresult",6,["bool"]],["bool",15]]],[[["option",4],["subscriptionid",4]],[["rpcresult",6,["bool"]],["bool",15]]],[[["option",4],["subscriptionid",4]],[["rpcresult",6,["bool"]],["bool",15]]],[[["option",4],["subscriptionid",4]],[["rpcresult",6,["bool"]],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["private",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["client",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["rpcchannel",3]]],[[]],[[]],[[["u32",15]]],[[]],[[],["usize",15]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rpcchannel",3]]],[[["proposedproofofreplicationresult",3]]],[[],[["rpcresult",6,["typedsubscriptionstream"]],["typedsubscriptionstream",3,["rpcarchivedsegment"]]]],[[],[["rpcresult",6,["typedsubscriptionstream"]],["typedsubscriptionstream",3,["rpcnewslotinfo"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[8,"SubspaceRpcApi"],[3,"FarmerMetadata"],[3,"EncodedBlockWithObjectMapping"],[3,"RpcNewSlotInfo"],[3,"RpcArchivedSegment"],[3,"SubspaceRpcHandler"],[3,"RpcSolution"],[3,"ProposedProofOfReplicationResult"],[3,"Client"]]},\
"sc_network_test":{"doc":"","t":[13,6,16,3,8,13,3,4,3,13,3,6,13,3,13,13,13,3,3,16,4,6,6,13,13,6,6,8,3,8,3,13,16,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AuthoritiesChange","Block","BlockImport","BlockImportAdapter","BlockImportAdapterFull","ChangesTrieConfigUpdate","EmptyTransactionPool","Extrinsic","ForceFinalized","Full","FullPeerConfig","Hash","IncludeData","JustificationTestNet","Light","OffchainIndexClear","OffchainIndexSet","PassThroughVerifier","Peer","PeerData","PeersClient","PeersFullClient","PeersLightClient","StorageChange","Store","TestClient","TestClientBuilder","TestClientBuilderExt","TestNet","TestNetFactory","Transfer","Transfer","Verifier","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_extra_child_storage","add_extra_storage","add_full_peer","add_full_peer_with_config","add_light_peer","amount","announce_block","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_block_import","as_full","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","block_announce_validator","block_until_connected","block_until_idle","block_until_sync","blockchain_canon_equals","blocks_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_with_backend","build_with_longest_chain","changes_trie_config","check","check","check_block","check_block","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect_to_peers","constant_size","data","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default_config","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","failed_verifications","finality_notification_stream","finalize_block","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_config","from_config","from_config","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_blocks","genesis_init_mut","get_aux","has_block","has_state_at","hash_of","header","id","identity","identity","import","import_block","import_block","import_justification","import_notification_stream","info","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_resources_exhausting_tx","into_signed_tx","is_authority","is_major_syncing","is_offline","is_signed","justifications","keep_blocks","make_block_import","make_block_import","make_block_import","make_verifier","make_verifier","make_verifier","mut_peers","mut_peers","mut_peers","ne","ne","network","network_service","new","new","new","new","new_with_fork_choice","nonce","notifications_protocols","num_downloaded_blocks","num_peers","on_broadcasted","on_start","peer","peer","peer","peers","peers","peers","poll","poll_until_connected","poll_until_idle","poll_until_sync","push_authorities_change_block","push_blocks","push_blocks_at","push_blocks_at_without_announcing","push_blocks_at_without_informing_sync","push_headers","request_justification","select_chain","serialize","set_heap_pages","set_sync_fork_request","size_of","spawn_task","storage_chain","sync_mode","to","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","transactions","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_transfer","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fork_choice","0","0","0","0","0","0","0","1","1","exhaust_resources_when_not_first","signature","transfer","0","0","1","1"],"q":["sc_network_testsc_network_test::Extrinsic","","","","","","","","","","","","sc_network_test::PeersClient","","",""],"d":["","A test block.","","Implements <code>BlockImport</code> for any <code>Transaction</code>. Internally the …","","","Dummy implementation of the <code>TransactionPool</code> trait for a …","Extrinsic for test-runtime.","","","Configuration for a full peer.","A simple hash type for all our hashing.","","","","","","A Verifier that accepts all blocks and passes them on with …","","","","","","","","A test client with default backend.","A <code>TestClient</code> with <code>test-runtime</code> builder.","A <code>test-runtime</code> extensions to <code>TestClientBuilder</code>.","","","Calls in transactions.","","","","","","","","Add an extra value into the genesis storage.","Add an extra child value into the genesis storage.","","Add a full peer.","Add a light peer.","","Announces an important block on the network.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block announce validator.","Blocks the current thread until all peers are connected to …","Blocks the current thread until there are no pending …","Blocks the current thread until we are sync’ed.","Test helper to compare the blockchain state of multiple …","Count the total number of imported blocks.","","","","","","","","","","","","","","","","","","","","","","","Build the test client.","Build the test client and the backend.","Build the test client and longest chain selector.","Set changes trie configuration for genesis.","","","","","Get a reference to the client.","","","","","","","","","","","The indices of the peers the peer should be connected to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a collection of block hashes that failed …","","","","","","","","","","","","","","","","","These two need to be implemented!","Create new test network with peers and given config.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Add blocks to the peer – edit the block before adding","Returns a mutable reference to the genesis parameters.","","","","","","Get this peer ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into a signed extrinsic, which will only end up …","Convert into a signed extrinsic.","Whether the full peer should have the authority role.","Returns true if we’re major syncing.","Returns true if we have no peer.","","","Pruning window size.","Get custom block import handle for fresh client, along …","","","","","","","","","","","Get a reference to the network worker.","Get a reference to the network service.","Create new test network with this many peers.","Create a new instance.","Create a new instance of <code>Self::Full</code>.","","Create a new instance.","","List of notification protocols that the network must …","Returns the number of downloaded blocks.","Returns the number of peers we’re connected to.","","","Get reference to peer.","","","","","","Polls the testnet. Processes all the pending actions.","Polls the testnet until all peers are connected to each …","Polls the testnet until theres’ no activiy of any kind.","Polls the testnet until all nodes are in sync.","","Push blocks to the peer (simplified: with or without a TX)","Push blocks to the peer (simplified: with or without a TX) …","Push blocks to the peer (simplified: with or without a TX) …","Push blocks to the peer (simplified: with or without a TX) …","Push blocks to the peer (simplified: with or without a TX)","Request a justification for the given block.","","","Override the default value for Wasm heap pages.","Request explicit fork sync.","","Used to spawn background tasks, e.g. the block request …","Enable transaction indexing.","Syncing mode","","","","","","","","","","","Convert <code>&amp;self</code> into <code>&amp;Transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","Try to convert <code>&amp;self</code> into <code>&amp;Transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>TestNet</code> that used the given fork choice rule.","","","","","","","","","","","","","","","",""],"i":[1,0,2,0,0,1,0,0,0,3,0,0,1,0,3,1,1,0,0,2,0,0,0,1,1,0,0,0,0,0,0,1,2,4,3,5,6,1,7,7,2,2,2,6,8,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,3,3,6,1,6,1,6,1,12,2,2,2,8,8,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,7,7,7,7,1,1,3,5,8,4,3,5,6,1,4,3,5,6,1,12,1,8,6,1,6,1,6,1,6,1,6,1,12,2,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,1,8,9,10,11,4,3,5,12,13,6,1,6,1,6,1,6,1,8,3,3,6,1,8,9,10,11,4,3,5,12,13,6,1,6,2,9,11,8,8,9,9,10,10,11,11,4,4,3,3,5,5,12,12,13,13,6,6,1,1,8,8,9,9,10,10,11,11,4,4,3,3,5,5,12,12,13,13,6,6,1,1,8,7,3,8,3,13,3,8,6,1,13,3,5,10,3,3,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,10,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,6,6,12,8,8,1,3,12,2,9,11,2,9,11,2,9,11,6,1,8,8,2,4,5,1,4,6,12,8,8,13,10,2,9,11,2,9,11,2,2,2,2,8,8,8,8,8,8,8,8,1,7,8,1,2,12,12,6,6,1,4,3,5,6,1,13,13,1,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,1,6,1,6,1,6,1,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,8,9,10,11,4,3,5,12,13,6,1,4,8,9,10,11,4,3,5,12,13,6,1,9,14,15,16,17,18,19,20,16,18,21,21,21,22,23,22,23],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["childinfo",4]]],[[]],[[]],[[["fullpeerconfig",3]]],[[]],null,[[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["blockimportadapter",3]],[[],[["option",4,["arc"]],["arc",3,["peersfullclient"]]]],[[]],[[]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["localcallexecutor",3,["block","nativeelsewasmexecutor"]],["block",3,["header","extrinsic"]],["client",3,["localcallexecutor","block","runtimeapi"]],["runtimeapi",3]]],[[]],[[]],[[["option",4,["changestrieconfiguration"]],["changestrieconfiguration",3]]],[[],[["transactionvalidityerror",4],["extrinsic",4],["result",4,["extrinsic","transactionvalidityerror"]]]],[[],[["result",4,["transactionvalidityerror"]],["transactionvalidityerror",4]]],[[["blockcheckparams",3,["block"]],["block",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["blockcheckparams",3,["block"]],["block",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["peersclient",4]],[[],["passthroughverifier",3]],[[],["peersclient",4]],[[],["blockimportadapter",3]],[[],["transfer",3]],[[],["extrinsic",4]],[[]],[[]],[[]],[[]],[[]],null,[[],[["usize",15],["option",4,["usize"]]]],null,[[],[["transfer",3],["result",4,["transfer","error"]],["error",3]]],[[],[["error",3],["extrinsic",4],["result",4,["extrinsic","error"]]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],["fullpeerconfig",3]],[[],["protocolconfig",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4,["dispatcherrorwithpostinfo"]],["dispatcherrorwithpostinfo",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["transfer",3]],["bool",15]],[[["extrinsic",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["string",3],["hashmap",3,["string"]]]],[[],[["finalitynotifications",6,["block"]],["block",6]]],[[["block",6],["justification",6],["bool",15],["option",4,["justification"]],["blockid",4,["block"]]],["clientresult",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["protocolconfig",3]]],[[["protocolconfig",3]]],[[["protocolconfig",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["blockorigin",4]],["h256",3]],[[],["genesisparameters",3]],[[],[["option",4,["vec"]],["clientresult",6,["option"]]]],[[["h256",3]],["bool",15]],[[["blockid",4]],["bool",15]],[[]],[[["blockid",4]],[["clientresult",6,["option"]],["option",4]]],[[],["peerid",3]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["hashmap",3,["id","vec"]],["blockimportparams",3,["block"]],["id",6],["vec",3,["u8"]],["block",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["hashmap",3,["id","vec"]],["blockimportparams",3,["block"]],["id",6],["vec",3,["u8"]],["block",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["h256",3],["numberfor",6,["block"]],["justification",6],["block",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["importnotifications",6,["block"]],["block",6]]],[[],[["blockchaininfo",3,["block"]],["block",6]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["extrinsic",4]],[[],["extrinsic",4]],null,[[],["bool",15]],[[],["bool",15]],[[],[["bool",15],["option",4,["bool"]]]],[[["blockid",4]],[["option",4,["justifications"]],["clientresult",6,["option"]]]],null,[[["peersclient",4]]],[[["peersclient",4]]],[[["peersclient",4]]],[[["peersclient",4],["protocolconfig",3]]],[[["peersclient",4],["protocolconfig",3]]],[[["peersclient",4],["protocolconfig",3]]],[[["fnonce",8]]],[[["fnonce",8]]],[[["fnonce",8]]],[[["transfer",3]],["bool",15]],[[["extrinsic",4]],["bool",15]],[[],["networkworker",3]],[[],["arc",3]],[[["usize",15]]],[[["bool",15]]],[[]],[[["option",4]],[["option",4,["extrinsic"]],["extrinsic",4]]],[[["forkchoicestrategy",4],["bool",15]]],null,null,[[],["usize",15]],[[],["usize",15]],[[["vec",3,["string","global"]],["randomstate",3],["hashmap",3,["vec","randomstate"]]]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]],["peer",3]],[[["usize",15]],["peer",3]],[[["usize",15]],["peer",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[["futurecontext",3]]],[[["futurecontext",3]],["poll",4]],[[["futurecontext",3]],["poll",4]],[[["futurecontext",3]],["poll",4]],[[["vec",3,["authorityid"]],["authorityid",6]],["h256",3]],[[["usize",15],["bool",15]],["h256",3]],[[["usize",15],["bool",15],["blockid",4,["block"]],["block",6]],["h256",3]],[[["usize",15],["bool",15],["blockid",4,["block"]],["block",6]],["h256",3]],[[["usize",15],["bool",15],["blockid",4,["block"]],["block",6]],["h256",3]],[[["usize",15]],["h256",3]],[[["numberfor",6,["block"]],["block",6]]],[[],[["longestchain",3,["backend","block"]],["option",4,["longestchain"]]]],[[],["result",4]],[[["u64",15]]],[[["block",6],["peerid",3],["vec",3,["peerid"]],["numberfor",6,["block"]]]],[[["mallocsizeofops",3]],["usize",15]],[[["boxfuture",6]]],null,null,null,[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],[["global",3],["vec",3,["global"]]]],[[],["transfer",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["transfer"]],["transfer",3]]],[[]],[[]],[[]],[[]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockimportparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["forkchoicestrategy",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Extrinsic"],[8,"TestNetFactory"],[4,"PeersClient"],[3,"PassThroughVerifier"],[3,"BlockImportAdapter"],[3,"Transfer"],[8,"TestClientBuilderExt"],[3,"Peer"],[3,"TestNet"],[3,"ForceFinalized"],[3,"JustificationTestNet"],[3,"FullPeerConfig"],[3,"EmptyTransactionPool"],[13,"AuthoritiesChange"],[13,"IncludeData"],[13,"StorageChange"],[13,"ChangesTrieConfigUpdate"],[13,"OffchainIndexSet"],[13,"OffchainIndexClear"],[13,"Store"],[13,"Transfer"],[13,"Full"],[13,"Light"]]},\
"sp_consensus_subspace":{"doc":"Primitives for Subspace consensus.","t":[4,3,6,6,6,17,17,13,13,13,13,3,17,13,13,8,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,8,4,3,3,3,3,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,3,6,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,13,18,6,8,3,4,8,13,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,10,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["ConsensusLog","Epoch","EquivocationProof","FarmerPublicKey","FarmerSignature","KEY_TYPE","MEDIAN_ALGORITHM_CARDINALITY","NextConfigData","NextEpochData","NextSaltData","NextSolutionRangeData","OpaqueKeyOwnershipProof","SUBSPACE_ENGINE_ID","SaltData","SolutionRangeData","SubspaceApi","SubspaceBlockWeight","SubspaceEpochConfiguration","SubspaceGenesisConfiguration","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","c","check_equivocation_proof","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","configuration","configuration_with_context","confirmation_depth_k","confirmation_depth_k_with_context","current_epoch","current_epoch_start","current_epoch_start_with_context","current_epoch_with_context","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deserialize","digests","duration","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","epoch_index","epoch_length","eq","eq","eq","eq","eq","extract_block_object_mapping","extract_block_object_mapping_with_context","extract_root_block","extract_root_block_with_context","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","inherents","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_block_list","is_in_block_list_with_context","merkle_tree_for_segment_index","merkle_tree_for_segment_index_with_context","ne","ne","ne","ne","ne","new","next_epoch","next_epoch_with_context","offence","pre_genesis_object_count","pre_genesis_object_count_with_context","pre_genesis_object_seed","pre_genesis_object_seed_with_context","pre_genesis_object_size","pre_genesis_object_size_with_context","randomness","randomness","record_size","record_size_with_context","recorded_history_segment_size","recorded_history_segment_size_with_context","salt","salt_with_context","serialize","slot_duration","slot_duration","solution_range","solution_range_with_context","start_slot","submit_report_equivocation_extrinsic","submit_report_equivocation_extrinsic_with_context","submit_store_root_block_extrinsic","submit_store_root_block_extrinsic_with_context","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","CompatibleDigestItem","NextConfigDescriptor","NextEpochDescriptor","NextSaltDescriptor","NextSolutionRangeDescriptor","PreDigest","SaltDescriptor","Solution","SolutionRangeDescriptor","V1","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","added_weight","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_next_config_descriptor","as_next_epoch_descriptor","as_subspace_pre_digest","as_subspace_seal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","encode","encode","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoding","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_for_genesis","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","ne","ne","ne","ne","ne","piece_index","public_key","randomness","salt","salt","signature","slot","solution","solution_range","solution_range","subspace_pre_digest","subspace_seal","tag","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","c","INHERENT_IDENTIFIER","InherentDataProvider","InherentType","SubspaceInherentData","as_any","as_any_mut","borrow","borrow_mut","deref","from","from_mut","from_ref","from_timestamp_and_duration","into","into_any","into_any_arc","into_any_rc","new","provide_inherent_data","slot","subspace_inherent_data","subspace_replace_inherent_data","try_from","try_handle_error","try_into","type_id","unchecked_into","unique_saturated_into","vzip","DuplicateReport","ID","Kind","Offence","OffenceDetails","OffenceError","OnOffenceHandler","Other","ReportOffence","TimeSlot","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","encode","encode_to","eq","eq","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_known_offence","ne","ne","offender","offenders","on_offence","print","report_offence","time_slot","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","0"],"q":["sp_consensus_subspacesp_consensus_subspace::ConsensusLog","","","","","","sp_consensus_subspace::digestssp_consensus_subspace::digests::NextConfigDescriptor","sp_consensus_subspace::inherents","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sp_consensus_subspace::offence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sp_consensus_subspace::offence::OffenceError"],"d":["An consensus log item for Subspace.","Subspace epoch information","An equivocation proof for multiple block authorships on …","A Subspace farmer identifier. Necessarily equivalent to …","A Subspace farmer signature.","Key type for Subspace pallet.","How many blocks to wait before running the median …","The epoch has changed, and the epoch after the current one …","The epoch has changed. This provides information about the …","The eon has changed and the salt has changed because of …","The era has changed and the solution range has changed …","An opaque type used to represent the key ownership proof …","The <code>ConsensusEngineId</code> of Subspace.","Salt for this block.","Solution range for this block.","API necessary for block authorship with Subspace.","The cumulative weight of a Subspace block, i.e. sum of …","Configuration data used by the Subspace consensus engine.","Configuration data used by the Subspace consensus engine.","","","","","","","","","","","","","","","","","","","","","","","","","A constant value that is used in the threshold calculation …","A constant value that is used in the threshold calculation …","Verifies the equivocation proof by making sure that: both …","","","","","","","","","Configuration of the epoch.","Return the genesis configuration for Subspace. The …","Return the genesis configuration for Subspace. The …","Depth <code>K</code> after which a block enters the recorded history (a …","Depth <code>K</code> after which a block enters the recorded history (a …","Returns information regarding the current epoch.","Returns the slot that started the current epoch.","Returns the slot that started the current epoch.","Returns information regarding the current epoch.","","","","","Try to decode this <code>OpaqueKeyOwnershipProof</code> into the given …","","","","","","","","","","","","","","","","","","","","","","","Private implementation details of Subspace consensus …","The duration of this epoch.","","","","","","","","The epoch index.","The duration of epochs in slots.","","","","","","Extract block object mapping for a given block","Extract block object mapping for a given block","Try to decode an extrinsic as <code>store_root_block</code> extrinsic …","Try to decode an extrinsic as <code>store_root_block</code> extrinsic …","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Inherents for Subspace consensus","","","","","","","","","","","","","","","","","","","","","Check if <code>farmer_public_key</code> is in block list (due to …","Check if <code>farmer_public_key</code> is in block list (due to …","Get MerkleRoot for specified segment index","Get MerkleRoot for specified segment index","","","","","","Create a new <code>OpaqueKeyOwnershipProof</code> using the given …","Returns information regarding the next epoch (which was …","Returns information regarding the next epoch (which was …","Common traits and types that are useful for describing …","This constant defines the number of a pre-genesis objects …","This constant defines the number of a pre-genesis objects …","This constant defines the seed used for deriving …","This constant defines the seed used for deriving …","This constant defines the size (in bytes) of one …","This constant defines the size (in bytes) of one …","The randomness for the genesis epoch.","Randomness for this epoch.","The size of data in one piece (in bytes).","The size of data in one piece (in bytes).","Recorded history is encoded and plotted in segments of …","Recorded history is encoded and plotted in segments of …","Current salt.","Current salt.","","","The slot duration in milliseconds for Subspace. Currently, …","Current solution range.","Current solution range.","The starting slot of the epoch.","Submits an unsigned extrinsic to report an equivocation. …","Submits an unsigned extrinsic to report an equivocation. …","Submits an unsigned extrinsic to store root block. The …","Submits an unsigned extrinsic to store root block. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A digest item which is usable with Subspace consensus.","Information about the next epoch config, if changed. This …","Information about the next epoch. This is broadcast in the …","Salt, if changed. This is broadcast in the each block of …","Information about the solution range, if changed. This is …","A Subspace pre-runtime digest. This contains all data …","Salt for the block.","Solution","Information about the solution range for the block.","Version 1.","","","","","","","","","Returns the weight <em>added</em> by this digest, not the …","","","","","","","","","","","","","","","","","If this item is a Subspace config descriptor, return it.","If this item is a Subspace epoch descriptor, return it.","If this item is an Subspace pre-digest, return it.","If this item is a Subspace signature, return the signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Dummy solution for the genesis block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of encoded piece","Public key of the farmer that created solution","The value of randomness to use for the slot-assignment.","Salt used with challenges.","Salt used with challenges.","Signature of the tag","Slot","Solution (includes PoR)","Solution range used for challenges.","Solution range used for challenges.","Construct a digest item which contains a Subspace …","Construct a digest item which contains a Subspace seal.","Tag (hmac of encoding and salt)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of <code>c</code> in <code>SubspaceEpochConfiguration</code>.","The Subspace inherent identifier.","Provides the slot duration inherent data for Subspace.","The type of the Subspace inherent.","Auxiliary trait to extract Subspace inherent data.","","","","","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Creates the inherent data provider by calculating the slot …","","","","","Create new inherent data provider from the given <code>slot</code>.","","Returns the <code>slot</code> of this inherent data provider.","Get Subspace inherent data.","Replace Subspace inherent data.","","","","","","","","The report has already been sumbmitted.","Identifier which is unique for this kind of an offence.","The kind of an offence, is a byte string representing some …","A trait implemented by an offence report.","A details about an offending authority for a particular …","Errors that may happen on offence reports.","A trait to take action on an offence.","Other error has happened.","A trait for decoupling offence reporters from the actual …","A type that represents a point in time on an abstract …","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","Returns true iff all of the given offenders have been …","","","The offending authority id","The list of all offenders involved in this incident.","A handler for an offence of a particular kind.","","Report an <code>offence</code> and reward given <code>reporters</code>.","A point in time when this offence happened.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,1,2,3,4,1,2,3,5,4,1,2,3,5,4,1,2,3,5,4,1,2,3,5,4,2,3,0,1,2,3,4,1,2,3,4,4,6,6,6,6,6,6,6,6,1,2,3,5,5,4,1,2,3,5,4,1,2,3,5,4,1,2,3,5,4,1,2,3,5,4,3,0,4,3,5,1,2,3,5,4,4,2,1,2,3,5,4,6,6,6,6,1,2,3,4,1,2,3,3,5,4,1,2,3,5,4,1,2,3,5,4,0,1,2,3,5,4,1,2,3,5,4,1,2,3,5,4,1,2,3,5,4,6,6,6,6,1,2,3,5,4,5,6,6,0,6,6,6,6,6,6,2,4,6,6,6,6,6,6,3,2,2,6,6,4,6,6,6,6,1,2,3,5,4,1,2,3,4,1,2,3,5,4,1,2,3,5,4,1,2,3,5,4,3,1,2,3,5,4,1,2,3,5,4,3,5,1,2,3,5,4,7,8,9,10,11,12,0,0,0,0,0,0,0,0,0,13,14,15,16,13,17,18,19,20,15,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,21,21,21,21,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,16,17,18,19,20,14,15,16,13,17,18,19,20,14,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,16,13,17,18,19,20,14,14,16,18,20,14,15,15,17,19,21,21,14,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,13,14,15,16,13,17,18,19,20,14,15,16,13,17,18,19,20,16,17,18,19,20,14,15,16,13,17,18,19,20,22,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,23,23,23,23,23,23,23,25,26,0,0,0,0,0,25,0,26,27,25,27,25,27,25,27,25,27,27,27,27,27,27,27,27,27,27,25,27,25,27,25,27,25,27,25,27,25,27,25,27,25,27,25,27,28,25,27,27,26,29,25,28,26,27,27,25,27,25,27,25,27,27,25,27,25,27,27,25,27,30],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["equivocationproof",6]],["bool",15]],[[],["consensuslog",4]],[[],["subspacegenesisconfiguration",3]],[[],["subspaceepochconfiguration",3]],[[],["epoch",3]],[[]],[[]],[[]],[[]],null,[[["blockid",4]],[["result",4,["subspacegenesisconfiguration","apierror"]],["subspacegenesisconfiguration",3],["apierror",4]]],[[["executioncontext",4],["blockid",4]],[["result",4,["subspacegenesisconfiguration","apierror"]],["subspacegenesisconfiguration",3],["apierror",4]]],[[["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["blockid",4]],[["epoch",3],["result",4,["epoch","apierror"]],["apierror",4]]],[[["blockid",4]],[["result",4,["slot","apierror"]],["apierror",4],["slot",3]]],[[["executioncontext",4],["blockid",4]],[["result",4,["slot","apierror"]],["apierror",4],["slot",3]]],[[["executioncontext",4],["blockid",4]],[["epoch",3],["result",4,["epoch","apierror"]],["apierror",4]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["option",4],["decode",8]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],["result",4]],null,null,[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[]],null,null,[[["consensuslog",4]],["bool",15]],[[["subspacegenesisconfiguration",3]],["bool",15]],[[["subspaceepochconfiguration",3]],["bool",15]],[[["opaquekeyownershipproof",3]],["bool",15]],[[["epoch",3]],["bool",15]],[[["blockid",4]],[["result",4,["blockobjectmapping","apierror"]],["blockobjectmapping",3],["apierror",4]]],[[["executioncontext",4],["blockid",4]],[["result",4,["blockobjectmapping","apierror"]],["blockobjectmapping",3],["apierror",4]]],[[["u8",15],["vec",3,["u8"]],["blockid",4]],[["result",4,["option","apierror"]],["apierror",4],["option",4,["rootblock"]]]],[[["executioncontext",4],["u8",15],["vec",3,["u8"]],["blockid",4]],[["result",4,["option","apierror"]],["apierror",4],["option",4,["rootblock"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["nextconfigdescriptor",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["farmerpublickey",6],["blockid",4]],[["result",4,["bool","apierror"]],["apierror",4],["bool",15]]],[[["executioncontext",4],["farmerpublickey",6],["blockid",4]],[["result",4,["bool","apierror"]],["apierror",4],["bool",15]]],[[["u64",15],["blockid",4]],[["result",4,["option","apierror"]],["option",4,["sha256hash"]],["apierror",4]]],[[["u64",15],["executioncontext",4],["blockid",4]],[["result",4,["option","apierror"]],["option",4,["sha256hash"]],["apierror",4]]],[[["consensuslog",4]],["bool",15]],[[["subspacegenesisconfiguration",3]],["bool",15]],[[["subspaceepochconfiguration",3]],["bool",15]],[[["opaquekeyownershipproof",3]],["bool",15]],[[["epoch",3]],["bool",15]],[[["u8",15],["vec",3,["u8"]]],["opaquekeyownershipproof",3]],[[["blockid",4]],[["epoch",3],["result",4,["epoch","apierror"]],["apierror",4]]],[[["executioncontext",4],["blockid",4]],[["epoch",3],["result",4,["epoch","apierror"]],["apierror",4]]],null,[[["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["blockid",4]],[["apierror",4],["result",4,["vec","apierror"]],["vec",3,["u8"]]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["vec","apierror"]],["vec",3,["u8"]]]],[[["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],null,null,[[["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["u32","apierror"]],["u32",15]]],[[["blockid",4]],[["u64",15],["result",4,["u64","apierror"]],["apierror",4]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["result",4,["u64","apierror"]],["apierror",4]]],[[],["result",4]],[[],["duration",3]],null,[[["blockid",4]],[["u64",15],["result",4,["u64","apierror"]],["apierror",4]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["result",4,["u64","apierror"]],["apierror",4]]],null,[[["equivocationproof",6],["blockid",4]],[["apierror",4],["option",4],["result",4,["option","apierror"]]]],[[["equivocationproof",6],["executioncontext",4],["blockid",4]],[["apierror",4],["option",4],["result",4,["option","apierror"]]]],[[["rootblock",4],["blockid",4]],[["result",4,["apierror"]],["apierror",4]]],[[["rootblock",4],["executioncontext",4],["blockid",4]],[["result",4,["apierror"]],["apierror",4]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fnonce",8]]],[[["fnonce",8]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["subspaceblockweight",6]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["nextconfigdescriptor",4],["option",4,["nextconfigdescriptor"]]]],[[],[["nextepochdescriptor",3],["option",4,["nextepochdescriptor"]]]],[[],[["option",4,["predigest"]],["predigest",3]]],[[],[["option",4,["farmersignature"]],["farmersignature",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["solution",3]],[[],["predigest",3]],[[],["nextepochdescriptor",3]],[[],["nextconfigdescriptor",4]],[[],["solutionrangedescriptor",3]],[[],["saltdescriptor",3]],[[],["nextsolutionrangedescriptor",3]],[[],["nextsaltdescriptor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["nextepochdescriptor",3]],["bool",15]],[[["nextconfigdescriptor",4]],["bool",15]],[[["solutionrangedescriptor",3]],["bool",15]],[[["saltdescriptor",3]],["bool",15]],[[["nextsolutionrangedescriptor",3]],["bool",15]],[[["nextsaltdescriptor",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["nextepochdescriptor",3]],["bool",15]],[[["nextconfigdescriptor",4]],["bool",15]],[[["solutionrangedescriptor",3]],["bool",15]],[[["saltdescriptor",3]],["bool",15]],[[["nextsolutionrangedescriptor",3]],["bool",15]],[[["nextsaltdescriptor",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[["predigest",3]]],[[["farmersignature",6]]],null,[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fnonce",8]]],[[["fnonce",8]]],[[["fnonce",8]]],[[["fnonce",8]]],[[["fnonce",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["timestamp",3],["duration",3]]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["inherenttype",6]]],[[["inherentdata",3]],[["result",4,["error"]],["error",4]]],[[],["inherenttype",6]],[[],[["error",4],["result",4,["option","error"]],["option",4,["inherenttype"]]]],[[["inherenttype",6]]],[[],["result",4]],[[["inherentidentifier",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["offencedetails",3]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[["offenceerror",4]],["bool",15]],[[["offencedetails",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[["offenceerror",4]],["bool",15]],[[["offencedetails",3]],["bool",15]],null,[[],["vec",3]],[[]],[[]],[[],[["result",4,["offenceerror"]],["offenceerror",4]]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[["fnonce",8]]],[[]],[[]],null],"p":[[4,"ConsensusLog"],[3,"SubspaceGenesisConfiguration"],[3,"SubspaceEpochConfiguration"],[3,"Epoch"],[3,"OpaqueKeyOwnershipProof"],[8,"SubspaceApi"],[13,"NextEpochData"],[13,"NextConfigData"],[13,"SolutionRangeData"],[13,"SaltData"],[13,"NextSolutionRangeData"],[13,"NextSaltData"],[4,"NextConfigDescriptor"],[3,"Solution"],[3,"PreDigest"],[3,"NextEpochDescriptor"],[3,"SolutionRangeDescriptor"],[3,"SaltDescriptor"],[3,"NextSolutionRangeDescriptor"],[3,"NextSaltDescriptor"],[8,"CompatibleDigestItem"],[13,"V1"],[3,"InherentDataProvider"],[8,"SubspaceInherentData"],[4,"OffenceError"],[8,"Offence"],[3,"OffenceDetails"],[8,"ReportOffence"],[8,"OnOffenceHandler"],[13,"Other"]]},\
"subspace_archiving":{"doc":"Collection of modules used for dealing with archived state …","t":[0,0,0,3,3,4,13,6,13,13,13,13,13,13,6,13,13,13,13,4,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5],"n":["archiver","merkle_tree","pre_genesis_data","ArchivedSegment","Archiver","ArchiverInstantiationError","Block","BlockArchiver","BlockContinuation","BlockStart","InvalidBlockSmallSize","InvalidLastArchivedBlock","NoBlocksInvalidInitialState","Object","ObjectArchiver","ObjectContinuation","ObjectStart","RecordSizeTooSmall","RootBlock","Segment","SegmentItem","SegmentSizeTooSmall","SegmentSizesNotMultipleOfRecordSize","V0","WrongRecordAndSegmentCombination","add_block","add_block","add_object","add_object","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","into_block_archiver","into_block_archiver","is_piece_valid","last_archived_block_number","last_archived_block_number","ne","ne","ne","ne","new","object_mapping","partial_cmp","partial_cmp","partial_cmp","pieces","root_block","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_initial_state","with_initial_state","0","archived_block_bytes","block_bytes","items","0","0","0","0","bytes","bytes","bytes","MerkleTree","MerkleTreeWitnessError","Witness","WrongPosition","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_data","get_witness","hash","hash","init","init","init","into","into","into","is_valid","ne","ne","new","new","partial_cmp","partial_cmp","root","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","from_seed"],"q":["subspace_archiving","","","subspace_archiving::archiver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","subspace_archiving::archiver::ArchiverInstantiationError","","","subspace_archiving::archiver::Segment","subspace_archiving::archiver::SegmentItem","","","","","","","subspace_archiving::merkle_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","subspace_archiving::merkle_tree::MerkleTreeWitnessError","subspace_archiving::pre_genesis_data"],"d":["","This module includes Merkle Tree implementation used in …","","Archived segment as a combination of root block hash, …","Generic archiver for Subspace blockchain.","Archiver instantiation error","Contains full block inside","Block archiver for Subspace blockchain.","Continuation of the partial block spilled over into the …","Contains the beginning of the block inside, remainder will …","Invalid block, its size is smaller than already archived …","Invalid last archived block, its size is the same as …","No archived blocks, invalid initial state","Contains full object inside","Object archiver for Subspace blockchain.","Continuation of the partial object spilled over into the …","Contains the beginning of the object inside, remainder …","Record size it smaller that needed to hold any information","Root block","Segment represents a collection of items stored in …","Kinds of items that are contained within a segment","Segment size is not bigger than record size","Segment size is not a multiple of record size","","Wrong record and segment size, it will not be possible to …","Adds new block to internal buffer, potentially producing …","Adds new block to internal buffer, potentially producing …","Adds new object to internal buffer, potentially producing …","Adds new object to internal buffer, potentially producing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate witness embedded within a piece produced by …","Get last archived block if there was any","Get last archived block if there was any","","","","","Create a new instance with specified record size and …","Mappings for objects stored in corresponding pieces.","","","","Pieces that correspond to this segment","Root block of the segment","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new instance of block archiver with initial state …","Create a new instance of block archiver with initial state …","","Already archived portion of the block","Full block size","Segment items","","","","","Block bytes","Block bytes","Block bytes","Merkle Tree","Errors that can happen when creating a witness","Merkle Proof-based witness","Wrong position","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates new merkle tree from a list of source objects","Creates a Merkle Tree proof-based witness for a leaf at …","","","","","","","","","Check whether witness is valid for a specific leaf hash …","","","Create witness from vector of bytes, will return bytes …","Creates new merkle tree from a list of hashes","","","Get Merkle Root","","","","","","","","","","","","","","","","","","Derives a single object blob of a given size from given …"],"i":[0,0,0,0,0,0,1,0,1,1,2,2,2,1,0,1,1,2,1,0,0,2,2,3,2,4,5,6,5,3,1,7,2,5,3,1,7,2,5,3,1,7,2,3,1,7,2,3,1,2,3,1,3,1,3,1,3,1,3,1,3,1,7,2,5,3,1,7,2,5,3,1,7,2,5,3,1,3,1,7,2,3,1,7,2,2,5,3,1,7,2,5,3,1,2,3,1,7,2,5,3,1,7,2,5,6,5,0,4,5,3,1,7,2,5,7,3,1,2,7,7,3,1,3,1,7,2,2,3,1,7,2,5,3,1,7,2,5,3,1,7,2,5,3,1,7,2,5,4,5,8,9,9,10,11,12,13,14,15,16,17,0,0,0,18,19,18,20,19,18,20,19,18,20,19,18,20,19,18,19,19,18,20,19,18,20,19,18,20,19,18,19,18,18,20,19,18,20,20,20,19,18,19,18,20,19,18,20,19,19,18,19,20,19,18,20,19,18,20,18,19,18,20,19,18,20,19,18,20,19,18,20,21,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15],["vec",3,["u8"]],["blockobjectmapping",3]],[["vec",3,["archivedsegment"]],["archivedsegment",3]]],[[["u8",15],["vec",3,["u8"]],["blockobjectmapping",3]],[["vec",3,["archivedsegment"]],["archivedsegment",3]]],[[["u8",15],["vec",3,["u8"]]],[["vec",3,["archivedsegment"]],["archivedsegment",3]]],[[["u8",15],["vec",3,["u8"]]],[["vec",3,["archivedsegment"]],["archivedsegment",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["segment",4]],[[],["segmentitem",4]],[[],["archivedsegment",3]],[[],["archiverinstantiationerror",4]],[[]],[[]],[[]],[[]],[[["segment",4]],["ordering",4]],[[["segmentitem",4]],["ordering",4]],[[["archiverinstantiationerror",4]],["ordering",4]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["segment",4]],["bool",15]],[[["segmentitem",4]],["bool",15]],[[["archivedsegment",3]],["bool",15]],[[["archiverinstantiationerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["blockarchiver",6]],[[],["blockarchiver",6]],[[["usize",15],["sha256hash",6]],["bool",15]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u32"]],["u32",15]]],[[["segment",4]],["bool",15]],[[["segmentitem",4]],["bool",15]],[[["archivedsegment",3]],["bool",15]],[[["archiverinstantiationerror",4]],["bool",15]],[[["usize",15]],[["result",4,["archiverinstantiationerror"]],["archiverinstantiationerror",4]]],null,[[["segment",4]],[["option",4,["ordering"]],["ordering",4]]],[[["segmentitem",4]],[["option",4,["ordering"]],["ordering",4]]],[[["archiverinstantiationerror",4]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["rootblock",4],["asref",8],["blockobjectmapping",3]],[["result",4,["archiverinstantiationerror"]],["archiverinstantiationerror",4]]],[[["usize",15],["rootblock",4],["asref",8],["blockobjectmapping",3]],[["result",4,["archiverinstantiationerror"]],["archiverinstantiationerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["witness",3]],[[],["merkletreewitnesserror",4]],[[],["merkletree",3]],[[]],[[]],[[]],[[["witness",3]],["ordering",4]],[[["merkletreewitnesserror",4]],["ordering",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["witness",3]],["bool",15]],[[["merkletreewitnesserror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["usize",15]],[["merkletreewitnesserror",4],["result",4,["witness","merkletreewitnesserror"]],["witness",3]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["usize",15],["sha256hash",6]],["bool",15]],[[["witness",3]],["bool",15]],[[["merkletreewitnesserror",4]],["bool",15]],[[["cow",4]],[["result",4,["cow"]],["cow",4]]],[[]],[[["witness",3]],[["option",4,["ordering"]],["ordering",4]]],[[["merkletreewitnesserror",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["sha256hash",6]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[["asref",8],["u32",15]],[["u8",15],["vec",3,["u8"]]]]],"p":[[4,"SegmentItem"],[4,"ArchiverInstantiationError"],[4,"Segment"],[6,"BlockArchiver"],[3,"Archiver"],[6,"ObjectArchiver"],[3,"ArchivedSegment"],[13,"InvalidLastArchivedBlock"],[13,"InvalidBlockSmallSize"],[13,"V0"],[13,"Object"],[13,"ObjectStart"],[13,"ObjectContinuation"],[13,"RootBlock"],[13,"Block"],[13,"BlockStart"],[13,"BlockContinuation"],[4,"MerkleTreeWitnessError"],[3,"Witness"],[3,"MerkleTree"],[13,"WrongPosition"]]},\
"subspace_core_primitives":{"doc":"Core primitives for Subspace Network.","t":[3,17,6,17,6,4,17,6,6,6,13,11,11,11,11,12,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,4,3,4,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["LastArchivedBlock","PIECE_SIZE","Piece","RANDOMNESS_LENGTH","Randomness","RootBlock","SHA256_HASH_SIZE","Salt","Sha256Hash","Tag","V0","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","cmp","cmp","crypto","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deserialize","deserialize","encode_to","encode_to","eq","eq","fmt","fmt","from","from","hash","hash","hash","into","into","last_archived_block","merkle_tree_root","ne","ne","number","objects","partial_cmp","partial_cmp","prev_root_block_hash","segment_index","serialize","serialize","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","last_archived_block","merkle_tree_root","prev_root_block_hash","segment_index","hmac_sha256","sha256_hash","BlockObject","BlockObjectMapping","GlobalObject","PieceObject","PieceObjectMapping","V0","V0","V0","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","ne","ne","ne","ne","ne","objects","objects","offset","offset","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","piece_index","serialize","serialize","serialize","serialize","serialize","size","size","size","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","using_encoded","using_encoded","offset","size","offset","piece_index","size","offset","size"],"q":["subspace_core_primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","subspace_core_primitives::RootBlock","","","","subspace_core_primitives::crypto","","subspace_core_primitives::objects","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","subspace_core_primitives::objects::BlockObject","","subspace_core_primitives::objects::GlobalObject","","","subspace_core_primitives::objects::PieceObject",""],"d":["Last archived block","Piece size in Subspace Network (in bytes)","Piece size in Subspace Network","The length of the Randomness.","Randomness value.","Root block for a specific segment","Size of Sha2-256 hash output (in bytes)","Salt used for creating commitment tags for pieces.","Sha2-256 hash output","Commitment tag for a particular piece.","V0 of the root block data structure","","","","","<code>None</code> if the block was archived fully or number of bytes …","","","","","","","Various cryptographic utilities used across Subspace …","","","","","","","","","","","","","","","","","","","","","","Hash of the whole root block","","","","Last archived block","Merkle tree root of all pieces within segment","","","Block number","Data structures related to objects (useful data) stored on …","","","Hash of the root block of the previous segment","Segment index","","","","","","","","","","","","","","","Last archived block","Merkle tree root of all pieces within segment","Hash of the root block of the previous segment","Segment index","Hmac with Sha2-256 hash function.","Simple Sha2-256 hashing.","Object stored inside of the block","Mapping of objects stored inside of the block","Object stored inside in the history of the blockchain","Object stored inside of the block","Mapping of objects stored inside of the piece","V0 of object mapping data structure","V0 of object mapping data structure","V0 of object mapping data structure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Objects stored inside of the block","Objects stored inside of the block","Offset of the object (limited to 24-bit size internally)","Offset of the object","Offset of the object","","","","","","Piece index where object is contained (at least its …","","","","","","Offset of the object (limited to 24-bit size internally)","Offset of the object (limited to 24-bit size internally)","Offset of the object (limited to 24-bit size internally)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","24-bit little-endian offset of the object","24-bit little-endian size of the object","Offset of the object","Piece index where object is contained (at least its …","24-bit little-endian size of the object","Offset of the object","24-bit little-endian size of the object"],"i":[0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,2,1,2,1,2,1,0,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,1,1,2,1,2,0,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,3,3,3,0,0,0,0,0,0,0,4,5,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,7,8,4,7,5,8,6,7,8,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,7,8,4,5,6,4,7,5,8,6,6,4,7,5,8,6,4,5,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,4,7,5,8,6,7,8,9,9,10,10,10,11,11],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["lastarchivedblock",3]],[[],["rootblock",4]],[[]],[[]],[[["lastarchivedblock",3]],["ordering",4]],[[["rootblock",4]],["ordering",4]],null,[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[["lastarchivedblock",3]],["bool",15]],[[["rootblock",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["sha256hash",6]],[[]],[[]],[[]],[[],["lastarchivedblock",3]],[[],["sha256hash",6]],[[["lastarchivedblock",3]],["bool",15]],[[["rootblock",4]],["bool",15]],null,null,[[["lastarchivedblock",3]],[["option",4,["ordering"]],["ordering",4]]],[[["rootblock",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["sha256hash",6]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[],["type",3]],null,null,null,null,[[["asref",8]],["sha256hash",6]],[[["asref",8]],["sha256hash",6]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blockobject",4]],[[],["blockobjectmapping",3]],[[],["pieceobject",4]],[[],["pieceobjectmapping",3]],[[],["globalobject",4]],[[]],[[]],[[]],[[]],[[]],[[["blockobject",4]],["ordering",4]],[[["blockobjectmapping",3]],["ordering",4]],[[["pieceobject",4]],["ordering",4]],[[["pieceobjectmapping",3]],["ordering",4]],[[["globalobject",4]],["ordering",4]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[],["blockobjectmapping",3]],[[],["pieceobjectmapping",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[]],[[]],[[]],[[]],[[]],[[["blockobject",4]],["bool",15]],[[["blockobjectmapping",3]],["bool",15]],[[["pieceobject",4]],["bool",15]],[[["pieceobjectmapping",3]],["bool",15]],[[["globalobject",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockobject",4]],["bool",15]],[[["blockobjectmapping",3]],["bool",15]],[[["pieceobject",4]],["bool",15]],[[["pieceobjectmapping",3]],["bool",15]],[[["globalobject",4]],["bool",15]],null,null,[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[["blockobject",4]],[["option",4,["ordering"]],["ordering",4]]],[[["blockobjectmapping",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pieceobject",4]],[["option",4,["ordering"]],["ordering",4]]],[[["pieceobjectmapping",3]],[["option",4,["ordering"]],["ordering",4]]],[[["globalobject",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[["fnonce",8]]],[[["fnonce",8]]],null,null,null,null,null,null,null],"p":[[4,"RootBlock"],[3,"LastArchivedBlock"],[13,"V0"],[4,"BlockObject"],[4,"PieceObject"],[4,"GlobalObject"],[3,"BlockObjectMapping"],[3,"PieceObjectMapping"],[13,"V0"],[13,"V0"],[13,"V0"]]},\
"subspace_runtime":{"doc":"","t":[6,6,6,6,6,6,6,6,13,13,6,6,3,3,6,3,4,3,3,3,3,4,6,3,3,6,13,13,3,6,6,6,3,3,3,6,6,13,3,3,4,3,3,3,3,3,3,3,3,3,3,3,17,6,6,3,6,13,13,6,6,13,13,6,6,13,13,6,6,13,3,6,6,17,3,13,17,17,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AccountId","Address","AllModules","AllModulesWithSystem","AllPallets","AllPalletsWithSystem","Balance","Balances","Balances","Balances","BalancesConfig","Block","BlockHashCount","BlockLength","BlockNumber","BlockWeights","Call","ConfirmationDepthK","EonDuration","EpochDuration","EraDuration","Event","Executive","ExistentialDeposit","ExpectedBlockTime","Feeds","Feeds","Feeds","GenesisConfig","Hash","Header","Index","InitialSolutionRange","MaxLocks","MinimumPeriod","Moment","OffencesSubspace","OffencesSubspace","OffencesWeightSoftLimit","Origin","OriginCaller","PalletInfo","PreGenesisObjectCount","PreGenesisObjectSeed","PreGenesisObjectSize","RecordSize","RecordedHistorySegmentSize","ReportLongevity","Runtime","RuntimeApi","RuntimeApiImpl","SS58Prefix","SUBSPACE_GENESIS_EPOCH_CONFIG","Signature","SignedExtra","SlotProbability","Subspace","Subspace","Subspace","SubspaceConfig","Sudo","Sudo","Sudo","SudoConfig","System","System","System","SystemConfig","Timestamp","Timestamp","TransactionByteFee","TransactionPayment","UncheckedExtrinsic","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_nonce","add_filter","api","api_version","apply_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","assimilate_storage","balances","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","check_inherents","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","configuration","confirmation_depth_k","construct_runtime_api","current_epoch","current_epoch_start","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deserialize","dispatch","dispatch_bypass_filter","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","execute_block","execute_in_transaction","extract_block_object_mapping","extract_proof","extract_root_block","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_module_names","has_api","has_api_with","identity","identity","identity","index","inherent_extrinsics","initialize_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","is_in_block_list","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","merkle_tree_for_segment_index","metadata","metadata","name","native_version","ne","ne","ne","next_epoch","none","none","offchain_worker","opaque","pre_dispatch","pre_genesis_object_count","pre_genesis_object_seed","pre_genesis_object_size","proof_recorder","query_fee_details","query_info","record_proof","record_size","recorded_history_segment_size","reset_filter","root","root","salt","serialize","set_caller_from","signed","signed","solution_range","submit_report_equivocation_extrinsic","submit_store_root_block_extrinsic","subspace","sudo","system","system","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_transaction","validate_unsigned","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","dispatch","Block","BlockId","Header","SessionKeys","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_into_raw_public_keys","decode_with_depth_limit","default","deserialize","encode","encode_to","eq","fmt","from","from_mut","from_mut","from_ref","from_ref","generate","get_raw","identity","into","into_any","into_any_arc","into_any_rc","into_mut","into_raw_public_keys","into_ref","is_clear","key_ids","ne","serialize","subspace","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":["subspace_runtimesubspace_runtime::Call","","","","","","subspace_runtime::Event","","","","","","subspace_runtime::OriginCaller","","subspace_runtime::api","subspace_runtime::opaque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Some way of identifying an account on the chain. We …","The address format for describing accounts.","All modules included in the runtime as a nested tuple of …","All modules included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","Balance of an account.","","","","","Block type as expected by this runtime.","","","An index to a block.","We allow for 2 seconds of compute with a 6 second average …","","","","","","","Executive: handles dispatch to the various modules.","","","","","","","A hash of some data used by the chain.","Block header type as expected by this runtime.","Index of a transaction in the chain.","","","","Type used for expressing timestamp.","","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","","","","","Implements all runtime apis for the client side.","","The Subspace epoch configuration at genesis.","Alias to 512-bit hash when used in the context of a …","The SignedExtension to the basic transaction logic.","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtimeonvert to runtime origin with caller being system signed …","","Convert to runtime origin:","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter typehe version information used to identify this runtime when …","","","","","Create with system none origin and …","Create with system none origin and …","","Opaque types. These are used by the CLI to instantiate …","","","","","","","","","","","","Create with system root origin and no filter.","Create with system root origin and no filter.","","","","Create with system signed origin and …","Create with system signed origin and …paque block type.","Opaque block identifier type.","Opaque block header type.","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Generate a set of keys with optionally using the given …","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,1,2,0,0,2,0,0,0,0,0,3,0,0,4,1,5,3,2,4,5,0,6,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,31,31,1,3,2,1,3,2,1,3,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,5,4,4,1,5,3,2,4,1,5,3,2,4,4,32,4,4,1,3,2,1,3,2,1,3,2,1,3,2,4,1,3,2,31,31,2,2,1,3,2,4,4,1,3,2,4,6,4,6,4,5,4,4,1,5,3,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,1,1,1,1,1,1,5,5,5,5,3,3,2,2,2,2,2,2,2,31,32,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,4,4,1,1,5,5,3,3,2,2,31,31,32,32,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,4,4,1,1,5,5,3,3,2,2,31,31,32,32,6,6,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,2,2,2,2,6,6,1,3,2,30,4,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,6,4,2,2,2,2,2,2,4,4,4,30,0,1,3,2,4,5,5,4,0,4,4,4,4,6,4,4,6,4,4,5,5,5,4,31,5,5,5,4,4,4,31,31,31,3,1,3,2,4,1,5,3,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,1,1,1,1,1,1,5,3,2,31,32,6,5,1,3,2,1,3,2,1,3,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,4,1,3,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,4,4,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,4,1,5,3,2,31,32,6,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,0,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["accountid",6]],["index",6]],[[]],null,[[["blockid",4]],[["option",4,["u32"]],["apierror",4],["result",4,["option","apierror"]]]],[[],["applyextrinsicresult",6]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["storage",3]],[["string",3],["result",4,["string"]]]],null,[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["inherentdata",3],["block",6]],["checkinherentsresult",3]],[[],["runtime",3]],[[],["event",4]],[[],["origin",3]],[[],["origincaller",4]],[[],["call",4]],[[]],[[]],[[]],[[]],[[]],[[],["subspacegenesisconfiguration",3]],[[],["u32",15]],[[],["apiref",3]],[[],["epoch",3]],[[],["slot",3]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u8",15],["vec",3,["u8"]]],[["option",4,["vec"]],["vec",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],["genesisconfig",3]],[[],["result",4]],[[["origin",3]],["dispatchresultwithpostinfo",6]],[[["origin",3]],["dispatchresultwithpostinfo",6]],[[]],[[]],[[]],[[["block",6]],[["result",4,["u32"]],["u32",15]]],[[["runtime",3]],["bool",15]],[[["event",4]],["bool",15]],[[["origincaller",4]],["bool",15]],[[["call",4]],["bool",15]],[[["block",6]]],[[["fnonce",8]]],[[["block",6]],["blockobjectmapping",3]],[[],[["option",4,["storageproof"]],["storageproof",3]]],[[["u8",15],["vec",3,["u8"]]],[["option",4,["rootblock"]],["rootblock",4]]],[[],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["event",4,["runtime"]],["runtime",3]]],[[]],[[["event",4,["runtime"]],["runtime",3]]],[[["event",4]]],[[["event",4,["runtime"]],["runtime",3]]],[[["event",4]]],[[["event",4,["runtime"]],["runtime",3]]],[[["option",4]]],[[["origincaller",4]]],[[["runtime",3],["origin",6,["runtime"]]]],[[]],[[["runtime",3],["origin",6,["runtime"]]]],[[]],[[["feeds",6],["runtime",3],["callablecallfor",6,["feeds","runtime"]]]],[[["callablecallfor",6,["balances","runtime"]],["balances",6],["runtime",3]]],[[["callablecallfor",6,["subspace","runtime"]],["runtime",3],["subspace",6]]],[[["callablecallfor",6,["timestamp","runtime"]],["timestamp",6],["runtime",3]]],[[]],[[["callablecallfor",6,["system","runtime"]],["runtime",3],["system",6]]],[[["callablecallfor",6,["sudo","runtime"]],["runtime",3],["sudooption",4,["vec"]],["vec",3,["u8"]]],[["u8",15],["vec",3,["u8"]]]],[[],["runtimeversion",3]],[[]],[[],["blocknumber",6]],[[]],[[]],[[],["blockweights",3]],[[]],[[],["blocklength",3]],[[],["u8",15]],[[]],[[]],[[],["u64",15]],[[]],[[],["u32",15]],[[],["u64",15]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[],["moment",6]],[[]],[[],["u32",15]],[[]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["u128",15]],[[]],[[],["u32",15]],[[]],[[],["balance",6]],[[],["weight",6]],[[]],[[],["callmetadata",3]],[[["str",15]]],[[],["dispatchinfo",3]],[[]],[[["blockid",4]],[["bool",15],["apierror",4],["result",4,["bool","apierror"]]]],[[["blockid",4],["fn",8]],[["bool",15],["apierror",4],["result",4,["bool","apierror"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[["inherentdata",3]],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4,["changestriestate"]],["changestriestate",3]],[["storagechanges",6],["result",4,["storagechanges","string"]],["string",3]]],[[["farmerpublickey",6]],["bool",15]],[[],[["callablecallfor",6],["option",4,["callablecallfor"]]]],[[],[["option",4,["callablecallfor"]],["callablecallfor",6]]],[[],[["option",4,["callablecallfor"]],["callablecallfor",6]]],[[],[["callablecallfor",6],["option",4,["callablecallfor"]]]],[[],[["callablecallfor",6],["option",4,["callablecallfor"]]]],[[],[["callablecallfor",6],["option",4,["callablecallfor"]]]],[[["u64",15]],[["sha256hash",6],["option",4,["sha256hash"]]]],[[],["opaquemetadata",3]],[[],["runtimemetadataprefixed",3]],[[],[["option",4,["str"]],["str",15]]],[[],["nativeversion",3]],[[["event",4]],["bool",15]],[[["origincaller",4]],["bool",15]],[[["call",4]],["bool",15]],[[],["epoch",3]],[[]],[[]],[[]],null,[[],[["result",4,["transactionvalidityerror"]],["transactionvalidityerror",4]]],[[],["u32",15]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["u32",15]],[[],[["option",4,["proofrecorder"]],["proofrecorder",6]]],[[["u32",15]],[["balance",6],["feedetails",3,["balance"]]]],[[["u32",15]],[["runtimedispatchinfo",3,["balance"]],["balance",6]]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u64",15]],[[],["result",4]],[[]],[[]],[[]],[[],["u64",15]],[[["equivocationproof",6]],["option",4]],[[["rootblock",4]]],null,null,null,null,[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["event"]],["event",4,["runtime"]]]],[[],[["event",4],["result",4,["event"]]]],[[],["result",4]],[[],[["event",4,["runtime"]],["result",4,["event"]]]],[[],[["result",4,["event"]],["event",4]]],[[],[["event",4,["runtime"]],["result",4,["event"]]]],[[],[["result",4,["event"]],["event",4,["runtime"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transactionsource",4]],["transactionvalidity",6]],[[["transactionsource",4]],["transactionvalidity",6]],[[],["runtimeversion",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["option",4,["vec"]],["vec",3,["u8"]]]],null,null,null,null,[[["private",3]]],[[],["any",8]],[[],["any",8]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[],["sessionkeys",3]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],[["vec",3],["option",4,["vec"]]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],["sessionkeys",3]],[[],["result",4]],[[],[["u8",15],["vec",3,["u8"]]]],[[]],[[["sessionkeys",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["option",4,["vec"]],["vec",3,["u8"]]],[["u8",15],["vec",3,["u8"]]]],[[["keytypeid",3]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["vec",3]],[[]],[[],["bool",15]],[[]],[[["sessionkeys",3]],["bool",15]],[[],["result",4]],null,[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["type",3]],[[]],[[]],[[["fnonce",8]]],[[]]],"p":[[4,"Event"],[4,"Call"],[4,"OriginCaller"],[3,"Runtime"],[3,"Origin"],[3,"RuntimeApiImpl"],[3,"Version"],[3,"BlockHashCount"],[3,"BlockWeights"],[3,"BlockLength"],[3,"SS58Prefix"],[3,"EpochDuration"],[3,"EraDuration"],[3,"EonDuration"],[3,"InitialSolutionRange"],[3,"SlotProbability"],[3,"ExpectedBlockTime"],[3,"ConfirmationDepthK"],[3,"RecordSize"],[3,"RecordedHistorySegmentSize"],[3,"PreGenesisObjectSize"],[3,"PreGenesisObjectCount"],[3,"PreGenesisObjectSeed"],[3,"ReportLongevity"],[3,"MinimumPeriod"],[3,"ExistentialDeposit"],[3,"MaxLocks"],[3,"TransactionByteFee"],[3,"OffencesWeightSoftLimit"],[3,"PalletInfo"],[3,"GenesisConfig"],[3,"RuntimeApi"],[13,"System"],[13,"Timestamp"],[13,"Subspace"],[13,"Balances"],[13,"Sudo"],[13,"Feeds"],[13,"System"],[13,"Subspace"],[13,"Balances"],[13,"Sudo"],[13,"OffencesSubspace"],[13,"Feeds"],[13,"Void"],[13,"system"],[3,"SessionKeys"]]},\
"subspace_solving":{"doc":"Set of modules that implement utilities for solving and …","t":[17,3,11,11,11,11,5,11,5,5,11,11,11,11,5,11,11,11,11,11,11],"n":["SOLUTION_SIGNING_CONTEXT","SubspaceCodec","borrow","borrow_mut","clone","clone_into","create_tag","decode","derive_global_challenge","derive_local_challenge","encode","fmt","from","into","is_commitment_valid","is_cuda_available","new","to_owned","try_from","try_into","type_id"],"q":["subspace_solving","","","","","","","","","","","","","","","","","","","",""],"d":["Signing context used for creating solution signatures by …","Subspace codec is used to encode pieces of archived …","","","","","Create a commitment tag of a piece for a particular salt","Decode piece","Derive global slot challenge from epoch randomness","Derive local challenge for farmer’s public key hash from …","Create an encoding based on genesis piece using provided …","","","","Check whether commitment tag of a piece is valid for a …","Returns true if CUDA is available","New instance with 256-bit prime and 4096-byte genesis …","","","",""],"i":[0,0,1,1,1,1,0,1,0,0,1,1,1,1,0,1,1,1,1,1,1],"f":[null,null,[[]],[[]],[[],["subspacecodec",3]],[[]],[[["salt",6]],["tag",6]],[[["u64",15]],[["decodeerror",4],["result",4,["decodeerror"]]]],[[["into",8,["u64"]],["u64",15],["randomness",6]],["tag",6]],[[["asref",8]],["tag",6]],[[["u64",15]],[["result",4,["encodeerror"]],["encodeerror",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["piece",6],["salt",6],["tag",6]],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"SubspaceCodec"]]},\
"substrate_test_runtime":{"doc":"The Substrate runtime. This can be compiled with <code>#[no_std]</code>…","t":[12,6,6,4,6,13,6,6,3,6,13,3,3,3,6,6,3,3,3,3,3,4,3,6,6,6,13,6,3,3,13,13,3,3,3,3,13,13,13,3,3,3,3,3,3,3,3,3,3,13,13,8,3,13,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,11,12,12,12,12,12,12,12,12,12,12,12,12,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,3,3,6,11,11,11,11,11,11,11,11,11,11,11,5,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,17,17],"n":["0","AccountId","AccountSignature","AllowedSlots","AuraId","AuthoritiesChange","AuthorityId","Block","BlockHashCount","BlockNumber","ChangesTrieConfigUpdate","ConfirmationDepthK","DbWeight","DecodeFails","Digest","DigestItem","EonDuration","EpochDuration","EraDuration","Event","ExpectedBlockTime","Extrinsic","H256","Hash","Hashing","Header","IncludeData","Index","InitialSolutionRange","MinimumPeriod","OffchainIndexClear","OffchainIndexSet","Origin","PreGenesisObjectCount","PreGenesisObjectSeed","PreGenesisObjectSize","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots","PrimarySlots","RecordSize","RecordedHistorySegmentSize","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","SessionKeys","Slot","SlotProbability","StorageChange","Store","TestAPI","Transfer","Transfer","VERSION","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_nonce","add","add","add_filter","amount","api","api_version","apply_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_bytes","as_bytes_mut","as_fixed_bytes","as_fixed_bytes_mut","as_mut","as_mut_byte_slice","as_mut_ptr","as_mut_slice_of","as_ptr","as_ref","as_slice_of","assign_from_slice","authorities","balance_of","balance_of_with_context","benchmark_add_one","benchmark_add_one_with_context","benchmark_direct_call","benchmark_direct_call_with_context","benchmark_indirect_call","benchmark_indirect_call_with_context","bitand","bitand_assign","bitand_assign","bitor","bitor_assign","bitor_assign","bitxor","bitxor_assign","bitxor_assign","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","check","check","check_equal","check_inherents","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","configuration","configuration","confirmation_depth_k","constant_size","constant_size","construct_runtime_api","covers","current_epoch","current_epoch","current_epoch_start","current_epoch_start","current_set_id","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dispatch","do_trace_log","do_trace_log_with_context","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ecdsa","ed25519","encode","encode","encode_hex","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","extract_block_object_mapping","extract_proof","extract_root_block","fail_convert_parameter","fail_convert_parameter_with_context","fail_convert_return_value","fail_convert_return_value_with_context","fail_on_native","fail_on_native_with_context","fail_on_wasm","fail_on_wasm_with_context","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ffi_value","from_inner","from_low_u64_be","from_low_u64_le","from_low_u64_ne","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_str","function_signature_changed","function_signature_changed_before_version_2","function_signature_changed_before_version_2_with_context","function_signature_changed_with_context","generate","generate_key_ownership_proof","generate_key_ownership_proof","generate_session_keys","genesismap","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_block_number","get_block_number_with_context","get_hash","get_raw","grandpa_authorities","has_api","has_api_with","hash","identity","identity","identity","identity","identity","identity","identity","identity","index","index","index_mut","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_ffi_value","into_inner","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_resources_exhausting_tx","into_signed_tx","into_storage_changes","is_clear","is_clear","is_clear","is_in_block_list","is_secondary_plain_slots_allowed","is_secondary_vrf_slots_allowed","is_signed","is_zero","key_ids","len_bytes","max_encoded_len","max_encoded_len","merkle_tree_for_segment_index","metadata","name","native_version","ne","ne","ne","ne","new","next_epoch","next_epoch","nonce","none","offchain_worker","partial_cmp","partial_cmp","pre_genesis_object_count","pre_genesis_object_seed","pre_genesis_object_size","proof_recorder","protocol_name","random","random_using","randomize","randomize_using","record_proof","record_size","recorded_history_segment_size","repeat_byte","reset_filter","root","salt","saturating_add","saturating_sub","serialize","serialize","serialize","serialize","set_caller_from","signed","size_of","size_of","slot_duration","solution_range","sr25519","submit_report_equivocation_extrinsic","submit_report_equivocation_unsigned_extrinsic","submit_report_equivocation_unsigned_extrinsic","submit_store_root_block_extrinsic","system","take_block_number","take_block_number_with_context","test_ecdsa_crypto","test_ecdsa_crypto_with_context","test_ed25519_crypto","test_ed25519_crypto_with_context","test_multiple_arguments","test_multiple_arguments_with_context","test_sr25519_crypto","test_sr25519_crypto_with_context","test_storage","test_storage_with_context","test_witness","test_witness_with_context","to","to_fixed_bytes","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_low_u64_be","to_low_u64_le","to_low_u64_ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_transfer","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","use_trie","use_trie_with_context","using_encoded","using_encoded","validate_transaction","vec_with_capacity","vec_with_capacity_with_context","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_binary_logging_disabled","wasm_binary_logging_disabled_unwrap","wasm_binary_unwrap","zero","0","0","0","0","0","0","0","1","1","exhaust_resources_when_not_first","signature","transfer","dispatch","GenesisConfig","additional_storage_with_genesis","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","genesis_map","init","insert_genesis_block","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","BlockExecutor","Call","GenesisConfig","Module","Pallet","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","assimilate_storage","authorities","authorities","authorities","balance_of","balance_of_key","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_module_genesis_storage","build_storage","clone","clone","clone_into","clone_into","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","eq","eq","equivalent","equivalent","execute_block","execute_block","execute_transaction","finalize_block","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_block_number","get_call_name","get_call_names","get_dispatch_info","identity","index","init","init","init","init","initialize_block","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","migrate","name","ne","new_authorities","new_changes_trie_config","nonce_of","number","on_chain_storage_version","on_genesis","on_runtime_upgrade","parent_hash","polish_block","serialize","storage_digest","storage_info","take_block_number","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_transaction","vzip","vzip","vzip","vzip","WASM_BINARY","WASM_BINARY_BLOATY"],"q":["substrate_test_runtimesubstrate_test_runtime::Extrinsic","","","","","","","","","","","","substrate_test_runtime::api","substrate_test_runtime::genesismap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime::systemsubstrate_test_runtime::wasm_binary_logging_disabled",""],"d":["","An identifier for an account on this system.","The signature type used by accounts/transactions.","Types of allowed slots.","","","A Babe authority identifier. Necessarily equivalent to the …","A test block.","","The block number type used in this runtime.","","","","A type that can not be decoded.","The digest of a block.","The item of a block digest.","","","","","","Extrinsic for test-runtime.","Fixed-size uninterpreted hash type with 32 bytes (256 …","A simple hash type for all our hashing.","The hashing algorithm used.","A test block’s header.","","Index of a transaction.","","","","","","","","","Allow primary and secondary plain slots.","Allow primary and secondary VRF slots.","Only allow primary slots.","","","","","Implements all runtime apis for the client side.","","","","Unit type wrapper that represents a slot.","","","","","Calls in transactions.","","Test runtime version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts a byte slice containing the entire fixed hash.","Extracts a mutable byte slice containing the entire fixed …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","","","Returns a mutable raw pointer to the value.","","Returns a constant raw pointer to the value.","","","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","","Return the balance of the given account id.","Return the balance of the given account id.","A benchmark function that adds one to the given value and …","A benchmark function that adds one to the given value and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","Create a new instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traces log “Hey I’m runtime.”","Traces log “Hey I’m runtime.”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function that always fails to convert a parameter …","A function that always fails to convert a parameter …","A function that always fails to convert its return value …","A function that always fails to convert its return value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a hash type from the given bytes array of fixed …","","Constructs a hash type from the given reference to the …","","Constructs a hash type from the given reference to the …","","","","","","","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Create a new fixed-hash from the given slice <code>src</code>.","Creates a hash type instance from the given string.","The new signature.","A function for that the signature changed in version <code>2</code>.","A function for that the signature changed in version <code>2</code>.","The new signature.","Generate a set of keys with optionally using the given …","","","","Tool for creating the genesis block.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the initialized block number.","Returns the initialized block numberonverts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into a signed extrinsic, which will only end up …","Convert into a signed extrinsic.","","","","","","Whether plain secondary slots are allowed.","Whether VRF secondary slots are allowed.","","Returns <code>true</code> if no bits are set.","","Returns the size of this hash in bytes.","","","","","","Native version.","","","","","","","","","","","","","","","","","","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content …","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value using the …","","","","Returns a new fixed hash where all bits are set to the …","","","","Saturating addition.","Saturating subtraction.","","","","","","","","","","","","","","","","System manager: Handles all of the top-level stuff; …","Takes and returns the initialized block number.","Takes and returns the initialized block number.","Test that <code>ecdsa</code> crypto works in the runtime.","Test that <code>ecdsa</code> crypto works in the runtime.","Test that <code>ed25519</code> crypto works in the runtime.","Test that <code>ed25519</code> crypto works in the runtime.","Test that ensures that we can call a function that takes …","Test that ensures that we can call a function that takes …","Test that <code>sr25519</code> crypto works in the runtime.","Test that <code>sr25519</code> crypto works in the runtime.","Run various tests against storage.","Run various tests against storage.","Check a witness.","Check a witness.","","Returns the inner bytes array.","","","","","","","","","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as native-endian.","","","","","","","","","","","","Convert <code>&amp;self</code> into <code>&amp;Transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to convert <code>&amp;self</code> into <code>&amp;Transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trie no_std testing","trie no_std testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wasm binary unwrapped. If built with <code>SKIP_WASM_BUILD</code>, the …","Wasm binary unwrapped. If built with <code>SKIP_WASM_BUILD</code>, the …","Returns a new zero-initialized fixed hash.","","","","","","","","","","","","","","Configuration of a general Substrate test genesis block.","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","The block executor.","Dispatchable calls.","Genesis config for the module, allow to build genesis …","","Type alias to <code>Module</code>, to be used by <code>construct_runtime</code>.","","","","","","","","","","","Assimilate the storage for this module into pre-existing …","","","","","","","","","","","","","","","","","","Build the storage for this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute a transaction outside of the block execution …","Finalize the block.","","","","","","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Actually execute all transitioning for <code>block</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute a transaction outside of the block execution …","","","","","",""],"i":[1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,2,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,2,2,0,0,2,0,0,0,4,2,5,6,7,8,1,3,9,5,9,9,6,4,0,10,5,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,1,1,1,1,1,1,1,1,1,1,1,1,1,5,30,30,30,30,30,30,30,30,1,1,1,1,1,1,1,1,1,4,2,11,7,8,1,3,9,4,2,11,7,8,1,3,9,4,2,11,7,8,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,6,2,2,1,5,8,1,9,4,2,5,6,7,8,1,3,9,4,2,5,6,7,8,1,3,9,1,9,5,5,5,2,1,29,1,5,5,5,5,5,4,2,11,7,8,1,3,9,4,2,11,7,8,1,3,9,4,2,11,7,8,1,3,9,4,2,11,7,8,1,3,9,8,5,4,2,11,7,8,1,3,9,11,8,1,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,8,1,3,2,30,30,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,8,8,11,9,1,1,4,2,7,8,3,9,4,2,11,5,7,8,1,3,9,4,2,5,7,8,1,3,9,5,10,5,10,5,30,30,30,30,30,30,30,30,6,5,4,2,6,7,8,1,1,1,1,3,9,9,4,2,11,5,6,6,7,7,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,1,1,1,1,1,1,1,1,3,9,9,4,1,1,1,1,1,4,4,2,2,11,11,5,5,6,6,7,7,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,8,8,29,29,10,10,1,1,3,3,9,9,4,4,2,2,11,11,5,5,6,6,7,7,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,8,8,29,29,10,10,1,1,3,3,9,9,1,1,30,30,30,30,8,5,5,5,0,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,30,30,1,8,5,10,10,1,4,2,11,7,8,1,3,9,5,1,1,5,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,5,1,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,1,1,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,8,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,4,10,8,1,9,5,3,3,2,1,8,1,1,9,5,5,5,0,4,2,11,8,2,5,5,4,6,5,1,9,5,5,5,10,1,1,1,1,1,10,5,5,1,6,6,5,9,9,2,8,1,3,6,6,2,1,5,5,8,5,5,5,5,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,4,1,4,2,11,7,8,1,3,9,1,1,1,4,2,5,6,7,8,1,3,9,1,9,2,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,2,6,4,2,11,7,8,1,3,9,4,2,11,7,8,1,3,9,4,2,11,7,8,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,5,7,8,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,30,30,1,9,5,30,30,5,4,2,11,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,10,1,3,9,0,0,0,1,31,32,33,34,35,36,37,33,35,38,38,38,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,40,41,42,40,41,43,42,40,41,43,43,0,40,43,0,0,41,41,41,42,40,41,43,42,40,41,43,43,43,40,41,40,41,40,41,41,41,41,41,43,42,40,41,43,42,40,41,43,43,41,42,40,41,43,40,41,40,41,0,42,0,0,40,41,42,40,41,43,42,42,40,40,41,41,43,43,42,42,40,40,41,41,43,43,0,41,41,41,41,40,42,40,41,43,0,42,40,41,43,42,40,41,43,42,40,41,43,42,40,41,43,42,40,41,43,42,40,41,43,40,40,40,40,40,0,40,40,40,40,40,0,43,40,40,0,41,40,41,42,40,41,43,42,40,41,43,41,41,41,42,40,41,43,41,42,40,41,43,42,40,41,43,0,42,40,41,43,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["accountid",6]],["index",6]],[[["u64",15]],["slot",3]],[[["slot",3]],["slot",3]],[[]],null,null,[[["blockid",4]],[["result",4,["option","apierror"]],["option",4,["u32"]],["apierror",4]]],[[],["applyextrinsicresult",6]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[]],[[],[["vec",3,["auraid"]],["auraid",6]]],[[["accountid",6],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["accountid",6],["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["u64",15],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["u64",15],["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["h256",3]]],[[["h256",3]]],[[["h256",3]]],[[["h256",3]]],[[["h256",3]]],[[["h256",3]]],[[["h256",3]]],[[["h256",3]]],[[["h256",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["transactionvalidityerror",4],["result",4,["transactionvalidityerror"]]]],[[],[["transactionvalidityerror",4],["result",4,["transactionvalidityerror"]]]],[[["h256",3]]],[[["inherentdata",3],["block",6]],["checkinherentsresult",3]],[[]],[[]],[[]],[[],["transfer",3]],[[],["extrinsic",4]],[[],["runtime",3]],[[],["origin",3]],[[],["event",3]],[[],["sessionkeys",3]],[[],["h256",3]],[[],["allowedslots",4]],[[],["slot",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["h256",3]],["ordering",4]],[[["slot",3]],["ordering",4]],[[],["babegenesisconfiguration",3]],[[],["subspacegenesisconfiguration",3]],[[],["u32",15]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["apiref",3]],[[["h256",3]],["bool",15]],[[],["epoch",3]],[[],["epoch",3]],[[],["slot",3]],[[],["slot",3]],[[],["setid",6]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["h256","error"]],["h256",3],["error",3]]],[[],[["result",4,["allowedslots","error"]],["error",3],["allowedslots",4]]],[[],[["slot",3],["error",3],["result",4,["slot","error"]]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],[["vec",3],["option",4,["vec"]]]],[[["u8",15],["vec",3,["u8"]]],[["vec",3],["option",4,["vec"]]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[],["decodefails",3]],[[],["sessionkeys",3]],[[],["h256",3]],[[],["slot",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],[["h256",3],["result",4,["h256"]]]],[[],[["allowedslots",4],["result",4,["allowedslots"]]]],[[],["dispatchresultwithinfo",6]],[[["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[],[["u8",15],["vec",3,["u8"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transfer",3]],["bool",15]],[[["extrinsic",4]],["bool",15]],[[["decodefails",3]],["bool",15]],[[["runtime",3]],["bool",15]],[[["event",3]],["bool",15]],[[["sessionkeys",3]],["bool",15]],[[["h256",3]],["bool",15]],[[["allowedslots",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["block",6]]],[[["fnonce",8]]],[[["block",6]],["blockobjectmapping",3]],[[],[["storageproof",3],["option",4,["storageproof"]]]],[[["u8",15],["vec",3,["u8"]]],[["rootblock",4],["option",4,["rootblock"]]]],[[["decodefails",3],["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["decodefails",3],["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["blockid",4]],[["result",4,["decodefails","apierror"]],["decodefails",3],["apierror",4]]],[[["executioncontext",4],["blockid",4]],[["result",4,["decodefails","apierror"]],["decodefails",3],["apierror",4]]],[[["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[["origin",6,["runtime"]],["runtime",3]]],[[["event",4,["runtime"]],["runtime",3]]],[[]],[[["event",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["public",3]],["h256",3]],[[["keyring",4]],["h256",3]],[[["keyring",4]],["h256",3]],[[["public",3]],["h256",3]],[[],["h256",3]],[[["h160",3]],["h256",3]],[[],["h256",3]],[[]],[[],["h256",3]],[[]],[[]],[[["u64",15]],["slot",3]],null,[[["functioncontext",8]],[["string",3],["result",4,["string"]]]],[[],["h256",3]],[[["u64",15]],["h256",3]],[[["u64",15]],["h256",3]],[[["u64",15]],["hh256",3]],[[["str",15]],[["fromhexerror",4],["result",4,["h256","fromhexerror"]],["h256",3]]],[[["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["blockid",4]],[["vec",3,["u64"]],["apierror",4],["result",4,["vec","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["vec",3,["u64"]],["apierror",4],["result",4,["vec","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["option",4,["vec"]],["vec",3,["u8"]]],[["u8",15],["vec",3,["u8"]]]],[[["authorityid",6],["slot",3]],[["option",4,["opaquekeyownershipproof"]],["opaquekeyownershipproof",3]]],[[["authorityid",6],["setid",6]],[["opaquekeyownershipproof",3],["option",4,["opaquekeyownershipproof"]]]],[[["option",4,["vec"]],["vec",3,["u8"]]],[["u8",15],["vec",3,["u8"]]]],null,[[]],[[],["blocknumber",6]],[[]],[[],["u64",15]],[[]],[[],["runtimedbweight",3]],[[]],[[],["blocklength",3]],[[],["blockweights",3]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["u32",15]],[[]],[[]],[[],["u64",15]],[[]],[[],["u64",15]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[]],[[],["u32",15]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[],["u64",15]],[[["keytypeid",3]]],[[],["authoritylist",6]],[[["blockid",4]],[["bool",15],["apierror",4],["result",4,["bool","apierror"]]]],[[["blockid",4],["fn",8]],[["bool",15],["apierror",4],["result",4,["bool","apierror"]]]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[["inherentdata",3]],["vec",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["functioncontext",8]],[["string",3],["result",4,["string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["extrinsic",4]],[[],["extrinsic",4]],[[["option",4,["changestriestate"]],["changestriestate",3]],[["string",3],["storagechanges",6],["result",4,["storagechanges","string"]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["farmerpublickey",6]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["bool",15],["option",4,["bool"]]]],[[],["bool",15]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u64",15]],[["option",4,["sha256hash"]],["sha256hash",6]]],[[],["opaquemetadata",3]],[[],[["option",4,["str"]],["str",15]]],[[],["nativeversion",3]],[[["transfer",3]],["bool",15]],[[["extrinsic",4]],["bool",15]],[[["decodefails",3]],["bool",15]],[[["sessionkeys",3]],["bool",15]],[[["option",4]],["option",4]],[[],["epoch",3]],[[],["epoch",3]],null,[[]],[[]],[[["h256",3]],[["ordering",4],["option",4,["ordering"]]]],[[],[["ordering",4],["option",4,["ordering"]]]],[[],["u32",15]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["u32",15]],[[],[["option",4,["proofrecorder"]],["proofrecorder",6]]],[[]],[[],["h256",3]],[[],["h256",3]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[["u8",15]],["h256",3]],[[]],[[]],[[],["u64",15]],[[],["slot",3]],[[],["slot",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[["mallocsizeofops",3]],["usize",15]],[[["mallocsizeofops",3]],["usize",15]],[[],["slotduration",3]],[[],["u64",15]],null,[[["equivocationproof",6]],["option",4]],[[["equivocationproof",6],["opaquekeyownershipproof",3]],["option",4]],[[["equivocationproof",3,["numberfor"]],["opaquekeyownershipproof",3],["numberfor",6,["block"]]],["option",4]],[[["rootblock",4]]],null,[[["blockid",4]],[["apierror",4],["option",4,["u64"]],["result",4,["option","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["option",4,["u64"]],["result",4,["option","apierror"]]]],[[["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["u8",15],["u32",15],["blockid",4],["vec",3,["u8"]]],[["apierror",4],["result",4,["apierror"]]]],[[["executioncontext",4],["u8",15],["blockid",4],["u32",15],["vec",3,["u8"]]],[["apierror",4],["result",4,["apierror"]]]],[[["blockid",4]],[["result",4,["apierror"]],["apierror",4]]],[[["executioncontext",4],["blockid",4]],[["result",4,["apierror"]],["apierror",4]]],[[["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["executioncontext",4],["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["hash",6],["storageproof",3],["blockid",4]],[["apierror",4],["result",4,["apierror"]]]],[[["executioncontext",4],["blockid",4],["hash",6],["storageproof",3]],[["apierror",4],["result",4,["apierror"]]]],null,[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["transfer",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["transfer"]],["transfer",3]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[],["type",3]],[[],["type",3]],[[],[["metaform",4],["type",3,["metaform"]]]],[[],[["metaform",4],["type",3,["metaform"]]]],[[],[["metaform",4],["type",3,["metaform"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[["executioncontext",4],["blockid",4]],[["u64",15],["apierror",4],["result",4,["u64","apierror"]]]],[[]],[[]],[[["transactionsource",4]],["transactionvalidity",6]],[[["u32",15],["blockid",4]],[["apierror",4],["result",4,["vec","apierror"]],["vec",3,["u8"]]]],[[["executioncontext",4],["u32",15],["blockid",4]],[["apierror",4],["result",4,["vec","apierror"]],["vec",3,["u8"]]]],[[],["runtimeversion",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["h256",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["option",4,["vec"]],["vec",3,["u8"]]]],null,[[["block",6]],[["btreemap",3,["vec","vec"]],["vec",3,["u8"]]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["storage",3]],[[],["usize",15]],[[["storage",3]],["h256",3]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[["u64",15],["option",4,["changestrieconfiguration"]],["changestrieconfiguration",3],["option",4,["u64"]],["vec",3,["authorityid"]],["authorityid",6],["storage",3],["vec",3,["accountid"]],["accountid",6]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["storage",3]],[["string",3],["result",4,["string"]]]],[[],[["vec",3,["authorityid"]],["authorityid",6]]],[[],[["vec",3,["authorityid"]],["authorityid",6]]],null,[[["accountid",6]],["u64",15]],[[["accountid",6]],[["u8",15],["vec",3,["u8"]]]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["storage",3]],[["string",3],["result",4,["string"]]]],[[],[["result",4,["storage","string"]],["string",3],["storage",3]]],[[],["module",3]],[[]],[[]],[[]],[[],["storageversion",3]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[["u32",15]],[["result",4,["error"]],["error",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["dispatchresultwithpostinfo",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["module",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["block",6]],["header",6]],[[["block",6]]],[[["extrinsic",4]],["applyextrinsicresult",6]],[[],["header",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["blocknumber",6],["option",4,["blocknumber"]]]],[[],["str",15]],[[]],[[],["dispatchinfo",3]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["header",6]]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["runtimedbweight",3]],["u64",15]],[[],["str",15]],[[["module",3]],["bool",15]],[[],[["option",4,["vec"]],["vec",3,["authorityid"]]]],[[],[["option",4,["changestrieconfiguration"]],["option",4,["option"]]]],[[["accountid",6]],["u64",15]],[[],[["blocknumber",6],["option",4,["blocknumber"]]]],[[],["storageversion",3]],[[]],[[],["weight",6]],[[],["hash",3]],[[["block",6]]],[[],["result",4]],[[],[["option",4,["digest"]],["digest",6]]],[[],[["vec",3,["storageinfo"]],["storageinfo",3]]],[[],[["blocknumber",6],["option",4,["blocknumber"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extrinsic",4]],["transactionvalidity",6]],[[]],[[]],[[]],[[]],null,null],"p":[[3,"H256"],[4,"Extrinsic"],[4,"AllowedSlots"],[3,"Transfer"],[3,"Runtime"],[3,"Origin"],[3,"Event"],[3,"SessionKeys"],[3,"Slot"],[3,"RuntimeApiImpl"],[3,"DecodeFails"],[3,"BlockHashCount"],[3,"MinimumPeriod"],[3,"DbWeight"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"EpochDuration"],[3,"ExpectedBlockTime"],[3,"EraDuration"],[3,"EonDuration"],[3,"InitialSolutionRange"],[3,"SlotProbability"],[3,"ConfirmationDepthK"],[3,"RecordSize"],[3,"RecordedHistorySegmentSize"],[3,"PreGenesisObjectSize"],[3,"PreGenesisObjectCount"],[3,"PreGenesisObjectSeed"],[3,"RuntimeApi"],[8,"TestAPI"],[13,"AuthoritiesChange"],[13,"IncludeData"],[13,"StorageChange"],[13,"ChangesTrieConfigUpdate"],[13,"OffchainIndexSet"],[13,"OffchainIndexClear"],[13,"Store"],[13,"Transfer"],[3,"GenesisConfig"],[3,"Module"],[4,"Call"],[3,"BlockExecutor"],[3,"GenesisConfig"]]},\
"substrate_test_runtime_client":{"doc":"Client testing utilities.","t":[4,13,13,13,13,3,6,6,8,8,13,13,13,13,13,13,13,6,8,8,13,13,13,13,8,4,13,13,13,3,3,4,6,13,13,13,6,8,3,13,6,6,6,3,3,3,13,3,13,13,13,13,3,8,3,3,3,4,3,3,8,6,6,3,6,8,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,12,12,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,10,11,11,11,11,11,11,5,5,5,11,11,11,12,12,11,11,0,11,11,10,10,10,11,12,11,11,11,11,11,11,11,11,12,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,10,11,11,10,10,10,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,5,5,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,8,8,10,10,10,10,10,10,4,13,13,8,13,13,13,13,8,8,13,13,13,13,13,13,13,13,3,13,13,4,13,13,4,10,10,10,10,10,10,10,10,10,13,13,13,13,3,3,13,3,3,13,13,8,3,4,6,6,4,13,4,3,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,13,16,8,13,3,8,3,3,8,4,3,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,10,10,10,11,10,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,10,10,10,11,5,11,10,11,10,10,11,12,0,11,11,10,11,10,12,12,10,10,10,10,10,11,11,10,10,10,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,3,13,4,4,13,4,8,3,13,3,3,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,13,13,13,13,8,8,8,13,13,13,13,8,8,6,3,8,8,6,4,18,8,3,8,13,18,4,13,4,6,8,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,11,11,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,12,12,12,12,12,13,17,17,13,13,4,4,8,13,13,13,13,8,13,3,3,3,13,13,13,3,3,3,13,13,8,13,13,13,13,8,3,13,13,13,17,8,13,13,13,3,3,3,3,8,3,3,3,13,3,4,3,4,3,13,3,13,13,13,3,3,3,3,13,13,4,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,4,6,8,3,13,13,13,13,13,16,3,18,3,8,4,16,16,16,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,3,13,3,3,13,13,16,16,8,16,3,16,8,16,13,13,18,8,8,8,13,8,16,16,16,13,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,10,11,11,11,10,10,10,12,11,10,11,11,10,11,11,11,10,11,10,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,8,8,3,13,13,4,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,12,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,6,13,13,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,5,5],"n":["AccountKeyring","Alice","Alice","Alice","AlwaysWasm","Backend","Backend","BadBlocks","BlockBuilderExt","BlockchainEventsExt","Bob","Bob","Bob","Both","Charlie","Charlie","Charlie","Client","ClientBlockImportExt","ClientExt","Compiled","Dave","Dave","Dave","DefaultTestClientBuilderExt","Ed25519Keyring","Eve","Eve","Eve","ExecutionExtensions","ExecutionStrategies","ExecutionStrategy","ExecutorDispatch","Ferdie","Ferdie","Ferdie","ForkBlocks","GenesisInit","GenesisParameters","Interpreted","LightBackend","LightBackend","LightExecutor","LightFetcher","LocalExecutorDispatch","LongestChain","NativeElseWasm","NativeElseWasmExecutor","NativeWhenPossible","One","One","One","RpcHandlers","RpcHandlersExt","RpcSession","RpcTransactionError","RpcTransactionOutput","Sr25519Keyring","Storage","StorageChild","SyncCryptoStore","SyncCryptoStorePtr","TestClient","TestClientBuilder","TestClientBuilder","TestClientBuilderExt","Two","Two","Two","WasmExecutionMethod","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_child_storage","add_extra_child_storage","add_extra_storage","append_justification","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","assimilate_storage","backend","begin_operation","begin_state_operation","best_chain","block_construction","blockchain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_with_backend","build_with_backend","build_with_executor","build_with_longest_chain","build_with_longest_chain","build_with_native_executor","call","changes_trie_config","changes_trie_storage","child_info","children_default","clear","client","client_ext","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","commit_operation","data","data","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ecdsa_generate_new","ecdsa_public_keys","ecdsa_sign_prehashed","ed25519_generate_new","ed25519_public_keys","enable_offchain_indexing_api","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","finality_target","finalize_block","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_account_id","from_account_id","from_h256_public","from_h256_public","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_public","from_public","from_raw_public","from_raw_public","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","genesis_hash","genesis_init_mut","genesis_init_mut","genesis_init_mut","genesis_storage","genesis_storage","get_aux","get_hash","get_hash","get_hash","get_import_lock","get_manager","has_keys","hash","hash","hash","have_state_at","import","import_as_best","import_as_final","import_justified","importing","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_aux","insert_unknown","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","io_handler","is_clear","iter","iter","iter","iter","keys","leaves","manager_and_extensions","message","native_version","native_version","ne","new","new","new","new","new","new","new","new","new_light","new_light_fetcher","new_native_executor","new_test","new_test_with_tx_storage","offchain_storage","offchain_worker","other","pair","pair","prelude","public","public","push_changes_trie_configuration_update","push_storage_change","push_transfer","read_runtime_version","receiver","register_transaction_pool","remote_body","remote_call","remote_changes","remote_header","remote_read","remote_read_child","remove_leaf_block","result","revert","rpc_query","runtime_version","send_transaction","send_transaction","session","set_block_rules","set_execution_strategy","set_extensions_factory","set_heap_pages","set_keystore","set_no_genesis","set_wasm_code","sign","sign","sign_with","sign_with_all","sign_with_any","sr25519_generate_new","sr25519_public_keys","sr25519_vrf_sign","state_at","strategies","supported_keys","syncing","to_account_id","to_account_id","to_h256_public","to_h256_public","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw_public","to_raw_public","to_raw_public_vec","to_raw_public_vec","to_seed","to_seed","to_string","to_string","to_string","top","trait_tests","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","usage_info","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_blocks","with_backend","with_default_backend","with_pruning_window","with_remote_body","with_remote_call","with_tx_storage","Client","ClientConfig","LocalCallExecutor","__clone_box","__clone_box","apply_finality","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block","block_body","block_hash","block_indexed_body","block_indexed_body","block_status","block_status","block_status","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache","call","call_api_at","chain_info","check_block","child_storage","child_storage_hash","child_storage_keys","child_storage_keys_iter","clone","clone","clone_into","clone_into","code_at","contextual_call","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","execution_extensions","execution_proof","executor","finality_notification_sinks","finality_notification_stream","finalize_block","finalize_block","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis","genesis_hash","get_aux","has_indexed_transaction","hash","header","header","header_metadata","header_proof","header_proof_with_cht_size","import","import_as_best","import_as_final","import_block","import_justified","import_notification_sinks","import_notification_stream","indexed_transaction","info","init","init","init","insert_aux","insert_header_metadata","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","justifications","key_changes","key_changes_proof","key_changes_proof_with_cht_size","light","lock_import_and_run","max_key_changes_range","native_version","new","new","new_block","new_block_at","new_in_mem","new_with_backend","no_genesis","number","number","offchain_indexing_api","offchain_worker_enabled","prove_execution","read_child_proof","read_proof","read_proof_collection","remove_header_metadata","revert","runtime_api","runtime_version","runtime_version","runtime_version_at","runtime_version_at","state_at","status","storage","storage_changes_notification_stream","storage_collection","storage_hash","storage_keys","storage_keys_iter","storage_pairs","to_hash","to_number","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","uncles","uncles","unique_saturated_into","unique_saturated_into","unique_saturated_into","unsafe_revert","usage_info","verify_range_proof","vzip","vzip","vzip","wait_for_blocks","wasm_runtime_overrides","wasm_runtime_substitutes","construct_genesis_block","new_light","ClientBlockImportExt","ClientExt","finalize_block","genesis_hash","import","import_as_best","import_as_final","import_justified","AccountKeyring","Alice","Alice","BlockBuilderExt","Bob","Bob","Charlie","Charlie","ClientBlockImportExt","ClientExt","Compiled","Dave","Dave","Eve","Eve","Ferdie","Ferdie","Interpreted","NativeElseWasmExecutor","One","One","Sr25519Keyring","Two","Two","WasmExecutionMethod","finalize_block","genesis_hash","import","import_as_best","import_as_final","import_justified","push_changes_trie_configuration_update","push_storage_change","push_transfer","All","ArchiveAll","ArchiveCanonical","Auto","Backend","BenchmarkingState","BlockBody","BlockImportOperation","BlockchainDb","Constrained","Custom","Database","DatabaseSettings","DatabaseSource","DbHash","DbState","KeepBlocks","ParityDb","PruningMode","RefTrackingState","RocksDb","Some","StorageChain","TransactionStorageMode","__clone_box","__clone_box","__clone_box","__clone_box","apply_to_key_values_while","apply_to_key_values_while","apply_to_keys_while","apply_to_keys_while","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_trie_backend","bench","block_indexed_body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","cache","changes_trie_cht_root","child_keys","child_keys","child_storage","child_storage","child_storage_root","child_storage_root","children","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit","commit","contains","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exists_child_storage","exists_child_storage","exists_storage","exists_storage","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_child_keys_with_prefix","for_child_keys_with_prefix","for_key_values_with_prefix","for_key_values_with_prefix","for_keys_with_prefix","for_keys_with_prefix","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_read_and_written_keys","get_whitelist","has_indexed_transaction","hash","header","header_cht_root","header_metadata","id","indexed_transaction","info","init","init","init","init","init","init","init","init","init","insert_aux","insert_header_metadata","inspect_state","inspect_state","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_archive","is_clear","justifications","keep_blocks","keep_blocks","keys","keys","last_finalized","leaves","light","mark_finalized","mark_head","ne","new","next_child_storage_key","next_child_storage_key","next_storage_key","next_storage_key","number","offchain","pairs","pairs","path","proof_size","read_write_count","register_overlay_stats","register_overlay_stats","remove_header_metadata","reset_read_write_count","reset_storage","set_block_data","set_genesis_state","set_path","set_whitelist","source","state","state_cache_child_ratio","state_cache_size","state_pruning","status","storage","storage","storage_hash","storage_hash","storage_root","storage_root","supports_ref_counting","to_owned","to_owned","to_owned","to_owned","to_string","transaction_storage","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_cache","update_changes_trie","update_db_storage","update_offchain_storage","update_storage","update_transaction_index","usage_info","usage_info","value_size","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","with_get","0","cache_size","cache_size","paritydb_path","path","path","rocksdb_path","0","0","BenchmarkingState","LightStorage","as_any","as_any_mut","borrow","borrow_mut","cache","changes_trie_cht_root","deref","deref_mut","drop","finalize_header","from","from_mut","from_mut","from_ref","from_ref","get_aux","hash","header","header_cht_root","header_metadata","import_header","info","init","insert_aux","insert_header_metadata","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","last_finalized","new","new_test","number","remove_header_metadata","set_head","status","try_from","try_into","type_id","unchecked_into","unique_saturated_into","usage_info","vzip","LocalStorage","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","compare_and_set","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","get","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","new","new_test","remove","set","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Codec","Compiled","ExtendHostFunctions","Externalities","Interpreted","NativeElseWasmExecutor","NativeExecutionDispatch","NativeVersion","RuntimeVersion","RuntimeVersionOf","WasmExecutionMethod","WasmExecutor","__clone_box","__clone_box","api_version","apis","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","authoring_version","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","can_author_with","can_author_with","can_call_with","child_storage","child_storage_hash","child_storage_root","clear","clear_child_prefix","clear_child_storage","clear_prefix","clear_storage","clone","clone","clone_into","clone_into","commit","decode","decode_all","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deregister_extension","deserialize","dispatch","drop","drop","drop","encode_to","eq","equivalent","error","exists_child_storage","exists_storage","extension","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_read_and_written_keys","get_whitelist","has_api_with","identity","impl_name","impl_version","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","kill_child_storage","native_version","ne","new","next_child_storage_key","next_storage_key","place_child_storage","place_storage","proof_size","read_embedded_version","read_runtime_version","read_write_count","register_extension","reset_read_write_count","runtime_version","runtime_version","runtime_version","sandbox","serialize","set_child_storage","set_offchain_storage","set_storage","set_whitelist","spec_name","spec_version","storage","storage_append","storage_changes_root","storage_commit_transaction","storage_hash","storage_index_transaction","storage_renew_transaction_index","storage_rollback_transaction","storage_root","storage_start_transaction","to_keyed_vec","to_owned","to_owned","to_string","transaction_version","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","wipe","with_externalities_safe","Allocator","ApiError","ApplySnapshotFailed","CantDeserializeWasm","CodeNotFound","ErasingFailed","Error","Externalities","FunctionExecution","FunctionRefIsNull","HeapBaseNotFoundOrInvalid","ImportedGlobalsUnsupported","InitializerHasTooManyExpressions","Instantiation","InvalidCode","InvalidData","InvalidHeapPages","InvalidIndex","InvalidInitializerExpression","InvalidMemory","InvalidMemoryReference","InvalidModule","InvalidReturn","MethodNotFound","NoTable","NoTableEntryWithIndex","Other","Other","Result","Runtime","RuntimeConstruction","RuntimeHasStartFn","RuntimePanicked","SharedMemUnsupported","TableElementIsNotAFunction","Trap","VersionInvalid","WasmError","Wasmi","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","0","0","0","EnvironmentDefinitionCorrupted","GuestEnvironment","GuestExternals","Instantiation","InstantiationError","Memory","ModuleDecoding","SandboxBackend","SandboxContext","SandboxInstance","StartTrapped","Store","SupervisorFuncIndex","TryWasmer","UnregisteredInstance","Wasmi","Wasmi","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_wasmi","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_thunk","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_global_val","init","init","init","init","init","init","init","init","init","instance","instance_teardown","instantiate","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invoke","invoke","invoke_index","memory","memory_teardown","ne","new","new_memory","read","read_into","register","supervisor_context","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_from","0","ENCODED_MAX_SIZE","F32","F32","F64","F64","Function","FunctionContext","HostFunctions","I32","I32","I64","I64","IntoValue","MaybeRefUnwindSafe","MemoryId","Pointer","PointerType","ReadPrimitive","Result","ReturnValue","SIZE","Sandbox","Signature","TryFromValue","Unit","VALUE_TYPE","Value","Value","ValueType","WordSize","WritePrimitive","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocate_memory","args","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_i32","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deallocate_memory","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ffi_value","from_ffi_value","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_global_val","host_functions","identity","identity","init","init","init","init","init","instance_new","instance_teardown","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_ffi_value","into_ffi_value","into_ffi_value","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_value","into_value","invoke","memory_get","memory_new","memory_set","memory_teardown","name","ne","ne","ne","ne","new","new","new_with_args","null","offset","read_memory","read_memory_into","read_primitive","read_primitive","read_primitive","return_value","sandbox","signature","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from_value","try_from_value","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value_type","vzip","vzip","vzip","vzip","vzip","write_memory","write_primitive","write_primitive","write_primitive","0","0","0","0","0","AlreadyStarted","DEFAULT_CALL_STACK_LIMIT","DEFAULT_VALUE_STACK_LIMIT","DivisionByZero","ElemUninitialized","Error","ExternVal","Externals","F32","F32","F64","F64","FromRuntimeValue","Func","FuncInstance","FuncInvocation","FuncRef","Function","Global","Global","GlobalDescriptor","GlobalInstance","GlobalRef","Host","Host","HostError","I32","I32","I64","I64","ImportResolver","ImportsBuilder","Instantiation","InvalidConversionToInt","InvalidLittleEndianBuffer","LINEAR_MEMORY_PAGE_SIZE","LittleEndianConvert","Memory","Memory","MemoryAccessOutOfBounds","MemoryDescriptor","MemoryInstance","MemoryRef","Module","ModuleImportResolver","ModuleInstance","ModuleRef","NopExternals","NotResumable","NotStartedModuleRef","ResumableError","RuntimeArgs","RuntimeValue","Signature","StackOverflow","StackRecycler","Table","Table","TableAccessOutOfBounds","TableDescriptor","TableInstance","TableRef","Trap","Trap","Trap","TrapKind","UnexpectedSignature","Unreachable","Validation","Value","ValueError","ValueType","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","alloc","alloc","alloc","alloc_host","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_func","as_global","as_host_error","as_memory","as_ref","as_table","assert_no_start","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","copy","copy_nonoverlapping","current_size","current_size","decode_f32","decode_f64","default","default","default","deny_floating_point","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","direct_access","direct_access_mut","downcast","downcast_mut","downcast_rc","downcast_ref","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","erase","export_by_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_buffer","from_little_endian","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parity_wasm_module","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_runtime_value","get","get","get","get_into","get_value","globals","grow","grow","has_start","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial","initial","initial","initial_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_host_error","into_kind","into_little_endian","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invoke","invoke_export","invoke_export_with_stack","invoke_index","invoke_index","invoke_resumable","invoke_with_stack","is","is_host","is_mutable","is_mutable","is_resumable","kind","len","maximum","maximum","maximum","maximum_size","memory_units","nan_preserving_float","ne","ne","new","new","new","new","not_started_instance","nth","nth_checked","nth_value_checked","params","push_resolver","resolve_func","resolve_func","resolve_func","resolve_func","resolve_global","resolve_global","resolve_global","resolve_global","resolve_memory","resolve_memory","resolve_memory","resolve_memory","resolve_table","resolve_table","resolve_table","resolve_table","resumable_value_type","resume_execution","return_type","run_start","run_start_with_stack","set","set","set","set_value","signature","start_execution","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_host_error","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","value_type","value_type","value_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_direct_access","with_direct_access_mut","with_externvals","with_limits","with_resolver","zero","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ByteSize","Bytes","Pages","RoundUpTo","Words","__clone_box","__clone_box","__clone_box","add","add","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","byte_size","byte_size","byte_size","byte_size","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","mul","mul","mul","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","round_up_to","size_of","sub","sub","sub","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","F32","F64","__clone_box","__clone_box","abs","abs","add","add","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","div","div","drop","drop","eq","eq","fmt","fmt","fract","fract","from","from","from","from","from","from","from_bits","from_bits","from_float","from_float","from_little_endian","from_little_endian","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_runtime_value","from_runtime_value","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_little_endian","into_little_endian","into_mut","into_mut","into_ref","into_ref","is_nan","is_nan","max","max","min","min","mul","mul","neg","neg","partial_cmp","partial_cmp","rem","rem","sub","sub","to_bits","to_bits","to_float","to_float","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","AlwaysCanAuthor","BlockOrigin","BlockStatus","CacheKeyId","CanAuthorWith","CanAuthorWithNativeVersion","CannotPropose","CannotSign","ChainLookup","ClientImport","ConsensusBroadcast","CreateProposer","DisableProofRecording","ENABLED","EnableProofRecording","Environment","Error","Error","Error","Error","FaultyTimer","File","Genesis","InChainPruned","InChainWithState","IncompatibleAuthoringRuntime","InherentData","InherentData","InvalidAuthoritiesSet","InvalidAuthority","InvalidIntermediate","InvalidJustification","InvalidSignature","IoTerminated","KnownBad","NativeRuntimeMissing","NetworkBroadcast","NetworkInitialSync","NeverCanAuthor","NoIntermediate","NoNetwork","NoProofRecorded","Other","Own","Proof","Proof","ProofRecording","ProofRecording","Proposal","Proposal","Proposer","Proposer","Queued","RuntimeVersionMissing","SLOT_KEY","SelectChain","SlotData","StateBackend","StateUnavailable","SyncOracle","Transaction","Transaction","TrieBackendStorage","Unknown","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","apply_to_key_values_while","apply_to_keys_while","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_trie_backend","aura_inherent_data","aura_replace_inherent_data","babe_inherent_data","babe_replace_inherent_data","best_chain","blake2_128","blake2_128_concat","blake2_256","block","block_validation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_author_with","can_author_with","can_author_with","can_author_with","child_keys","child_storage","child_storage_hash","child_storage_root","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","decode","decode_all","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","eq","eq","equivalent","equivalent","error","evaluation","exists_child_storage","exists_storage","finality_target","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_child_keys_with_prefix","for_key_values_with_prefix","for_keys_with_prefix","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","full_storage_root","get_data","get_read_and_written_keys","get_whitelist","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_proof","into_proof","into_proof","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_major_syncing","is_major_syncing","is_offline","is_offline","keys","leaves","len","new","new","next_child_storage_key","next_storage_key","pairs","proof","proof_size","propose","put_data","read_write_count","register_overlay_stats","replace_data","reset_read_write_count","set_whitelist","slot_duration","source","storage","storage_changes","storage_hash","storage_proof","storage_root","subspace_inherent_data","subspace_replace_inherent_data","timestamp_inherent_data","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","uncles","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","usage_info","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","0","0","0","0","0","0","0","0","0","1","1","native","on_chain","BlockAnnounceValidator","Chain","DefaultBlockAnnounceValidator","Failure","Success","Validation","as_any","as_any","as_any_mut","as_any_mut","block_status","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","ne","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate","validate","vzip","vzip","disconnect","is_new_best","CannotPropose","CannotSign","ChainLookup","ClientImport","Error","FaultyTimer","IncompatibleAuthoringRuntime","InherentData","InvalidAuthoritiesSet","InvalidAuthority","InvalidIntermediate","InvalidJustification","InvalidSignature","IoTerminated","NativeRuntimeMissing","NoIntermediate","Other","Result","RuntimeVersionMissing","StateUnavailable","0","0","0","0","0","0","0","0","0","1","1","native","on_chain","BadProposalFormat","Error","Result","WrongNumber","WrongParentHash","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","evaluate_initial","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","source","to_string","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","0","expected","expected","got","got","test_blockchain_query_by_number_gets_canonical","test_children_for_backend","test_leaves_for_backend"],"q":["substrate_test_runtime_clientsubstrate_test_runtime_client::clientsubstrate_test_runtime_client::client::genesis","substrate_test_runtime_client::client::light","substrate_test_runtime_client::client_ext","","","","","","","","substrate_test_runtime_client::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sc_client_dbsubstrate_test_runtime_client::sc_client_db::DatabaseSource","","","","","","","substrate_test_runtime_client::sc_client_db::KeepBlocks","substrate_test_runtime_client::sc_client_db::PruningMode","substrate_test_runtime_client::sc_client_db::bench","substrate_test_runtime_client::sc_client_db::light","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sc_client_db::offchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sc_executorsubstrate_test_runtime_client::sc_executor::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sc_executor::error::Error","","","","","","","","","","","","","","","","substrate_test_runtime_client::sc_executor::error::WasmError","","","substrate_test_runtime_client::sc_executor::sandboxsubstrate_test_runtime_client::sc_executor::sandbox::Memory","substrate_test_runtime_client::sc_executor::sp_wasm_interfacesubstrate_test_runtime_client::sc_executor::sp_wasm_interface::ReturnValue","substrate_test_runtime_client::sc_executor::sp_wasm_interface::Value","","","","substrate_test_runtime_client::sc_executor::wasmisubstrate_test_runtime_client::sc_executor::wasmi::Error","","","","","","","","","substrate_test_runtime_client::sc_executor::wasmi::ExternVal","","","","substrate_test_runtime_client::sc_executor::wasmi::ResumableError","substrate_test_runtime_client::sc_executor::wasmi::RuntimeValue","","","","substrate_test_runtime_client::sc_executor::wasmi::TrapKind","substrate_test_runtime_client::sc_executor::wasmi::memory_units","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sc_executor::wasmi::nan_preserving_float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sp_consensussubstrate_test_runtime_client::sp_consensus::Error","","","","","","","","","","","","","substrate_test_runtime_client::sp_consensus::block_validation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sp_consensus::block_validation::Validation","","substrate_test_runtime_client::sp_consensus::error","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sp_consensus::error::Error","","","","","","","","","","","","","substrate_test_runtime_client::sp_consensus::evaluation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","substrate_test_runtime_client::sp_consensus::evaluation::Error","","","","","substrate_test_runtime_client::trait_tests","",""],"d":["Set of test accounts.","","","","Use the given wasm module.","Disk backend.","Test client database backend.","Known bad block hashes.","Extension trait for test block builder.","An extension trait for <code>BlockchainEvents</code>.","","","","Run with both the wasm and the native variant (if …","","","","Test client type with <code>LocalExecutorDispatch</code> and generic …","Extension trait for a test client around block importing.","Extension trait for a test client.","Uses the Wasmtime compiled runtime.","","","","A <code>TestClientBuilder</code> with default backend and executor.","Set of test accounts.","","","","A producer of execution extensions for offchain calls.","Execution strategies settings.","Strategy for executing a call into the runtime.","Test client executor.","","","","Expected hashes of blocks at given heights.","A genesis storage initialization trait.","Parameters of test-client builder with test-runtime.","Uses the Wasmi interpreter.","Test client light database backend.","Test client light database backend.","Test client light executor.","Implementation of light client fetcher used in tests.","A unit struct which implements <code>NativeExecutionDispatch</code> …","Implement Longest Chain Select implementation where ‘…","First native, then if that fails or is not possible, wasm.","A generic <code>CodeExecutor</code> implementation that uses a delegate …","Execute with the native equivalent if it is compatible …","","","","RPC handlers that can perform RPC queries.","An extension trait for <code>RpcHandlers</code>.","An RPC session. Used to perform in-memory RPC queries (ie. …","An error for when the RPC call fails.","The output of an RPC transaction.","Set of test accounts.","Struct containing data needed for a storage.","Child trie storage data.","Sync version of the CryptoStore","A pointer to a keystore.","A test client with default backend.","A builder for creating a test client instance.","A <code>TestClient</code> with <code>test-runtime</code> builder.","A <code>test-runtime</code> extensions to <code>TestClientBuilder</code>.","","","","Specification of different methods of executing the …","","","","","","","","","","","","Extend child storage","Add an extra value into the genesis storage.","Add an extra child value into the genesis storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Give access to the underlying backend of these clients","","","","Execution strategy used when constructing blocks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the test client.","Build the test client and the backend.","","Build the test client with the given native executor.","Build the test client and longest chain selector.","","Build the test client with the given native executor.","","Set changes trie configuration for genesis.","","Associated child info for a child trie.","Children trie storage data. The key does not including …","","Substrate Client and associated logic.","Client extension for tests.","","","","","","","","","","","","","","","","","","","","","","","A Number that indicates the error type that occurred.","","Child data for storage.","A Primitive or Structured value that contains additional …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate a new ecdsa key pair for the given key type and …","Returns all ecdsa public keys for the given key type.","Generate an ECDSA signature for a given pre-hashed message.","Generate a new ed25519 key pair for the given key type and …","Returns all ed25519 public keys for the given key type.","Enable the offchain indexing api.","","","","","","","","","","","Based on the execution context and capabilities it produces","","Finalize a block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Returns hash of the genesis block.","Returns a mutable reference to the genesis parameters.","","Alter the genesis storage parameters.","Construct genesis storage.","","","","","","","Gets the corresponding manager for the execution strategy.","Checks if the private keys for the given public key and …","","","","","Import block to the chain. No finality.","Import a block and make it our best block if possible.","Import a block and finalize it.","Import block with justification(s), finalizes block.","Execution strategy used when importing blocks.","","","","","","","","","","","","","","","","","","","","","Insert a new key. This doesn’t require any known of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides access to the underlying <code>MetaIoHandler</code>","","Returns an iterator over all test accounts.","","Returns an iterator over all test accounts.","","List all supported keys","","Create <code>ExecutionManager</code> and <code>Extensions</code> for given offchain …","A String providing a short description of the error.","","","","Creates new client instance used for tests.","Create new <code>TestClientBuilder</code>","","Create new <code>ExecutionExtensions</code> given a <code>keystore</code> and …","Create new instance.","Creates an RPC session.","Instantiate a new LongestChain for Backend B","Create a new instance of database backend.","Creates new light client instance used for tests.","Creates new light client fetcher used for tests.","Create a new native executor.","Create new memory-backed client backend for tests.","Create new memory-backed client backend for tests.","","Execution strategy used for offchain workers.","Execution strategy used in other cases.","","","A prelude to import in tests.","","","Add changes trie configuration update extrinsic to the …","Add storage change extrinsic to the block.","Add transfer extrinsic to the block.","","An async receiver if data will be returned via a callback.","Register transaction pool extension.","","","","","","","","The output string of the transaction if any.","","Starts an RPC query.","","Send a transaction through the RpcHandlers.","","The session object.","Sets custom block rules.","Set the execution strategy that should be used by all …","Set the new extensions_factory","Override the default value for Wasm heap pages.","Set the keystore that should be used by the externalities.","Disable writing genesis.","Set the wasm code that should be used at genesis.","","","Sign with key","Sign with all keys","Sign with any key","Generate a new sr25519 key pair for the given key type and …","Returns all sr25519 public keys for the given key type.","Generate VRF signature for given transcript data.","","Get a reference to the execution strategies.","Find intersection between provided keys and supported keys","Execution strategy used when syncing.","","","","","","","","","","","","","","","","","","","","","","","","","Top trie storage data.","tests that should hold for all implementations of certain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for <code>count</code> blocks to be imported in the node and then …","Create a new instance of the test client builder.","Create new <code>TestClientBuilder</code> with default backend.","Create new <code>TestClientBuilder</code> with default backend and …","Sets remote body callback.","Sets remote call callback.","Create new <code>TestClientBuilder</code> with default backend and …","Substrate Client","Relevant client configuration items relevant for the …","Call executor that executes methods locally, querying all …","","","","","","","","","","","","","","","","","Get block status.","Get block body by id.","","","","","","","","","","Get blockchain info.","","","","","","","","","","Get the code at a given block.","","","","","","","","","","","","","","","returns a reference to the finality notification sinks …","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Tool for creating the genesis block.","","Query auxiliary data from key-value store.","","","","Get block header by id.","","","Reads given header and generates CHT-based header proof …","","","","","","returns a reference to the block import notification sinks …","Get block import event stream.","","","","","","Insert auxiliary data into key-value store.","","","","","","","","","","","","","","","","","","","","","","","Does the same work as <code>key_changes_proof</code>, but assumes that …","Light client utilities.","","","","Creates new instance of local call executor.","Creates new Substrate Client with given blockchain and …","","","Create an instance of in-memory client.","Create a client with the explicitly provided backend. This …","Skip writing genesis state on first start.","","","If true, allows access from the runtime to write into …","Enable the offchain worker db.","","","","","","Attempts to revert the chain by <code>n</code> blocks guaranteeing that …","","","","","Get the RuntimeVersion at a given block.","Get a reference to the state at a given block.","","","Get storage changes event stream.","","","","","","","","","","","","","","","","","","","","","","","Gets the uncles of the block with <code>target_hash</code> going back …","","","","Attempts to revert the chain by <code>n</code> blocks disregarding …","Get usage info about current client.","","","","","","Path where WASM files exist to override the on-chain WASM.","Map of WASM runtime substitute starting at the child of …","Create a genesis block, given the initial storage.","Create an instance of light client.","Extension trait for a test client around block importing.","Extension trait for a test client.","Finalize a block.","Returns hash of the genesis block.","Import block to the chain. No finality.","Import a block and make it our best block if possible.","Import a block and finalize it.","Import block with justification(s), finalizes block.","Set of test accounts.","","","Extension trait for test block builder.","","","","","Extension trait for a test client around block importing.","Extension trait for a test client.","Uses the Wasmtime compiled runtime.","","","","","","","Uses the Wasmi interpreter.","A generic <code>CodeExecutor</code> implementation that uses a delegate …","","","Set of test accounts.","","","Specification of different methods of executing the …","Finalize a block.","Returns hash of the genesis block.","Import block to the chain. No finality.","Import a block and make it our best block if possible.","Import a block and finalize it.","Import block with justification(s), finalizes block.","Add changes trie configuration update extrinsic to the …","Add storage change extrinsic to the block.","Add transfer extrinsic to the block.","Keep full block history.","No pruning. Canonicalization is a no-op.","Canonicalization discards non-canonical nodes. All the …","Check given path, and see if there is an existing database …","Disk backend.","State that manages the backend database reference. Allows …","Store block body as an encoded list of full transactions …","Database transaction","Block database","Maintain a pruning window.","Use a custom already-open database.","","Database settings.","Where to find the database..","Hash type that this backend uses for the database.","DB-backed patricia trie state, transaction type is an …","Block pruning settings.","Load a ParityDb database from a given path.","Pruning mode.","A reference tracking state.","Load a RocksDB database from a given path. Recommended for …","Keep N recent finalized blocks.","Store a list of hashes in the BODY column and each …","Block body storage scheme.","","","","","","","","","","","","","","","","","","","","","","","","","","","","State backend that’s useful for benchmarking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit the <code>transaction</code> to the database atomically. Any …","","Check if the value exists in the database without …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Retrieve the value previously stored against <code>key</code> or <code>None</code> if","","","","","","","","Is this an archive (either ArchiveAll or ArchiveCanonical) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this an archive (either ArchiveAll or ArchiveCanonical) …","","","Create a mode that keeps given number of blocks.","Block pruning mode.","","","","","RocksDB-based light client blockchain storage.","","","","Create a new instance that creates a database in a …","","","","","","RocksDB-based offchain workers local storage.","","","Return path for databases that are stored on disk.","","Get the key tracking information for the state db.","","","","Reset the key tracking information for the state db.","","","","Set path for databases that are stored on disk.","","Where to find the database.","","Ratio of cache size dedicated to child tries.","State cache size.","State pruning mode.","","","","","","","","Check if database supports internal ref counting for state …","","","","","","Block body/Transaction storage scheme.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check value size in the database possibly without …","","","","","","","","","","","Call <code>f</code> with the value previously stored against <code>key</code>.","","Cache size in MiB. Used only by <code>RocksDb</code> variant of …","Cache size in MiB.","Path to the paritydb database.","Path to the database.","Path to the database.","Path to the rocksdb database.","","","State that manages the backend database reference. Allows …","Light blockchain storage. Stores most recent headers + …","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","Create new storage with given settings.","Create new memory-backed <code>LightStorage</code> for tests.","","","","","","","","","","","","Offchain local storage","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","Create offchain local storage with given <code>KeyValueDB</code> …","Create new offchain storage for tests (backed by memorydb)","","","","","","","","","","Trait that allows zero-copy read/write of value-references …","Uses the Wasmtime compiled runtime.","Host functions for custom runtime interfaces that should …","The Substrate externalities.","Uses the Wasmi interpreter.","A generic <code>CodeExecutor</code> implementation that uses a delegate …","Delegate for dispatching a CodeExecutor call.","","Runtime version. This should not be thought of as classic …","Extracts the runtime version of a given runtime code.","Specification of different methods of executing the …","An abstraction over Wasm code executor. Supports selecting …","","","Returns the api version found for api with <code>id</code>.","List of supported API “features” along with their …","","","","","","","<code>authoring_version</code> is the version of the authorship …","","","","","","","","","","","Check if this version matches other version for authoring …","Authoring runtimes that this native runtime supports.","Check if this version matches other version for calling …","Read child runtime storage.","Get child storage value hash.","Get the trie root of a child storage map.","","Clear child storage entries which keys are start with the …","Clear a child storage entry (<code>key</code>) of current contract …","Clear storage entries which keys are start with the given …","Clear a storage entry (<code>key</code>) of current contract being …","","","","","…","","","","","","","","","","","","","","","Dispatch a method in the runtime.","","","","","","","Rust executor possible errors.","Whether a child storage entry exists.","Whether a storage entry exists.","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","…","…","Check if the given api with <code>api_id</code> is implemented and the …","","Name of the implementation of the spec. This is of little …","Version of the implementation of the specification. Nodes …","","","","","","","","","","","","","","","","","","","","","","","Clear an entire child storage.","Provide native runtime version.","","Create new instance.","Returns the key immediately following the given key, if it …","Returns the key immediately following the given key, if it …","Set or clear a child storage entry.","Set or clear a storage entry (<code>key</code>) of current contract …","…","Take the runtime blob and scan it for the custom wasm …","","…","","…","Extract <code>RuntimeVersion</code> of the given <code>runtime_code</code>.","","Basic runtime version info.","This module implements sandboxing support in the runtime.","","Set child storage entry <code>key</code> of current contract being …","Write a key value pair to the offchain storage database.","Set storage entry <code>key</code> of current contract being called …","…","Identifies the different Substrate runtimes. There’ll be …","Version of the runtime specification. A full-node will not …","Read runtime storage.","Append storage item.","Get the changes trie root of the current storage overlay …","Commit the last transaction started by …","Get storage value hash.","Index specified transaction slice and store it.","Renew existing piece of transaction storage.","Rollback the last transaction started by …","Get the trie root of the current storage map.","Start a new nested transaction.","","","","","All existing dispatches are fully compatible when this …","","","","","","","","","","","","","","","","","","","","","","","…","Set up the externalities and safe calling environment to …","","","Failure to reinitialize runtime instance from snapshot.","Wasm code could not be deserialized.","Code could not be read from the state.","Failure to erase the wasm memory.","Error type.","","","","","","","Instantiation error.","","","The number of heap pages requested is disallowed by the …","","","The module does not export a linear memory named <code>memory</code>.","","Wasm code failed validation.","","","","","","Other error happenend.","Result type alias.","","","","","","","","","Type for errors occurring during Wasm runtime construction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Something wrong with the environment definition. It either …","An environment in which the guest module is instantiated.","Implementation of <code>Externals</code> that allows execution of guest …","Module is a well-formed webassembly binary but could not …","Error occurred during instantiation of a sandboxed module.","Memory reference in terms of a selected backend","Provided module isn’t recognized as a valid webassembly …","Sandbox backend to use","The sandbox context used to execute sandboxed functions.","Sandboxed instance of a wasm module.","Module is well-formed, instantiated and linked, but while …","This struct keeps track of all sandboxed components.","Index of a function inside the supervisor.","Use wasmer backend if available. Fall back to wasmi …","An unregistered sandboxed instance.","Wasm interpreter","Wasmi memory reference","","","","","","","","","","","","","","","","","","","","","View as wasmi memory","","","","","","","","","","","","","","","","","","","","","","","Decodes an environment definition from the given raw bytes.","","","","","","","","","","","","","","","","","","","Returns dispatch thunk by <code>instance_idx</code>.","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get the value from a global with the given <code>name</code>.","","","","","","","","","","Returns <code>SandboxInstance</code> by <code>instance_idx</code>.","Tear down the instance at the specified index.","Instantiate a guest module and return it’s index in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoke a function in the supervisor environment.","Invoke an exported function by a name.","","Returns reference to a memory instance by <code>memory_idx</code>.","Tear down the memory at the specified index.","","Create a new empty sandbox store.","Create a new memory instance and return it’s index.","","","Finalizes instantiation of this module.","Returns the supervisor context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum number of bytes <code>ReturnValue</code> might occupy when …","An <code>f32</code> value type.","A 32-bit floating-point number stored as raw bit pattern.","An <code>f64</code> value type.","A 64-bit floating-point number stored as raw bit pattern.","Something that provides a function implementation on the …","Context used by <code>Function</code> to interact with the allocator …","Something that provides implementations for host functions.","An <code>i32</code> value type.","A 32-bit integer.","An <code>i64</code> value type.","A 64-bit integer.","Something that can be converted into a wasm compatible …","A trait that requires <code>RefUnwindSafe</code> when <code>feature = std</code>.","Sandbox memory identifier.","Type to represent a pointer in wasm at the host.","Something that can be wrapped in a wasm <code>Pointer</code>.","Something that can read a primitive from a wasm memory …","Result type used by traits in this crate.","Typed value that can be returned from a function.","The size of the type in wasm.","Something that provides access to the sandbox.","The Signature of a function","Something that can may be created from a wasm <code>Value</code>.","For returning nothing.","The type of the value in wasm.","Values supported by Substrate on the boundary between …","For returning some concrete value.","Value types supported by Substrate on the boundary between …","The word size used in wasm. Normally known as <code>usize</code> in …","Something that can write a primitive to wasm memory …","","","","","","Allocate a memory instance of <code>size</code> bytes.","The arguments of a function.","","","","","","","","","","","Return <code>Self</code> as <code>i32</code>.","","","","","","","","","","","","","","","","","Cast this pointer of type <code>T</code> to a pointer of type <code>R</code>.","","","","","","","","","","","Deallocate a given memory instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute this function with the given arguments.","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get the value from a global with the given <code>name</code>. The …","Returns the host functions <code>Self</code> provides.","","","","","","","","Create a new sandbox instance.","Delete a sandbox instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert <code>self</code> into a wasm <code>Value</code>.","","Invoke an exported function by a name.","Get sandbox memory from the <code>memory_id</code> instance at <code>offset</code> …","Create a new memory instance with the given <code>initial</code> size …","Set sandbox memory from the given value.","Delete a memory instance.","Returns the name of this function.","","","","","Create a new instance of <code>Self</code>.","Create a new instance of <code>Signature</code>.","Create a new instance of <code>Signature</code> with the given <code>args</code> and …","Create a null pointer.","Calculate the offset from this pointer.","Read memory from <code>address</code> into a vector.","Read memory into the given <code>dest</code> buffer from <code>address</code>.","Read a primitive from the given memory location <code>ptr</code>.","","","The optional return value of a function.","Provides access to the sandbox.","Returns the signature of this function.","","","","","","","","","","","","","","Try to convert the given <code>Value</code> into <code>Self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type of this value.","","","","","","Write the given data at <code>address</code> into the memory.","Write the given value <code>t</code> to the given memory location <code>ptr</code>.","","","","","","","","The invocation has already been started.","Maximum number of levels on the call stack.","Maximum number of bytes on the value stack.","Attempt to divide by zero.","Attempt to access table element which is uninitialized …","Internal interpreter error.","An external value is the runtime representation of an …","Trait that allows to implement host functions.","32-bit IEEE 754-2008 floating point number.","Value of 32-bit IEEE 754-2008 floating point number.","64-bit IEEE 754-2008 floating point number.","Value of 64-bit IEEE 754-2008 floating point number.","Trait for creating value from a <code>RuntimeValue</code>.","Function.","Runtime representation of a function.","A resumable invocation handle. This struct is returned by …","Reference to a function (See <code>FuncInstance</code> for details).","Function-level error.","Global.","Global-level error.","Description of a global variable.","Runtime representation of a global variable (or <code>global</code> for …","Reference to a global variable (See <code>GlobalInstance</code> for …","Error specified by the host.","Custom embedder error.","Trait that allows the host to return custom error.","32-bit signed or unsigned integer.","Value of 32-bit signed or unsigned integer.","64-bit signed or unsigned integer.","Value of 64-bit signed or unsigned integer.","Resolver of a module’s dependencies.","Convenience builder of <code>ImportResolver</code>.","Error while instantiating a module. Might occur when …","Attempt to make a conversion to an int failed.","The buffer is too short for the type being deserialized","Size of a page of linear memory - 64KiB.","Convert from and to little endian.","Memory.","Memory-level error.","Attempt to load or store at the address which lies outside …","Description of a linear memory.","Runtime representation of a linear memory (or <code>memory</code> for …","Reference to a memory (See <code>MemoryInstance</code> for details).","Deserialized module prepared for instantiation.","Version of <code>ImportResolver</code> specialized for a single module.","A module instance is the runtime representation of a module…","Reference to a <code>ModuleInstance</code>.","Implementation of <code>Externals</code> that just traps on <code>invoke_index</code>…","The invocation is not resumable.","Mostly instantiated <code>ModuleRef</code>.","A resumable invocation error.","Wrapper around slice of <code>RuntimeValue</code> for using it as an …","Runtime representation of a value.","Signature of a function.","Stack overflow.","Used to recycle stacks instead of allocating them …","Table.","Table-level error.","Attempt to access table element at index which lies …","Description of a table.","Runtime representation of a table.","Reference to a table (See <code>TableInstance</code> for details).","Error type which can be thrown by wasm code or by host …","Trap.","Trap happened.","Error type which can be thrown by wasm code or by host …","Attempt to invoke a function with mismatching signature.","Wasm code executed <code>unreachable</code> opcode.","Module validation error. Might occur only at load time.","Value-level error.","Error for <code>LittleEndianConvert</code>","Type of a value.","","","","","","","","","","Allocate a memory instance.","Allocate a table instance.","Allocate a global variable instance.","Allocate a function instance for a host function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get underlying function reference if this <code>ExternVal</code> …","Get underlying global variable reference if this <code>ExternVal</code> …","Returns a reference to a <code>HostError</code> if this <code>Error</code> …","Get underlying memory reference if this <code>ExternVal</code> contains …","","Get underlying table reference if this <code>ExternVal</code> contains …","Returns fully instantiated module without running <code>start</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill the memory region with the specified value.","Clears any values left on the stack to avoid leaking them …","","","","","","","","","","","","","","","","","","","Copy contents of one memory region to another.","Copy contents of one memory region to another …","Returns current linear memory size.","Returns current size of the table.","Creates new value by interpreting passed u32 as f32.","Creates new value by interpreting passed u64 as f64.","","","Creates new default value of given type.","Fail if the module contains any floating-point operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides direct access to the underlying memory buffer.","Provides direct mutable access to the underlying memory …","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set every byte in the entire linear memory to 0, …","Find export by a name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create <code>Module</code> from a given buffer.","Convert from little endian buffer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Create <code>Module</code> from <code>parity_wasm::elements::Module</code>.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Create a value of type <code>Self</code> from a given <code>RuntimeValue</code>.","Copy data from memory at given offset.","Get the specific value in the table","Get the value of this global variable.","Copy data from given offset in the memory into <code>target</code> …","Get value from memory at given offset.","Access all globals. This is a non-standard API so it’s …","Increases the size of the linear memory by given number of …","Increases the size of the table by given number of …","Whether or not the module has a <code>start</code> function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns number of pages this <code>MemoryInstance</code> was created …","Returns initial size of the requested table.","Returns initial size (in pages) of the requested memory.","Returns size this table was created with.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>HostError</code> if this <code>Error</code> represents some host error.","Converts into kind of this trap.","Convert to little endian buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoke this function.","Invoke exported function by a name.","Invoke exported function by a name using recycled stacks.","Perform invoke of a host function by specified <code>index</code>.","","Invoke the function, get a resumable handle. This handle …","Invoke this function using recycled stacks.","Returns true if the trait object wraps an object of type …","Whether this trap is specified by the host.","Returns whether the requested global mutable.","Returns if this global variable is mutable.","Whether this invocation is currently resumable.","Returns kind of this trap.","Total number of arguments","Returns maximum amount of pages this <code>MemoryInstance</code> can …","Returns maximum size of the requested table.","Returns maximum size (in pages) of the requested memory.","Returns maximum size <code>TableInstance</code> can grow to.","WebAssembly-specific sizes and units.","","","","Create an empty <code>ImportsBuilder</code>.","Create new trap.","Instantiate a module.","Creates new signature with givens parameter types and …","Returns not fully initialized instance.","Extract argument by index <code>idx</code>.","Extract argument by index <code>idx</code>.","Extract argument as a <code>RuntimeValue</code> by index <code>idx</code>.","Returns parameter types of this signature.","Register an resolver by a name.","Resolve a function.","","Resolve a function.","","Resolve a global variable.","","Resolve a global variable.","","Resolve a memory.","","Resolve a memory.","","Resolve a table.","","Resolve a table.","","If the invocation is resumable, the expected return value …","Resume an execution if a previous trap of Host kind …","Returns return type of this signature.","Executes <code>start</code> function (if any) and returns fully …","Executes <code>start</code> function (if any) and returns fully …","Copy data in the memory at given offset.","Set the table element to the specified function.","Change the value of this global variable.","Copy value in the memory at given offset.","Returns signature of this function instance.","Start the invocation execution.","","","","","","","","","","","","Copy memory between two (possibly distinct) memory …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>T</code> if this particular <code>RuntimeValue</code> contains …","","Returns <code>HostError</code> if this <code>Error</code> represents some host …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>ValueType</code> of the requested global.","Returns value type of this global variable.","Get variable type for this value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides direct access to the underlying memory buffer.","Provides direct mutable access to the underlying memory …","Instantiate a module with given external values as imports.","Limit stacks created by this recycler to","Register an resolver by a name.","Fill the specified memory region with zeroes.","","","","","","","","","","","","","","","","","","","","","","","A trait defining the size, in bytes, of one unit of <code>Self</code>.","Memory size specified in bytes.","Memory size specified in WebAssembly memory pages.","A trait defining round up conversion between various …","Memory size specified in <code>wasm32</code> words.","","","","","","","","","","","","","","","","","","","The size, in bytes, of a single unit of <code>Self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns minimum number of <code>T</code> to fit amount of space …","","","","","","","","","","","","","","","","Returns the size of a type in <code>Bytes</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns always <code>true</code> for <code>can_author_with</code>. This is useful …","Block data origin.","Block status.","Type of keys in the blockchain cache that consensus module …","Checks if the current active native block authoring …","Checks if the node can author blocks by using …","Unable to propose a block.","Signing failed","Error from the client while importing","Error from the client while importing","Block that was received from the network and validated in …","A future that resolves to the proposer.","Express that proof recording is disabled.","Is proof recording enabled?","Express that proof recording is enabled.","Environment for a Consensus instance.","Error type.","An error type when fetching data is not possible.","Error which can occur upon creation.","Error type which can occur when proposing or evaluating.","Unable to schedule wake-up.","Block was imported from a file.","Genesis block built into the client.","In the blockchain, but the state is not available.","Already in the blockchain and the state is available.","Authoring interface does not match the runtime.","Inherent data to include in a block.","Error while working with inherent data.","Invalid authorities set received from the runtime.","Account is not an authority.","Intermediate is of wrong type.","Justification requirements not met.","Error checking signature","I/O terminated unexpectedly","Block or parent is known to be bad.","Authoring interface does not match the runtime.","Block was broadcasted on the network.","Block is part of the initial sync with the network.","Never can author.","Intermediate missing.","A synchronization oracle for when there is no network.","Error that is returned when <code>ProofRecording</code> requested to …","Some other error.","Block that was collated by this node.","The proof type that will be used internally.","The proof type used by <code>Self::ProofRecording</code>.","A trait to express the state of proof recording on type …","The supported proof recording by the implementator of this …","A proposal that is created by a <code>Proposer</code>.","Future that resolves to a committed proposal with an …","Logic for a proposer.","The proposer type this creates.","Added to the import queue.","Authoring interface does not match the runtime.","The static slot key","The SelectChain trait defines the strategy upon which the …","A type from which a slot duration can be obtained.","A state backend is used to read state data and can have …","Missing state at block with given descriptor.","An oracle for when major synchronization work is being …","Storage changes to be applied if committing","The transaction type used by the backend.","Type of trie backend storage.","Not in the queue or the blockchain.","","","","","","","Iterate over storage starting at key, for a given prefix …","Retrieve all entries keys of storage and call <code>f</code> for each …","","","","","","","","","","","","","","","","","","","","","","","","","Try convert into trie backend.","","","","","Among those <code>leaves</code> deterministically pick one chain as the …","","","","The block that was build.","Block announcement validation.","","","","","","","","","","","","","","","","","","","","","","","","","See trait docs for more information.","","","","Get all keys of child storage with given prefix","Get keyed child storage or None if there is nothing …","Get child keyed storage value hash or None if there is …","Calculate the child storage root, with given delta over …","","","","","","","","","","","","","Commit given transaction to storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error types in Consensus","Block evaluation and evaluation errors.","true if a key exists in child storage.","true if a key exists in storage.","Get the best descendent of <code>target_hash</code> that we should …","","","","","","","","Retrieve all child entries keys which start with the given …","Retrieve all entries keys and values of which start with …","Retrieve all entries keys which start with the given …","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calculate the storage root, with given delta over what is …","Returns the data for the requested inherent.","Extend storage info for benchmarking db","Get the whitelist for tracking db reads/writes","","Initialize the proposal logic on top of a specific header. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the given <code>storage_proof</code> into <code>Self::Proof</code>.","","","","","","","","","","","","","","","Whether the synchronization service is undergoing major …","","Whether the synchronization service is offline. Returns …","","Get all keys with given prefix","Get all leaves of the chain, i.e. block hashes that have …","Get the number of inherents in this instance","Creates a new instance of <code>Self</code>.","Create a new instance.","Return the next key in child storage in lexicographic …","Return the next key in storage in lexicographic order or …","Get all key/value pairs into a Vec.","Proof that was recorded while building the block.","Estimate proof size","Create a proposal.","Put data for an inherent into the internal storage.","Get the read/write count of the db","Register stats from overlay of state machine.","Replace the data for an inherent.","Get the read/write count of the db","Update the whitelist for tracking db reads/writes","Gets the slot duration.","","Get keyed storage or None if there is nothing associated.","The storage changes while building this block.","Get keyed storage value hash or None if there is nothing …","","Calculate the storage root, with given delta over what is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query backend usage statistics (i/o, memory)","","","","","","","","","","","","","","Wipe the state database.","","","","","","","","","","","","","","Type which checks incoming block announcements.","A type which provides access to chain information.","Default implementation of <code>BlockAnnounceValidator</code>.","Invalid block announcement.","Valid block announcement.","Result of <code>BlockAnnounceValidator::validate</code>.","","","","","Retrieve the status of the block denoted by the given …","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate the announced header and its associated data.","","","","Should we disconnect from this peer?","Is this the new best block of the node?","Unable to propose a block.","Signing failed","Error from the client while importing","Error from the client while importing","Error type.","Unable to schedule wake-up.","Authoring interface does not match the runtime.","Error while working with inherent data.","Invalid authorities set received from the runtime.","Account is not an authority.","Intermediate is of wrong type.","Justification requirements not met.","Error checking signature","I/O terminated unexpectedly","Authoring interface does not match the runtime.","Intermediate missing.","Some other error.","Result type alias.","Authoring interface does not match the runtime.","Missing state at block with given descriptor.","","","","","","","","","","","","","","Proposal provided not a block.","Error type.","Result type alias.","Proposal had wrong number.","Proposal had wrong parent hash.","","","","","","","","Attempt to evaluate a substrate block as a node block, …","","","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","helper to test the <code>children</code> implementation for various …","helper to test the <code>leaves</code> implementation for various …"],"i":[0,1,1,2,3,0,0,0,0,0,1,1,2,3,1,1,2,0,0,0,4,1,1,2,0,0,1,1,2,0,0,0,0,1,1,2,0,0,0,4,0,0,0,0,0,0,3,0,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,0,5,6,3,7,8,4,9,10,11,1,2,12,13,13,14,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,1,1,2,2,6,12,14,14,11,7,14,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,13,13,21,12,13,21,12,8,13,14,5,6,4,0,0,5,6,3,7,8,4,9,10,11,1,2,5,6,3,7,8,4,9,10,11,1,2,20,14,5,20,16,17,6,18,7,4,12,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,1,2,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,20,15,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,22,22,22,22,22,12,5,3,4,1,2,5,3,4,1,2,18,11,23,14,5,6,3,7,4,1,1,2,2,19,20,20,15,16,17,5,6,3,3,18,7,8,4,9,10,11,14,1,2,12,19,20,1,2,1,2,15,15,16,16,17,17,5,5,6,6,3,3,18,18,7,7,8,8,4,4,9,9,10,10,11,11,14,14,1,1,2,2,12,12,19,19,20,20,1,2,1,2,15,15,16,16,17,17,5,5,6,6,3,3,18,18,7,7,8,8,4,4,9,9,10,10,11,11,14,14,1,1,2,2,12,12,19,19,20,20,1,23,13,21,12,24,16,14,4,1,2,14,3,22,4,1,2,14,25,25,25,25,7,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,14,22,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,9,4,1,1,2,2,22,11,18,20,15,8,5,0,26,21,18,8,10,11,14,0,0,0,14,14,14,7,7,1,2,0,1,2,27,27,27,8,19,18,17,17,17,17,17,17,14,19,14,9,8,28,9,19,12,12,18,13,12,12,16,1,2,22,22,22,22,22,22,14,18,22,7,1,2,1,2,5,6,3,7,8,4,9,10,11,1,2,1,2,1,2,1,2,1,2,20,6,0,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,14,15,16,17,5,6,3,18,7,8,4,9,10,11,14,1,2,12,19,20,29,12,12,12,17,17,12,0,0,0,30,31,32,30,32,31,30,32,31,32,32,32,32,32,32,32,32,32,30,32,31,30,32,31,32,30,32,32,32,32,32,32,32,30,31,30,31,32,30,31,30,32,31,30,32,31,30,32,31,32,32,32,32,32,32,32,31,30,32,31,30,30,32,32,31,31,30,30,32,32,31,31,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,30,32,31,32,32,30,32,31,30,32,31,30,32,31,30,32,31,30,32,31,30,32,31,32,32,32,32,0,32,32,30,30,32,32,32,0,0,31,32,32,31,31,30,32,32,32,32,32,32,30,30,32,32,32,32,32,32,32,32,32,32,32,32,32,30,31,30,32,31,30,32,31,30,32,31,30,32,31,32,32,30,32,31,32,32,32,30,32,31,32,31,31,0,0,0,0,23,23,25,25,25,25,0,1,1,0,1,1,1,1,0,0,4,1,1,1,1,1,1,4,0,1,1,0,1,1,0,23,23,25,25,25,25,27,27,27,33,34,34,35,0,0,36,0,0,34,35,0,0,0,0,0,0,35,0,0,35,33,36,0,33,36,35,34,37,38,37,38,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,38,0,40,40,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,40,40,40,37,38,37,38,37,38,40,34,33,36,35,34,33,36,35,34,42,37,42,34,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,37,38,38,39,40,41,33,36,35,34,34,34,37,38,37,38,42,37,38,33,36,35,35,34,37,38,37,38,37,38,37,38,39,40,41,33,36,35,34,37,37,38,38,39,39,40,40,41,41,33,33,36,36,35,35,34,34,37,37,38,38,39,39,40,40,41,41,33,33,36,36,35,35,34,34,42,37,37,40,40,40,40,40,34,40,40,37,38,39,40,41,33,36,35,34,41,40,37,38,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,34,34,40,34,39,37,38,40,40,0,41,41,34,37,37,38,37,38,40,0,37,38,35,37,37,37,38,40,37,41,41,41,35,37,39,41,39,39,39,40,37,38,37,38,37,38,42,33,36,35,34,35,39,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,37,38,39,40,41,33,36,35,34,41,41,41,41,41,41,37,38,42,37,38,39,40,41,33,36,35,34,37,42,43,44,45,44,45,46,44,47,48,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,4,51,0,4,0,0,0,0,0,0,0,52,53,52,52,52,54,53,52,54,53,52,52,52,52,52,54,53,52,54,53,53,54,54,52,55,55,55,52,55,55,55,55,52,53,52,53,55,52,52,52,52,52,52,52,54,53,52,54,53,55,52,51,52,54,53,52,52,52,0,55,55,55,52,52,54,52,52,54,53,52,52,54,54,53,53,52,52,54,54,53,53,55,55,52,52,52,52,52,54,53,52,54,53,52,54,53,52,54,53,52,54,53,52,54,53,52,54,53,52,55,51,52,53,55,55,55,55,55,0,53,55,55,55,56,53,54,0,52,55,55,55,55,52,52,55,55,55,55,55,55,55,55,55,55,52,52,53,52,52,52,54,53,52,54,53,52,52,52,52,54,53,52,52,54,53,52,54,53,52,54,53,55,0,57,57,58,58,58,58,0,57,57,57,57,57,57,58,57,57,58,57,57,58,57,58,57,57,57,57,57,58,0,57,57,57,57,57,57,57,57,0,57,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,57,58,58,57,57,57,57,57,57,57,57,58,57,57,58,58,57,57,58,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,57,58,57,58,57,58,57,58,57,58,57,58,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,68,74,75,76,77,0,0,77,0,0,77,0,0,0,77,0,0,78,0,78,79,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,80,79,80,79,83,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,85,81,82,77,83,84,78,85,80,79,80,80,79,81,82,77,83,84,78,85,80,79,81,81,82,82,77,77,83,83,84,84,78,78,85,85,80,80,79,79,81,81,82,82,77,77,83,83,84,84,78,78,85,85,80,80,79,79,82,81,82,77,83,84,78,85,80,79,85,85,85,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,81,77,83,84,78,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,86,82,81,85,85,80,85,85,79,79,84,86,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,81,82,77,83,84,78,85,80,79,79,87,88,89,90,89,90,0,0,0,89,90,89,90,0,0,0,0,0,0,0,0,91,0,0,0,88,92,0,88,0,0,0,89,90,93,94,88,95,94,89,90,93,94,88,89,90,93,94,88,90,90,88,90,88,90,88,89,90,93,94,88,89,90,93,94,88,93,89,90,93,94,88,89,90,93,94,88,95,90,88,90,88,90,88,90,88,90,88,89,90,93,94,88,89,90,93,94,88,89,90,93,94,88,90,88,96,89,90,93,94,88,89,93,94,96,89,90,93,94,88,89,89,90,90,93,93,94,94,88,88,89,90,93,89,89,90,90,93,93,94,94,88,88,89,89,90,90,93,93,94,94,88,88,97,98,90,88,89,90,93,94,88,97,97,89,90,93,94,88,89,90,93,94,88,89,90,93,94,88,89,90,93,94,88,89,90,93,89,90,93,94,88,89,90,93,94,88,92,93,97,97,97,97,97,96,90,93,94,88,93,94,94,93,93,95,95,99,95,95,94,95,96,90,88,89,90,93,94,88,89,89,90,93,94,88,100,93,89,90,93,94,88,90,88,90,88,90,88,89,90,93,94,88,89,90,93,94,88,89,90,93,94,88,90,89,90,93,94,88,95,101,95,95,102,103,104,105,106,107,0,0,108,108,0,0,0,109,110,109,110,0,111,0,0,0,112,111,112,0,0,0,108,112,0,109,110,109,110,0,0,112,108,113,0,0,111,112,108,0,0,0,0,0,0,0,0,107,0,0,0,0,0,108,0,111,112,108,0,0,0,0,112,107,0,108,108,112,112,0,0,111,114,115,116,117,118,119,109,110,120,121,122,123,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,134,111,111,112,111,134,111,127,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,120,128,111,114,115,116,117,118,119,109,110,111,114,115,116,117,118,119,109,110,120,120,120,121,110,110,126,128,110,132,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,114,107,115,115,122,134,116,116,117,117,135,118,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,133,112,120,120,136,136,136,136,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,119,109,110,119,109,120,135,123,120,111,121,133,133,108,112,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,133,133,108,112,112,112,112,114,107,107,115,122,134,134,116,117,135,118,119,119,109,109,113,110,110,110,110,110,110,110,110,110,110,110,110,132,137,123,123,124,124,125,125,126,126,120,120,111,111,127,127,128,128,121,121,129,129,130,130,131,131,132,132,133,133,108,108,112,112,114,114,107,107,115,115,122,122,134,134,116,116,117,117,135,135,118,118,119,119,109,109,113,113,110,110,132,123,123,124,124,125,125,126,126,120,120,111,111,127,127,128,128,121,121,129,129,130,130,131,131,132,132,133,133,108,108,112,112,114,114,107,107,115,115,122,122,134,134,116,116,117,117,135,135,118,118,119,119,109,109,113,113,110,110,138,120,121,122,120,120,135,120,121,127,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,120,130,131,121,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,125,121,129,130,131,132,133,108,112,114,107,115,122,134,116,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,112,133,137,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,135,135,139,125,123,123,136,108,129,122,124,133,134,120,130,131,121,0,0,119,110,126,133,135,119,127,134,134,134,119,126,140,126,141,117,140,126,141,117,140,126,141,117,140,126,141,117,124,124,119,127,127,120,121,122,120,123,124,111,114,115,116,117,118,119,109,110,133,112,120,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,110,112,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,129,122,110,123,124,125,126,120,111,127,128,121,129,130,131,132,133,108,112,114,107,115,122,134,116,117,135,118,119,109,113,110,120,120,135,128,126,120,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,0,0,0,0,0,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,164,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,161,161,161,161,162,163,161,161,162,162,163,163,161,161,162,162,163,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,165,161,161,161,161,161,162,162,162,162,162,163,163,163,163,163,0,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,161,162,163,0,0,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,166,166,167,167,167,166,167,166,167,166,167,166,166,167,167,166,166,167,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,166,167,0,0,0,0,0,0,168,168,168,168,169,170,0,171,0,0,0,172,170,173,168,169,169,174,174,168,0,168,168,168,168,168,168,168,174,168,169,169,0,168,0,0,168,169,171,173,0,173,0,173,0,170,174,168,175,0,0,0,168,0,172,173,172,174,169,176,177,178,179,180,172,172,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,172,180,180,180,180,185,180,180,180,181,0,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,186,177,178,179,172,172,172,172,169,176,177,178,179,180,169,176,177,178,179,180,172,180,180,180,180,180,180,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,180,180,174,169,174,169,0,0,172,172,185,168,168,174,169,184,184,176,172,172,172,181,182,183,168,168,168,168,168,168,174,169,184,176,177,178,179,180,181,181,182,182,183,183,168,168,174,174,169,169,184,184,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,168,168,174,174,169,169,184,184,176,176,177,177,178,178,179,179,180,180,172,180,172,172,180,170,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,171,182,183,181,182,183,168,174,169,184,176,177,178,179,180,187,176,187,176,172,185,180,177,180,172,172,172,181,172,173,180,172,172,180,172,172,175,168,172,181,172,180,172,180,180,180,180,169,176,177,178,179,180,168,184,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,180,180,180,181,182,183,168,174,169,184,176,177,178,179,180,181,182,183,168,174,169,184,176,177,178,179,180,180,181,182,183,168,174,169,184,176,177,178,179,180,172,180,181,182,183,168,174,169,184,176,177,178,179,180,172,188,189,190,191,192,193,194,195,196,191,196,197,197,0,0,0,198,198,0,198,199,198,199,200,198,199,198,199,198,199,198,199,198,199,198,198,198,199,198,199,198,198,199,199,198,198,199,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,198,199,198,199,198,199,198,199,198,199,201,199,198,199,202,203,168,168,168,168,0,168,168,168,168,168,168,168,168,168,168,168,168,0,168,168,188,189,190,191,192,193,194,195,196,191,196,197,197,204,0,0,204,204,204,204,204,204,204,204,204,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,205,206,207,206,207,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["childinfo",4]],["testclientbuilder",3]],[[["childinfo",4],["into",8,["vec"]],["vec",3,["u8"]]]],[[["into",8,["vec"]],["vec",3,["u8"]]]],[[["blockid",4]],[["result",4,["error"]],["error",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[],["public",3]],[[],["public",3]],[[]],[[["storage",3]],[["string",3],["result",4,["string"]]]],[[],["arc",3]],[[],[["result",4,["error"]],["error",4]]],[[["blockid",4]],[["result",4,["error"]],["error",4]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,[[],["blockchaindb",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["client",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4],["externalities",8],["bool",15],["str",15],["runtimecode",3]]],[[["changestrieconfiguration",3],["option",4,["changestrieconfiguration"]]]],[[],[["option",4,["prunablestatechangestriestorage"]],["prunablestatechangestriestorage",8]]],null,null,[[]],null,null,[[],["storagechild",3]],[[],["storage",3]],[[],["executionstrategy",4]],[[],["executionstrategies",3]],[[],["nativeelsewasmexecutor",3]],[[],["wasmexecutionmethod",4]],[[],["rpchandlers",3]],[[],["rpcsession",3]],[[],["longestchain",3]],[[],["keyring",4]],[[],["keyring",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["result",4,["error"]],["error",4]]],null,null,[[],["genesisparameters",3]],[[],["lightfetcher",3]],[[],["storage",3]],[[],["executionextensions",3]],[[],["executionstrategies",3]],[[],["wasmexecutionmethod",4]],[[],[["testclientbuilder",3,["backend"]],["backend",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4,["rpctransactionerror"]],["rpctransactionerror",3]]],[[["str",15]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["keytypeid",3],["str",15],["option",4,["str"]]],[["error",4],["public",3],["result",4,["public","error"]]]],[[["keytypeid",3]],[["global",3],["vec",3,["public","global"]],["public",3]]],[[["keytypeid",3],["public",3]],[["option",4,["signature"]],["error",4],["result",4,["option","error"]]]],[[["keytypeid",3],["str",15],["option",4,["str"]]],[["error",4],["public",3],["result",4,["public","error"]]]],[[["keytypeid",3]],[["vec",3,["public","global"]],["public",3],["global",3]]],[[],["testclientbuilder",3]],[[["storagechild",3]],["bool",15]],[[["executionstrategy",4]],["bool",15]],[[["wasmexecutionmethod",4]],["bool",15]],[[["keyring",4]],["bool",15]],[[["keyring",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["executioncontext",4],["blockid",4]],["extensions",3]],[[["option",4]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["blockid",4],["option",4]],[["result",4,["error"]],["error",4]]],[[["blockid",4],["option",4]],[["result",4,["error"]],["error",4]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[["executionmanager",4]],["executionstrategy",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountid32",3]],[["option",4,["keyring"]],["keyring",4]]],[[["accountid32",3]],[["keyring",4],["option",4,["keyring"]]]],[[["h256",3]],[["option",4,["keyring"]],["keyring",4]]],[[["h256",3]],[["keyring",4],["option",4,["keyring"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["public",3]],[["option",4,["keyring"]],["keyring",4]]],[[["public",3]],[["keyring",4],["option",4,["keyring"]]]],[[],[["option",4,["keyring"]],["keyring",4]]],[[],[["keyring",4],["option",4,["keyring"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["keyring"]],["keyring",4]]],[[]],[[],["genesisparameters",3]],[[],["genesisparameters",3]],[[]],[[],["storage",3]],[[],["storage",3]],[[],[["result",4,["option","error"]],["option",4,["vec"]],["error",4]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["rwlock",3]],[[],["executionmanager",4]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["justifications",3],["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4,["error"]],["error",4]]],[[["keytypeid",3],["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["metaiohandler",3,["metadata","rpcmiddleware"]],["arc",3,["metaiohandler"]]]],[[],["bool",15]],[[]],[[],["keyringiter",3]],[[]],[[],["keyringiter",3]],[[["keytypeid",3]],[["error",4],["result",4,["vec","error"]],["vec",3,["cryptotypepublicpair","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["executioncontext",4],["blockid",4]]],null,[[],["nativeversion",3]],[[],["nativeversion",3]],[[["storagechild",3]],["bool",15]],[[],[["backend",6],["client",6,["backend"]]]],[[]],[[]],[[["box",3,["dbexternalitiesfactory","global"]],["option",4,["box"]],["executionstrategies",3],["option",4,["arc"]],["arc",3,["synccryptostore"]]],["executionextensions",3]],[[["u64",15],["usize",15],["wasmexecutionmethod",4],["option",4,["u64"]]],["nativeelsewasmexecutor",3]],[[["string",3],["unboundedsender",3,["string"]]],["rpcsession",3]],[[["arc",3]],["longestchain",3]],[[["u64",15],["databasesettings",3]],[["error",4],["backend",3],["result",4,["backend","error"]]]],[[]],[[],["lightfetcher",3]],[[],[["localexecutordispatch",3],["nativeelsewasmexecutor",3,["localexecutordispatch"]]]],[[["u64",15],["u32",15]],["backend",3]],[[["u64",15],["transactionstoragemode",4],["u32",15]],["backend",3]],[[],["option",4]],null,null,[[],["pair",3]],[[],["pair",3]],null,[[],["public",3]],[[],["public",3]],[[["changestrieconfiguration",3],["option",4,["changestrieconfiguration"]]],[["result",4,["error"]],["error",4]]],[[["u8",15],["vec",3,["u8"]],["option",4,["vec"]]],[["result",4,["error"]],["error",4]]],[[["transfer",3]],[["result",4,["error"]],["error",4]]],[[["externalities",8]],[["string",3],["result",4,["vec","string"]],["vec",3,["u8","global"]]]],null,[[["arc",3]]],[[["header",6],["remotebodyrequest",3,["header"]]]],[[["remotecallrequest",3,["header"]],["header",6]]],[[["remotechangesrequest",3,["header"]],["header",6]]],[[["remoteheaderrequest",3,["header"]],["header",6]]],[[["remotereadrequest",3,["header"]],["header",6]]],[[["remotereadchildrequest",3,["header"]],["header",6]]],[[],[["result",4,["error"]],["error",4]]],null,[[["bool",15]],[["error",4],["result",4,["error"]]]],[[["str",15],["rpcsession",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["externalities",8],["runtimecode",3]],[["result",4,["runtimeversion","error"]],["runtimeversion",3],["error",4]]],[[["opaqueextrinsic",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["opaqueextrinsic",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,[[["option",4,["hashset"]],["option",4,["vec"]],["vec",3,["global"]],["hashset",3,["randomstate"]]],["testclientbuilder",3]],[[["executionstrategy",4]],["testclientbuilder",3]],[[["global",3],["box",3,["extensionsfactory","global"]],["extensionsfactory",8]]],[[["u64",15]]],[[["arc",3,["synccryptostore"]],["synccryptostore",8]],["testclientbuilder",3]],[[],["testclientbuilder",3]],[[["u8",15],["vec",3,["u8"]]]],[[],["signature",3]],[[],["signature",3]],[[["keytypeid",3],["cryptotypepublicpair",3]],[["result",4,["option","error"]],["error",4],["option",4,["vec"]]]],[[["keytypeid",3],["cryptotypepublicpair",3],["global",3],["vec",3,["cryptotypepublicpair","global"]]],[["result",4,["vec"]],["vec",3,["result","global"]]]],[[["keytypeid",3],["cryptotypepublicpair",3],["global",3],["vec",3,["cryptotypepublicpair","global"]]],[["error",4],["result",4,["option","error"]],["option",4]]],[[["keytypeid",3],["str",15],["option",4,["str"]]],[["public",3],["result",4,["public","error"]],["error",4]]],[[["keytypeid",3]],[["public",3],["global",3],["vec",3,["public","global"]]]],[[["keytypeid",3],["public",3],["vrftranscriptdata",3]],[["error",4],["option",4,["vrfsignature"]],["result",4,["option","error"]]]],[[["blockid",4]],[["error",4],["result",4,["error"]]]],[[],["executionstrategies",3]],[[["keytypeid",3],["cryptotypepublicpair",3],["global",3],["vec",3,["cryptotypepublicpair","global"]]],[["error",4],["result",4,["vec","error"]],["vec",3,["cryptotypepublicpair","global"]]]],null,[[],["accountid32",3]],[[],["accountid32",3]],[[],["h256",3]],[[],["h256",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usageinfo",3],["option",4,["usageinfo"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["arc",3]],["testclientbuilder",3]],[[],[["testclientbuilder",3,["backend"]],["backend",3]]],[[["u32",15]],[["testclientbuilder",3,["backend"]],["backend",3]]],[[["box",3,["fn"]],["option",4,["box"]]]],[[["option",4,["box"]],["box",3,["fn"]]]],[[["u32",15]],[["testclientbuilder",3,["backend"]],["backend",3]]],null,null,null,[[["private",3]]],[[["private",3]]],[[["blockid",4],["option",4],["bool",15],["clientimportoperation",3]],[["result",4,["error"]],["error",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["blockid",4]],[["option",4,["signedblock"]],["error",4],["result",4,["option","error"]]]],[[["blockid",4]],[["option",4,["vec"]],["result",4,["option","error"]],["error",4]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[["blockid",4]],[["error",4],["result",4,["option","error"]],["option",4,["vec"]]]],[[],[["result",4,["option","error"]],["error",4],["option",4,["vec"]]]],[[["blockid",4]],[["result",4,["blockstatus","error"]],["error",4],["blockstatus",4]]],[[["blockid",4]],[["box",3,["error","global"]],["result",4,["blockstatus","box"]],["blockstatus",4]]],[[["blockid",4]],[["result",4,["blockstatus","error"]],["error",4],["blockstatus",4]]],[[["blockid",4]],[["option",4,["vec"]],["result",4,["option","error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["arc"]],["arc",3,["cache"]]]],[[["executionstrategy",4],["option",4,["extensions"]],["blockid",4],["extensions",3],["str",15]],[["result",4,["vec","error"]],["error",4],["vec",3,["u8","global"]]]],[[["callapiatparams",3]],[["nativeorencoded",4],["apierror",4],["result",4,["nativeorencoded","apierror"]]]],[[],["info",3]],[[["blockcheckparams",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["storagekey",3],["blockid",4],["childinfo",4]],[["result",4,["option","error"]],["option",4,["storagedata"]],["error",4]]],[[["storagekey",3],["blockid",4],["childinfo",4]],[["result",4,["option","error"]],["option",4],["error",4]]],[[["storagekey",3],["blockid",4],["childinfo",4]],[["error",4],["vec",3,["storagekey","global"]],["result",4,["vec","error"]]]],[[["childinfo",4],["option",4,["storagekey"]],["blockid",4],["option",4,["storagekey"]],["storagekey",3],["storagekey",3]],[["error",4],["keyiterator",3],["result",4,["keyiterator","error"]]]],[[],["localcallexecutor",3]],[[],["clientconfig",3]],[[]],[[]],[[["blockid",4]],[["result",4,["vec","error"]],["error",4],["vec",3,["u8","global"]]]],[[["refcell",3],["blockid",4],["option",4,["refcell"]],["refcell",3],["executionmanager",4],["option",4],["option",4],["str",15],["option",4,["extensions"]],["extensions",3]],[["nativeorencoded",4],["error",4],["result",4,["nativeorencoded","error"]]]],[[],["clientconfig",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["executionextensions",3]],[[["str",15],["blockid",4]],[["result",4,["error"]],["error",4]]],[[]],[[],["mutex",3]],[[],[["finalitynotification",3],["tracingunboundedreceiver",3,["finalitynotification"]]]],[[["blockid",4],["option",4]],[["result",4,["error"]],["error",4]]],[[["blockid",4],["option",4],["bool",15]],[["result",4,["error"]],["error",4]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],[["result",4,["option","error"]],["option",4,["vec"]],["error",4]]],[[],[["result",4,["bool","error"]],["error",4],["bool",15]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[["blockid",4]],[["option",4],["result",4,["option","error"]],["error",4]]],[[["blockid",4]],[["option",4],["result",4,["option","error"]],["error",4]]],[[],[["cachedheadermetadata",3],["result",4,["cachedheadermetadata"]]]],[[["blockid",4]],[["result",4,["error"]],["error",4]]],[[["blockid",4]],[["result",4,["error"]],["error",4]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["randomstate",3],["vec",3,["u8","global"]],["blockimportparams",3],["hashmap",3,["vec","randomstate"]]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["justifications",3],["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],["mutex",3]],[[],[["blockimportnotification",3],["tracingunboundedreceiver",3,["blockimportnotification"]]]],[[],[["result",4,["option","error"]],["option",4,["vec"]],["error",4]]],[[],["info",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4,["error"]],["error",4]]],[[["cachedheadermetadata",3]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockid",4]],[["error",4],["result",4,["option","error"]],["option",4,["justifications"]]]],[[["blockid",4],["storagekey",3],["prefixedstoragekey",3],["option",4,["prefixedstoragekey"]]],[["vec",3,["global"]],["error",4],["result",4,["vec","error"]]]],[[["option",4,["prefixedstoragekey"]],["storagekey",3],["prefixedstoragekey",3]],[["result",4,["changesproof","error"]],["error",4],["changesproof",3]]],[[["option",4,["prefixedstoragekey"]],["storagekey",3],["prefixedstoragekey",3]],[["result",4,["changesproof","error"]],["error",4],["changesproof",3]]],null,[[],["result",4]],[[["blockid",4]],[["option",4],["error",4],["result",4,["option","error"]]]],[[],["nativeversion",3]],[[["box",3,["spawnnamed","global"]],["clientconfig",3],["arc",3],["global",3],["spawnnamed",8]],[["result",4,["localcallexecutor","error"]],["error",4],["localcallexecutor",3]]],[[["option",4,["vec"]],["registry",3],["hashset",3,["randomstate"]],["option",4,["telemetryhandle"]],["telemetryhandle",3],["option",4,["hashset"]],["clientconfig",3],["vec",3,["global"]],["executionextensions",3],["arc",3],["option",4,["registry"]],["buildstorage",8]],[["result",4,["client","error"]],["client",3],["error",4]]],[[["digest",3]],[["blockbuilder",3,["client"]],["error",4],["result",4,["blockbuilder","error"]]]],[[["blockid",4],["digest",3]],[["blockbuilder",3,["client"]],["error",4],["result",4,["blockbuilder","error"]]]],[[["box",3,["spawnnamed","global"]],["spawnnamed",8],["registry",3],["global",3],["option",4,["telemetryhandle"]],["telemetryhandle",3],["option",4,["arc"]],["clientconfig",3],["option",4,["registry"]],["arc",3,["synccryptostore"]]],[["client",3,["backend","localcallexecutor"]],["result",4,["client","error"]],["error",4]]],[[["box",3,["spawnnamed","global"]],["arc",3,["synccryptostore"]],["registry",3],["global",3],["option",4,["arc"]],["option",4,["telemetryhandle"]],["telemetryhandle",3],["clientconfig",3],["arc",3],["option",4,["registry"]],["spawnnamed",8]],[["result",4,["client","error"]],["error",4],["client",3,["localcallexecutor"]]]],null,[[],[["option",4],["error",4],["result",4,["option","error"]]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],null,null,[[["str",15],["blockid",4]],[["result",4,["error"]],["error",4]]],[[["iterator",8],["blockid",4],["childinfo",4]],[["result",4,["storageproof","error"]],["storageproof",3],["error",4]]],[[["blockid",4],["iterator",8]],[["result",4,["storageproof","error"]],["storageproof",3],["error",4]]],[[["usize",15],["blockid",4]],[["result",4,["error"]],["error",4]]],[[]],[[],[["error",4],["result",4,["error"]]]],[[],["apiref",3]],[[["blockid",4]],[["result",4,["runtimeversion","error"]],["runtimeversion",3],["error",4]]],[[["blockid",4]],[["string",3],["runtimeversion",3],["result",4,["runtimeversion","string"]]]],[[["blockid",4]],[["apierror",4],["result",4,["runtimeversion","apierror"]],["runtimeversion",3]]],[[["blockid",4]],[["result",4,["runtimeversion","error"]],["runtimeversion",3],["error",4]]],[[["blockid",4]],[["error",4],["result",4,["error"]]]],[[["blockid",4]],[["blockstatus",4],["error",4],["result",4,["blockstatus","error"]]]],[[["storagekey",3],["blockid",4]],[["result",4,["option","error"]],["option",4,["storagedata"]],["error",4]]],[[["option",4],["option",4]],[["tracingunboundedreceiver",3],["result",4,["tracingunboundedreceiver","error"]],["error",4]]],[[["usize",15],["blockid",4]],[["result",4,["vec","error"]],["vec",3,["global"]],["error",4]]],[[["storagekey",3],["blockid",4]],[["result",4,["option","error"]],["option",4],["error",4]]],[[["storagekey",3],["blockid",4]],[["error",4],["vec",3,["storagekey","global"]],["result",4,["vec","error"]]]],[[["option",4,["storagekey"]],["storagekey",3],["blockid",4],["option",4,["storagekey"]],["storagekey",3]],[["error",4],["keyiterator",3],["result",4,["keyiterator","error"]]]],[[["storagekey",3],["blockid",4]],[["result",4,["vec","error"]],["vec",3,["global"]],["error",4]]],[[["blockid",4]],[["result",4,["option","error"]],["option",4],["error",4]]],[[["blockid",4]],[["option",4],["error",4],["result",4,["option","error"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["error",4],["result",4,["vec","error"]],["vec",3,["global"]]]],[[],[["vec",3,["global"]],["result",4,["vec","error"]],["error",4]]],[[]],[[]],[[]],[[["bool",15]],[["error",4],["result",4,["error"]]]],[[],["clientinfo",3]],[[["storageproof",3]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[["usize",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[]],[[["box",3,["spawnnamed","global"]],["backend",3],["buildstorage",8],["registry",3],["arc",3,["backend"]],["global",3],["option",4,["telemetryhandle"]],["telemetryhandle",3],["option",4,["registry"]],["spawnnamed",8]],[["result",4,["client","error"]],["client",3,["backend","genesiscallexecutor"]],["error",4]]],null,null,[[["blockid",4],["option",4]],[["result",4,["error"]],["error",4]]],[[]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["justifications",3],["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["blockid",4],["option",4]],[["result",4,["error"]],["error",4]]],[[]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["justifications",3],["blockorigin",4]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["changestrieconfiguration",3],["option",4,["changestrieconfiguration"]]],[["result",4,["error"]],["error",4]]],[[["u8",15],["vec",3,["u8"]],["option",4,["vec"]]],[["result",4,["error"]],["error",4]]],[[["transfer",3]],[["result",4,["error"]],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["childinfo",4],["bool",15],["option",4,["childinfo"]],["option",4]],[["result",4,["bool"]],["bool",15]]],[[["childinfo",4],["bool",15],["option",4,["childinfo"]],["option",4]],[["result",4,["bool"]],["bool",15]]],[[["childinfo",4],["option",4,["childinfo"]],["option",4]]],[[["childinfo",4],["option",4,["childinfo"]],["option",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["option",4,["triebackend"]],["triebackend",3]]],null,[[["blockid",4]],[["error",4],["result",4,["option","error"]],["option",4,["vec"]]]],[[["blockid",4]],[["option",4,["vec"]],["result",4,["option","error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["arc"]],["arc",3,["cache"]]]],[[],[["option",4,["arc"]],["arc",3,["cache"]]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[["childinfo",4]],[["global",3],["vec",3,["vec","global"]],["vec",3,["u8","global"]]]],[[["childinfo",4]],[["global",3],["vec",3,["vec","global"]],["vec",3,["u8","global"]]]],[[["childinfo",4]],[["result",4,["option"]],["option",4,["vec"]]]],[[["childinfo",4]],[["result",4,["option"]],["option",4,["vec"]]]],[[["childinfo",4]]],[[["childinfo",4]]],[[],[["vec",3,["global"]],["result",4,["vec","error"]],["error",4]]],[[]],[[],["keepblocks",4]],[[],["transactionstoragemode",4]],[[],["databasesource",4]],[[],["pruningmode",4]],[[]],[[]],[[]],[[]],[[["transaction",3]],[["databaseerror",3],["result",4,["databaseerror"]]]],[[["vec",3,["global"]],["global",3],["vec",3,["global"]]],["result",4]],[[["u32",15]],["bool",15]],[[],["pruningmode",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["pruningmode",4]],["bool",15]],[[],["bool",15]],[[["childinfo",4]],[["result",4,["bool"]],["bool",15]]],[[["childinfo",4]],[["result",4,["bool"]],["bool",15]]],[[],[["result",4,["bool"]],["bool",15]]],[[],[["result",4,["bool"]],["bool",15]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["childinfo",4]]],[[["childinfo",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[],[["global",3],["vec",3,["global"]]]],[[],[["global",3],["trackedstoragekey",3],["vec",3,["trackedstoragekey","global"]]]],[[],[["result",4,["bool","error"]],["error",4],["bool",15]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[["blockid",4]],[["option",4],["result",4,["option","error"]],["error",4]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[],[["cachedheadermetadata",3],["result",4,["cachedheadermetadata"]]]],[[]],[[],[["result",4,["option","error"]],["option",4,["vec"]],["error",4]]],[[],["info",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4,["error"]],["error",4]]],[[["cachedheadermetadata",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["blockid",4]],[["error",4],["result",4,["option","error"]],["option",4,["justifications"]]]],[[["u32",15]],["pruningmode",4]],null,[[],[["global",3],["vec",3,["vec","global"]],["vec",3,["u8","global"]]]],[[],[["global",3],["vec",3,["vec","global"]],["vec",3,["u8","global"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["vec",3,["global"]],["result",4,["vec","error"]],["error",4]]],null,[[["blockid",4],["option",4]],[["result",4,["error"]],["error",4]]],[[["blockid",4]],[["result",4,["error"]],["error",4]]],[[["pruningmode",4]],["bool",15]],[[["usize",15],["bool",15],["storage",3],["option",4,["usize"]]],[["string",3],["result",4,["benchmarkingstate","string"]],["benchmarkingstate",3]]],[[["childinfo",4]],[["result",4,["option"]],["option",4,["vec"]]]],[[["childinfo",4]],[["result",4,["option"]],["option",4,["vec"]]]],[[],[["result",4,["option"]],["option",4,["vec"]]]],[[],[["result",4,["option"]],["option",4,["vec"]]]],[[],[["option",4],["error",4],["result",4,["option","error"]]]],null,[[],[["global",3],["vec",3,["global"]]]],[[],[["global",3],["vec",3,["global"]]]],[[],[["option",4,["path"]],["path",3]]],[[],[["option",4,["u32"]],["u32",15]]],[[]],[[["statemachinestats",3]]],[[["statemachinestats",3]]],[[]],[[]],[[["storage",3]],[["result",4,["error"]],["error",4]]],[[["vec",3,["vec","global"]],["justifications",3],["vec",3,["global"]],["option",4,["justifications"]],["option",4,["vec"]],["newblockstate",4],["option",4,["vec"]]],[["result",4,["error"]],["error",4]]],[[["storage",3],["bool",15]],[["result",4,["error"]],["error",4]]],[[["path",3]],["bool",15]],[[["global",3],["trackedstoragekey",3],["vec",3,["trackedstoragekey","global"]]]],null,[[],[["result",4,["option","error"]],["option",4],["error",4]]],null,null,null,[[["blockid",4]],[["blockstatus",4],["error",4],["result",4,["blockstatus","error"]]]],[[],[["result",4,["option"]],["option",4,["vec"]]]],[[],[["result",4,["option"]],["option",4,["vec"]]]],[[],[["option",4],["result",4,["option"]]]],[[],[["result",4,["option"]],["option",4]]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["randomstate",3],["vec",3,["u8","global"]],["hashmap",3,["vec","randomstate"]]]],[[],[["result",4,["error"]],["error",4]]],[[["memorydb",3,["prefixedkey","vec","nooptracker"]],["nooptracker",3,["vec"]],["prefixedkey",3],["vec",3,["u8","global"]]],[["result",4,["error"]],["error",4]]],[[["global",3],["vec",3,["global"]]],[["result",4,["error"]],["error",4]]],[[["vec",3,["global"]],["global",3],["vec",3,["global"]]],[["result",4,["error"]],["error",4]]],[[["indexoperation",4],["vec",3,["indexoperation","global"]],["global",3]],[["result",4,["error"]],["error",4]]],[[],["usageinfo",3]],[[],["usageinfo",3]],[[["u32",15]],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["fnmut",8],["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],[["option",4,["arc"]],["arc",3,["cache"]]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["blockid",4]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["option","error"]],["option",4,["vec"]],["error",4]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[["blockid",4]],[["option",4],["result",4,["option","error"]],["error",4]]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[],[["result",4,["cachedheadermetadata"]],["cachedheadermetadata",3]]],[[["randomstate",3],["vec",3,["global"]],["hashmap",3,["vec","randomstate"]],["global",3],["newblockstate",4],["vec",3,["u8","global"]]],[["result",4,["error"]],["error",4]]],[[],["info",3]],[[],["usize",15]],[[],[["result",4,["error"]],["error",4]]],[[["cachedheadermetadata",3]]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[["databasesettings",3]],[["result",4,["lightstorage","error"]],["error",4],["lightstorage",3]]],[[],["lightstorage",3]],[[],[["option",4],["error",4],["result",4,["option","error"]]]],[[]],[[["blockid",4]],[["result",4,["error"]],["error",4]]],[[["blockid",4]],[["blockstatus",4],["error",4],["result",4,["blockstatus","error"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],[["usageinfo",3],["option",4,["usageinfo"]]]],[[]],null,[[["private",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["localstorage",3]],[[]],[[["option",4]],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[],["usize",15]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[["arc",3,["database"]],["database",8]],["localstorage",3]],[[],["localstorage",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[],[["option",4,["u32"]],["u32",15]]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4],["externalities",8],["bool",15],["str",15],["runtimecode",3]]],[[["runtimeversion",3]],[["string",3],["result",4,["string"]]]],null,[[["runtimeversion",3]],["bool",15]],[[["childinfo",4]],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[["childinfo",4]],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[["childinfo",4]],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[["u32",15],["childinfo",4],["option",4,["u32"]]]],[[["childinfo",4]]],[[["option",4,["u32"]],["u32",15]]],[[]],[[],["runtimeversion",3]],[[],["wasmexecutor",3]],[[]],[[]],[[]],[[],[["result",4,["runtimeversion","error"]],["error",3],["runtimeversion",3]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[],["runtimeversion",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["runtimeversion"]],["runtimeversion",3]]],[[["str",15]],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["runtimeversion",3]],["bool",15]],[[],["bool",15]],null,[[["childinfo",4]],["bool",15]],[[],["bool",15]],[[],["option",4]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["oldruntimeversion",3]],["runtimeversion",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["vec",3,["global"]]]],[[],[["global",3],["trackedstoragekey",3],["vec",3,["trackedstoragekey","global"]]]],[[],["bool",15]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["option",4,["u32"]],["u32",15],["childinfo",4]]],[[],["nativeversion",3]],[[["runtimeversion",3]],["bool",15]],[[["u64",15],["pathbuf",3],["wasmexecutionmethod",4],["function",8],["option",4,["u64"]],["global",3],["usize",15],["vec",3,["function","global"]],["option",4,["pathbuf"]]],["wasmexecutor",3]],[[["childinfo",4]],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[["u8",15],["option",4,["vec"]],["childinfo",4],["global",3],["vec",3,["u8","global"]]]],[[["u8",15],["option",4,["vec"]],["global",3],["vec",3,["u8","global"]]]],[[],[["option",4,["u32"]],["u32",15]]],[[["runtimeblob",3]],[["result",4,["option","wasmerror"]],["option",4,["runtimeversion"]],["wasmerror",4]]],[[["externalities",8]],[["string",3],["result",4,["vec","string"]],["vec",3,["u8","global"]]]],[[]],[[],[["error",4],["result",4,["error"]]]],[[]],[[["externalities",8],["runtimecode",3]],[["result",4,["runtimeversion","error"]],["runtimeversion",3],["error",4]]],[[["externalities",8],["runtimecode",3]],[["result",4,["runtimeversion","error"]],["runtimeversion",3],["error",4]]],null,null,[[],["result",4]],[[["u8",15],["childinfo",4],["global",3],["vec",3,["u8","global"]]]],[[["option",4]]],[[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[["global",3],["trackedstoragekey",3],["vec",3,["trackedstoragekey","global"]]]],null,null,[[],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[["u8",15],["global",3],["vec",3,["u8","global"]]]],[[],[["option",4,["vec"]],["result",4,["option"]]]],[[],["result",4]],[[],[["option",4,["vec"]],["vec",3,["u8","global"]]]],[[["u32",15]]],[[["u32",15]]],[[],["result",4]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["metaform",4],["type",3,["metaform"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["externalities",8]],[["error",4],["result",4,["error"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["string",3]],["error",4]],[[["wasmerror",4]],["error",4]],[[["trap",3]],["error",4]],[[["error",4]],["error",4]],[[["error",3]],["error",4]],[[["str",15]],["error",4]],[[]],[[["error",4]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["memorywrapper",3],["option",4,["memorywrapper"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["supervisorfuncindex",3]],[[],["memory",4]],[[]],[[]],[[["store",3]],[["guestenvironment",3],["result",4,["guestenvironment","instantiationerror"]],["instantiationerror",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["u32",15]],[["result",4,["error"]],["error",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["supervisorfuncindex",3]],["bool",15]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["option",4,["value"]],["value",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u32",15]],[["rc",3,["sandboxinstance"]],["result",4,["rc","error"]],["error",4]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[["guestenvironment",3],["u32",15],["sandboxcontext",8]],[["result",4,["unregisteredinstance","instantiationerror"]],["instantiationerror",4],["unregisteredinstance",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15],["u32",15],["supervisorfuncindex",3],["pointer",3,["u8"]]],[["result",4,["i64","error"]],["error",4],["i64",15]]],[[["u32",15],["sandboxcontext",8],["str",15]],[["option",4,["runtimevalue"]],["error",4],["result",4,["option","error"]]]],[[["usize",15],["runtimeargs",3]],[["option",4,["runtimevalue"]],["trap",3],["result",4,["option","trap"]]]],[[["u32",15]],[["error",4],["memory",4],["result",4,["memory","error"]]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[["supervisorfuncindex",3]],["bool",15]],[[["sandboxbackend",4]],["store",3]],[[["u32",15]],[["result",4,["u32","error"]],["u32",15],["error",4]]],[[["pointer",3,["u8"]],["u8",15],["usize",15]],[["result",4,["vec","error"]],["error",4],["vec",3,["u8","global"]]]],[[["pointer",3,["u8"]],["u8",15]],[["error",4],["result",4,["error"]]]],[[["store",3]],["u32",15]],[[],["functioncontext",8]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pointer",3,["u8"]],["u8",15]],[["error",4],["result",4,["error"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["u32",15]],[["pointer",3,["u8"]],["string",3],["result",4,["pointer","string"]]]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["option",4,["i32"]],["i32",15]]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pointer",3]],[[],["valuetype",4]],[[],["value",4]],[[],["pointer",3]],[[],["signature",3]],[[],["returnvalue",4]],[[]],[[]],[[]],[[]],[[]],[[["pointer",3,["u8"]],["u8",15]],[["string",3],["result",4,["string"]]]],[[],[["result",4,["value","error"]],["value",4],["error",3]]],[[],[["result",4,["returnvalue","error"]],["error",3],["returnvalue",4]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["function",8]],["bool",15]],[[["valuetype",4]],["bool",15]],[[["value",4]],["bool",15]],[[["pointer",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["returnvalue",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["iterator",8],["functioncontext",8]],[["string",3],["result",4,["option","string"]],["option",4,["value"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[["valuetype",4]],["valuetype",4]],[[["runtimevalue",4]],["value",4]],[[]],[[]],[[["u32",15]],["pointer",3]],[[["signature",3]],["signature",3]],[[]],[[["value",4]],["returnvalue",4]],[[]],[[["functioncontext",8]],[["result",4,["string"]],["string",3]]],[[["functioncontext",8]],[["result",4,["string"]],["string",3]]],[[["u32",15],["functioncontext",8]],[["string",3],["pointer",3],["result",4,["pointer","string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["u32",15]],[["string",3],["result",4,["option","string"]],["option",4,["value"]]]],[[],[["function",8],["global",3],["vec",3,["function","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u32",15]],[["string",3],["u32",15],["result",4,["u32","string"]]]],[[["u32",15]],[["string",3],["result",4,["string"]]]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["functioncontext",8]],[["string",3],["result",4,["string"]]]],[[["functioncontext",8]],[["string",3],["result",4,["string"]]]],[[["functioncontext",8]],[["string",3],["u32",15],["result",4,["u32","string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["value",4]],[[],["value",4]],[[["u8",15],["u32",15],["str",15],["pointer",3,["u8"]]],[["string",3],["u32",15],["result",4,["u32","string"]]]],[[["u8",15],["u32",15],["pointer",3,["u8"]]],[["string",3],["u32",15],["result",4,["u32","string"]]]],[[["u32",15]],[["string",3],["u32",15],["result",4,["u32","string"]]]],[[["u8",15],["u32",15],["pointer",3,["u8"]]],[["string",3],["u32",15],["result",4,["u32","string"]]]],[[["u32",15]],[["string",3],["result",4,["string"]]]],[[],["str",15]],[[["value",4]],["bool",15]],[[["pointer",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["returnvalue",4]],["bool",15]],[[["u32",15]],["pointer",3]],[[["valuetype",4],["option",4,["valuetype"]]],["signature",3]],[[],["signature",3]],[[],["pointer",3]],[[["u32",15]],[["option",4,["pointer"]],["pointer",3]]],[[["pointer",3,["u8"]],["u8",15],["u32",15]],[["string",3],["result",4,["vec","string"]],["vec",3,["u8","global"]]]],[[["pointer",3,["u8"]],["u8",15]],[["string",3],["result",4,["string"]]]],[[["pointer",3]],[["result",4,["string"]],["string",3]]],[[["u32",15],["pointer",3,["u32"]]],[["string",3],["u32",15],["result",4,["u32","string"]]]],[[["u64",15],["pointer",3,["u64"]]],[["u64",15],["string",3],["result",4,["u64","string"]]]],null,[[],["sandbox",8]],[[],["signature",3]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["u8",15]],[["result",4,["valuetype"]],["valuetype",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["value",4]],["option",4]],[[["value",4]],[["option",4,["pointer"]],["pointer",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["valuetype",4]],[[]],[[]],[[]],[[]],[[]],[[["pointer",3,["u8"]],["u8",15]],[["string",3],["result",4,["string"]]]],[[["pointer",3]],[["string",3],["result",4,["string"]]]],[[["u32",15],["pointer",3,["u32"]]],[["string",3],["result",4,["string"]]]],[[["u64",15],["pointer",3,["u64"]]],[["string",3],["result",4,["string"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["pages",3],["option",4,["pages"]]],[["memoryref",3],["error",4],["result",4,["memoryref","error"]]]],[[["option",4,["u32"]],["u32",15]],[["error",4],["result",4,["tableref","error"]],["tableref",3]]],[[["runtimevalue",4],["bool",15]],["globalref",3]],[[["usize",15],["signature",3]],["funcref",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[],[["option",4,["funcref"]],["funcref",3]]],[[],[["globalref",3],["option",4,["globalref"]]]],[[],[["hosterror",8],["option",4,["hosterror"]]]],[[],[["option",4,["memoryref"]],["memoryref",3]]],[[]],[[],[["tableref",3],["option",4,["tableref"]]]],[[],["moduleref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["u8",15]],[["result",4,["error"]],["error",4]]],[[]],[[],["externval",4]],[[],["funcref",3]],[[],["globalref",3]],[[],["memoryref",3]],[[],["moduleref",3]],[[],["tableref",3]],[[],["signature",3]],[[],["valuetype",4]],[[],["runtimevalue",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[],["pages",3]],[[],["u32",15]],[[["u32",15]],["runtimevalue",4]],[[["u64",15]],["runtimevalue",4]],[[],["importsbuilder",3]],[[],["stackrecycler",3]],[[["valuetype",4]],["runtimevalue",4]],[[],[["result",4,["error"]],["error",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["funcinstance",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["globalinstance",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["memoryinstance",3]],[[],["moduleinstance",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["tableinstance",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[["box",3,["hosterror","global"]],["global",3],["hosterror",8]],[["box",3,["hosterror","global"]],["box",3,["global"]],["result",4,["box","box"]]]],[[],["option",4]],[[["rc",3,["hosterror"]],["hosterror",8]],[["rc",3],["rc",3,["hosterror"]],["result",4,["rc","rc"]]]],[[],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["signature",3]],["bool",15]],[[["valuetype",4]],["bool",15]],[[["runtimevalue",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["result",4,["error"]],["error",4]]],[[["str",15]],[["option",4,["externval"]],["externval",4]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["trap",3]],[[["trapkind",4]],["trap",3]],[[]],[[]],[[]],[[["trap",3]],["error",4]],[[],["error",4]],[[["error",3]],["error",4]],[[]],[[["trap",3]],["resumableerror",4]],[[]],[[]],[[]],[[]],[[],["runtimeargs",3]],[[]],[[]],[[]],[[]],[[["signature",3]],["signature",3]],[[]],[[]],[[["valuetype",4]],["valuetype",4]],[[]],[[["i32",15]],["runtimevalue",4]],[[["u8",15]],["runtimevalue",4]],[[]],[[["i64",15]],["runtimevalue",4]],[[["i8",15]],["runtimevalue",4]],[[["u16",15]],["runtimevalue",4]],[[["u32",15]],["runtimevalue",4]],[[["u64",15]],["runtimevalue",4]],[[["f32",3]],["runtimevalue",4]],[[["i16",15]],["runtimevalue",4]],[[["value",4]],["runtimevalue",4]],[[["f64",3]],["runtimevalue",4]],[[],[["error",4],["result",4,["module","error"]],["module",3]]],[[],[["error",4],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["module",3]],[["error",4],["result",4,["module","error"]],["module",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["runtimevalue",4]],["option",4]],[[["usize",15],["u32",15]],[["error",4],["result",4,["vec","error"]],["vec",3,["u8","global"]]]],[[["u32",15]],[["result",4,["option","error"]],["error",4],["option",4,["funcref"]]]],[[],["runtimevalue",4]],[[["u32",15]],[["result",4,["error"]],["error",4]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[],[["ref",3,["vec"]],["vec",3,["globalref","global"]]]],[[["pages",3]],[["error",4],["result",4,["pages","error"]],["pages",3]]],[[["u32",15]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["pages",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["box",3,["hosterror","global"]],["option",4,["box"]]]],[[],["trapkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["funcref",3]],[["option",4,["runtimevalue"]],["trap",3],["result",4,["option","trap"]]]],[[["str",15]],[["option",4,["runtimevalue"]],["error",4],["result",4,["option","error"]]]],[[["str",15],["stackrecycler",3]],[["option",4,["runtimevalue"]],["error",4],["result",4,["option","error"]]]],[[["usize",15],["runtimeargs",3]],[["option",4,["runtimevalue"]],["trap",3],["result",4,["option","trap"]]]],[[["usize",15],["runtimeargs",3]],[["option",4,["runtimevalue"]],["trap",3],["result",4,["option","trap"]]]],[[["funcref",3]],[["trap",3],["result",4,["funcinvocation","trap"]],["funcinvocation",3]]],[[["stackrecycler",3],["funcref",3]],[["option",4,["runtimevalue"]],["trap",3],["result",4,["option","trap"]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["trapkind",4]],[[],["usize",15]],[[],[["pages",3],["option",4,["pages"]]]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u32"]],["u32",15]]],null,null,[[["signature",3]],["bool",15]],[[["runtimevalue",4]],["bool",15]],[[],["importsbuilder",3]],[[["trapkind",4]],["trap",3]],[[["module",3]],[["notstartedmoduleref",3],["result",4,["notstartedmoduleref","error"]],["error",4]]],[[["option",4,["valuetype"]],["valuetype",4]],["signature",3]],[[],["moduleref",3]],[[["usize",15]]],[[["usize",15]],[["result",4,["trap"]],["trap",3]]],[[["usize",15]],[["runtimevalue",4],["trap",3],["result",4,["runtimevalue","trap"]]]],[[]],[[["moduleimportresolver",8]]],[[["str",15],["signature",3]],[["error",4],["result",4,["funcref","error"]],["funcref",3]]],[[["str",15],["signature",3]],[["error",4],["result",4,["funcref","error"]],["funcref",3]]],[[["str",15],["signature",3]],[["error",4],["result",4,["funcref","error"]],["funcref",3]]],[[["str",15],["signature",3]],[["error",4],["result",4,["funcref","error"]],["funcref",3]]],[[["str",15],["globaldescriptor",3]],[["globalref",3],["error",4],["result",4,["globalref","error"]]]],[[["str",15],["globaldescriptor",3]],[["globalref",3],["error",4],["result",4,["globalref","error"]]]],[[["str",15],["globaldescriptor",3]],[["globalref",3],["error",4],["result",4,["globalref","error"]]]],[[["str",15],["globaldescriptor",3]],[["globalref",3],["error",4],["result",4,["globalref","error"]]]],[[["str",15],["memorydescriptor",3]],[["memoryref",3],["error",4],["result",4,["memoryref","error"]]]],[[["str",15],["memorydescriptor",3]],[["memoryref",3],["error",4],["result",4,["memoryref","error"]]]],[[["str",15],["memorydescriptor",3]],[["memoryref",3],["error",4],["result",4,["memoryref","error"]]]],[[["str",15],["memorydescriptor",3]],[["memoryref",3],["error",4],["result",4,["memoryref","error"]]]],[[["str",15],["tabledescriptor",3]],[["error",4],["result",4,["tableref","error"]],["tableref",3]]],[[["str",15],["tabledescriptor",3]],[["error",4],["result",4,["tableref","error"]],["tableref",3]]],[[["str",15],["tabledescriptor",3]],[["error",4],["result",4,["tableref","error"]],["tableref",3]]],[[["str",15],["tabledescriptor",3]],[["error",4],["result",4,["tableref","error"]],["tableref",3]]],[[],[["valuetype",4],["option",4,["valuetype"]]]],[[["option",4,["runtimevalue"]],["runtimevalue",4]],[["option",4,["runtimevalue"]],["resumableerror",4],["result",4,["option","resumableerror"]]]],[[],[["valuetype",4],["option",4,["valuetype"]]]],[[],[["moduleref",3],["result",4,["moduleref","trap"]],["trap",3]]],[[["stackrecycler",3]],[["moduleref",3],["result",4,["moduleref","trap"]],["trap",3]]],[[["u32",15]],[["result",4,["error"]],["error",4]]],[[["funcref",3],["u32",15],["option",4,["funcref"]]],[["result",4,["error"]],["error",4]]],[[["runtimevalue",4]],[["result",4,["error"]],["error",4]]],[[["u32",15]],[["result",4,["error"]],["error",4]]],[[],["signature",3]],[[],[["option",4,["runtimevalue"]],["resumableerror",4],["result",4,["option","resumableerror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["usize",15],["memoryref",3]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["result",4]],[[],[["result",4,["box","error"]],["box",3,["hosterror","global"]],["error",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["valuetype",4]],[[],["valuetype",4]],[[],["valuetype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["module",3]],[["result",4,["notstartedmoduleref","error"]],["notstartedmoduleref",3],["error",4]]],[[["usize",15]],["stackrecycler",3]],[[["moduleimportresolver",8]],["importsbuilder",3]],[[["usize",15]],[["result",4,["error"]],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["bytes",3]],[[],["words",3]],[[],["pages",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bytes",3]],[[],["bytes",3]],[[],["bytes",3]],[[],["bytes",3]],[[],["bytes",3]],[[],["words",3]],[[],["pages",3]],[[]],[[]],[[]],[[["bytes",3]],["ordering",4]],[[["words",3]],["ordering",4]],[[["pages",3]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bytes",3]],[[],["words",3]],[[],["pages",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["bytes",3]],["bool",15]],[[["words",3]],["bool",15]],[[["pages",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["pages",3]],["bytes",3]],[[["words",3]],["bytes",3]],[[]],[[["pages",3]],["bytes",3]],[[["words",3]],["bytes",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bytes",3]],[[],["words",3]],[[],["pages",3]],[[["bytes",3]],["bool",15]],[[["words",3]],["bool",15]],[[["pages",3]],["bool",15]],[[["bytes",3]],[["ordering",4],["option",4,["ordering"]]]],[[["words",3]],[["ordering",4],["option",4,["ordering"]]]],[[["pages",3]],[["ordering",4],["option",4,["ordering"]]]],[[]],[[],["bytes",3]],[[],["pages",3]],[[],["pages",3]],[[],["words",3]],[[],["words",3]],[[],["pages",3]],[[],["pages",3]],[[],["words",3]],[[],["words",3]],[[],["bytes",3]],[[],["bytes",3]],[[],["words",3]],[[],["pages",3]],[[],["pages",3]],[[],["words",3]],[[],["bytes",3]],[[],["bytes",3]],[[],["words",3]],[[],["pages",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["private",3]]],[[["private",3]]],[[],["f32",3]],[[],["f64",3]],[[],["f32",3]],[[],["f64",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["f32",3]],[[],["f64",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["f32",3]],[[],["f64",3]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[],["f32",3]],[[],["f64",3]],[[["u32",15]],["f32",3]],[[["f32",15]],["f32",3]],[[]],[[["u64",15]],["f64",3]],[[]],[[["f64",15]],["f64",3]],[[["u32",15]],["f32",3]],[[["u64",15]],["f64",3]],[[["f32",15]],["f32",3]],[[["f64",15]],["f64",3]],[[],[["error",4],["result",4,["f32","error"]],["f32",3]]],[[],[["result",4,["f64","error"]],["error",4],["f64",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["runtimevalue",4]],[["f32",3],["option",4,["f32"]]]],[[["runtimevalue",4]],[["option",4,["f64"]],["f64",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["f32",3]],["f32",3]],[[["f64",3]],["f64",3]],[[["f32",3]],["f32",3]],[[["f64",3]],["f64",3]],[[],["f32",3]],[[],["f64",3]],[[],["f32",3]],[[],["f64",3]],[[],[["ordering",4],["option",4,["ordering"]]]],[[],[["ordering",4],["option",4,["ordering"]]]],[[],["f32",3]],[[],["f64",3]],[[],["f32",3]],[[],["f64",3]],[[],["u32",15]],[[],["u64",15]],[[],["f32",15]],[[],["f64",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["childinfo",4],["bool",15],["option",4,["childinfo"]],["option",4]],[["bool",15],["result",4,["bool"]]]],[[["childinfo",4],["option",4,["childinfo"]],["option",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["triebackend",3],["option",4,["triebackend"]]]],[[],[["option",4,["slot"]],["result",4,["option","error"]],["error",4]]],[[["slot",3]]],[[],[["option",4,["slot"]],["result",4,["option","error"]],["error",4]]],[[["slot",3]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockid",4]],[["string",3],["result",4,["string"]]]],[[["blockid",4]],[["string",3],["result",4,["string"]]]],[[["blockid",4]],[["string",3],["result",4,["string"]]]],[[["blockid",4]],[["string",3],["result",4,["string"]]]],[[["childinfo",4]],[["global",3],["vec",3,["vec","global"]],["vec",3,["u8","global"]]]],[[["childinfo",4]],[["result",4,["option"]],["option",4,["vec"]]]],[[["childinfo",4]],[["result",4,["option"]],["option",4]]],[[["childinfo",4]]],[[],["blockorigin",4]],[[],["nonetwork",3]],[[],["canauthorwithnativeversion",3]],[[],["alwayscanauthor",3]],[[],["nevercanauthor",3]],[[],["inherentdata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["global"]],["global",3],["vec",3,["global"]]],["result",4]],[[],[["inherentdata",3],["result",4,["inherentdata","error"]],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[],["inherentdata",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[["blockstatus",4]],["bool",15]],[[["blockorigin",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["childinfo",4]],[["bool",15],["result",4,["bool"]]]],[[],[["bool",15],["result",4,["bool"]]]],[[["option",4]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["childinfo",4]]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["error",4]],[[["string",3]],["error",4]],[[["public",3]],["error",4]],[[]],[[["error",4]],["error",4]],[[["error",8],["box",3,["error","global"]],["global",3]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["option","error"]],["option",4],["error",4]]],[[],[["global",3],["vec",3,["global"]]]],[[],[["global",3],["trackedstoragekey",3],["vec",3,["trackedstoragekey","global"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4,["storageproof"]],["storageproof",3]],[["result",4,["noproofrecorded"]],["noproofrecorded",3]]],[[["option",4,["storageproof"]],["storageproof",3]],[["result",4,["noproofrecorded"]],["noproofrecorded",3]]],[[["option",4,["storageproof"]],["storageproof",3]],[["result",4,["noproofrecorded"]],["noproofrecorded",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["global",3],["vec",3,["vec","global"]],["vec",3,["u8","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],["usize",15]],[[],["canauthorwithnativeversion",3]],[[],["inherentdata",3]],[[["childinfo",4]],[["result",4,["option"]],["option",4,["vec"]]]],[[],[["result",4,["option"]],["option",4,["vec"]]]],[[],[["global",3],["vec",3,["global"]]]],null,[[],[["option",4,["u32"]],["u32",15]]],[[["inherentdata",3],["usize",15],["duration",3],["digest",3],["option",4,["usize"]]]],[[],[["result",4,["error"]],["error",4]]],[[]],[[["statemachinestats",3]]],[[]],[[]],[[["global",3],["trackedstoragekey",3],["vec",3,["trackedstoragekey","global"]]]],[[],["duration",3]],[[],[["option",4,["error"]],["error",8]]],[[],[["result",4,["option"]],["option",4,["vec"]]]],null,[[],[["result",4,["option"]],["option",4]]],[[],[["result",4,["option","error"]],["error",4],["option",4,["transactionstorageproof"]]]],[[]],[[],[["option",4,["slot"]],["result",4,["option","error"]],["error",4]]],[[["slot",3]]],[[],[["error",4],["result",4,["option","error"]],["option",4,["timestamp"]]]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3,["u8","global"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["vec","error"]],["vec",3,["global"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usageinfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["blockid",4]],[["box",3,["error","global"]],["result",4,["blockstatus","box"]],["blockstatus",4]]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["validation",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[["validation",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["error",4],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["error",3]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[["arc",3]]],[[["arc",3]]],[[["arc",3]]]],"p":[[4,"AccountKeyring"],[4,"Ed25519Keyring"],[4,"ExecutionStrategy"],[4,"WasmExecutionMethod"],[3,"StorageChild"],[3,"Storage"],[3,"ExecutionStrategies"],[3,"NativeElseWasmExecutor"],[3,"RpcHandlers"],[3,"RpcSession"],[3,"LongestChain"],[3,"TestClientBuilder"],[8,"TestClientBuilderExt"],[3,"Backend"],[3,"LocalExecutorDispatch"],[3,"GenesisParameters"],[3,"LightFetcher"],[3,"ExecutionExtensions"],[3,"RpcTransactionOutput"],[3,"RpcTransactionError"],[6,"TestClientBuilder"],[8,"SyncCryptoStore"],[8,"ClientExt"],[8,"GenesisInit"],[8,"ClientBlockImportExt"],[8,"DefaultTestClientBuilderExt"],[8,"BlockBuilderExt"],[8,"RpcHandlersExt"],[8,"BlockchainEventsExt"],[3,"LocalCallExecutor"],[3,"ClientConfig"],[3,"Client"],[4,"KeepBlocks"],[4,"PruningMode"],[4,"DatabaseSource"],[4,"TransactionStorageMode"],[3,"BenchmarkingState"],[3,"RefTrackingState"],[3,"DatabaseSettings"],[3,"BlockchainDb"],[3,"BlockImportOperation"],[8,"Database"],[13,"Custom"],[13,"Auto"],[13,"RocksDb"],[13,"ParityDb"],[13,"Some"],[13,"Constrained"],[3,"LightStorage"],[3,"LocalStorage"],[8,"NativeExecutionDispatch"],[3,"RuntimeVersion"],[3,"WasmExecutor"],[3,"NativeVersion"],[8,"Externalities"],[8,"RuntimeVersionOf"],[4,"Error"],[4,"WasmError"],[13,"InvalidData"],[13,"Trap"],[13,"Wasmi"],[13,"ApiError"],[13,"MethodNotFound"],[13,"InvalidCode"],[13,"RuntimePanicked"],[13,"Other"],[13,"Allocator"],[13,"FunctionExecution"],[13,"NoTableEntryWithIndex"],[13,"TableElementIsNotAFunction"],[13,"FunctionRefIsNull"],[13,"RuntimeConstruction"],[13,"InvalidInitializerExpression"],[13,"ErasingFailed"],[13,"Instantiation"],[13,"Other"],[4,"InstantiationError"],[4,"SandboxBackend"],[4,"Memory"],[3,"SupervisorFuncIndex"],[3,"GuestExternals"],[3,"SandboxInstance"],[3,"GuestEnvironment"],[3,"UnregisteredInstance"],[3,"Store"],[8,"SandboxContext"],[13,"Wasmi"],[4,"ReturnValue"],[4,"ValueType"],[4,"Value"],[8,"PointerType"],[8,"IntoValue"],[3,"Pointer"],[3,"Signature"],[8,"FunctionContext"],[8,"Function"],[8,"Sandbox"],[8,"HostFunctions"],[8,"ReadPrimitive"],[8,"TryFromValue"],[8,"WritePrimitive"],[13,"Value"],[13,"I32"],[13,"I64"],[13,"F32"],[13,"F64"],[4,"ResumableError"],[4,"TrapKind"],[4,"ValueType"],[4,"RuntimeValue"],[4,"ExternVal"],[4,"Error"],[4,"ValueError"],[3,"FuncRef"],[3,"GlobalRef"],[3,"MemoryRef"],[3,"ModuleRef"],[3,"TableRef"],[3,"Signature"],[3,"MemoryInstance"],[3,"TableInstance"],[3,"GlobalInstance"],[3,"FuncInstance"],[3,"FuncInvocation"],[3,"NopExternals"],[3,"ImportsBuilder"],[3,"NotStartedModuleRef"],[3,"StackRecycler"],[3,"GlobalDescriptor"],[3,"TableDescriptor"],[3,"MemoryDescriptor"],[3,"Module"],[3,"Trap"],[3,"RuntimeArgs"],[3,"ModuleInstance"],[8,"HostError"],[8,"LittleEndianConvert"],[8,"FromRuntimeValue"],[8,"Externals"],[8,"ImportResolver"],[8,"ModuleImportResolver"],[13,"Validation"],[13,"Instantiation"],[13,"Function"],[13,"Table"],[13,"Memory"],[13,"Global"],[13,"Value"],[13,"Trap"],[13,"Host"],[13,"Func"],[13,"Table"],[13,"Memory"],[13,"Global"],[13,"Trap"],[13,"I32"],[13,"I64"],[13,"F32"],[13,"F64"],[13,"Host"],[3,"Bytes"],[3,"Words"],[3,"Pages"],[8,"ByteSize"],[8,"RoundUpTo"],[3,"F32"],[3,"F64"],[4,"Error"],[4,"BlockOrigin"],[8,"Environment"],[8,"ProofRecording"],[8,"StateBackend"],[8,"Proposer"],[4,"BlockStatus"],[8,"SlotData"],[3,"NoNetwork"],[3,"CanAuthorWithNativeVersion"],[3,"AlwaysCanAuthor"],[3,"NeverCanAuthor"],[3,"InherentData"],[3,"Proposal"],[3,"DisableProofRecording"],[3,"EnableProofRecording"],[3,"NoProofRecorded"],[8,"SelectChain"],[8,"CanAuthorWith"],[8,"SyncOracle"],[13,"StateUnavailable"],[13,"FaultyTimer"],[13,"InherentData"],[13,"InvalidSignature"],[13,"InvalidAuthority"],[13,"Other"],[13,"ClientImport"],[13,"ChainLookup"],[13,"CannotSign"],[13,"IncompatibleAuthoringRuntime"],[4,"Validation"],[3,"DefaultBlockAnnounceValidator"],[8,"Chain"],[8,"BlockAnnounceValidator"],[13,"Failure"],[13,"Success"],[4,"Error"],[13,"BadProposalFormat"],[13,"WrongParentHash"],[13,"WrongNumber"]]},\
"substrate_test_runtime_transaction_pool":{"doc":"Test utils for the transaction pool together with the test …","t":[3,3,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11],"n":["ChainState","Error","IsBestBlock","No","TestApi","Yes","add_block","add_invalid","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_body","block_by_hash","block_by_number","block_header","block_id_to_hash","block_id_to_number","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","empty","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash_and_length","header_metadata","increment_nonce","init","init","init","init","insert_header_metadata","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_pool_error","into_ref","into_ref","into_ref","into_ref","invalid_hashes","is_best","nonces","push_block","push_block_with_parent","remove_header_metadata","set_valid_modifier","source","to_string","tree_route","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","uxt","validate_transaction","validation_requests","vzip","vzip","vzip","vzip","with_alice_nonce"],"q":["substrate_test_runtime_transaction_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Error type used by <code>TestApi</code>.","","","Test Api for transaction pool.","","Add a block to the internal state.","Mark some transaction is invalid.","","","","","","","","","","","","","","","","","","","","","","","get a reference to the chain state","","","","","","","","","","","","","","Default Test Api","","","","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Increment nonce in the inner state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Push block under given number.","Push a block using the given <code>parent</code>.","","Set hook on modify valid result of transaction.","","","Calculate a tree route between the two given blocks.","","","","","","","","","","","","","","","","","","","","","Generate transfer extrinsic with a given nonce.","","Query validation requests received.","","","","","Test Api with Alice nonce set initially."],"i":[0,0,0,1,0,1,2,2,1,2,3,4,1,2,3,4,2,4,4,2,2,2,1,2,3,4,1,2,3,4,2,4,1,2,3,4,1,2,3,4,1,2,3,4,2,3,3,1,1,2,3,3,4,1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4,2,2,2,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,4,1,2,3,4,1,2,3,4,3,1,2,3,4,4,1,4,2,2,2,2,3,3,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,2,2,1,2,3,4,2],"f":[null,null,null,null,null,null,[[["block",6],["bool",15]]],[[["extrinsic",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["blockid",4]]],null,null,[[["blockid",4]],[["option",4],["result",4,["option"]]]],[[["blockid",4]],[["error",3],["result",4,["option","error"]],["option",4,["blockhash"]]]],[[["blockid",4]],[["result",4,["option","error"]],["error",3],["option",4,["numberfor"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rwlock",6]],[[],["chainstate",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["bool",15]]],[[]],[[["error",4]],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extrinsicfor",6]]],[[["hash",6]],[["cachedheadermetadata",3,["block"]],["result",4,["cachedheadermetadata"]]]],[[["accountid",6]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["cachedheadermetadata",3,["block"]],["block",6],["hash",6]]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],null,[[["blocknumber",6],["vec",3,["extrinsic"]],["bool",15],["extrinsic",4]],["header",6]],[[["vec",3,["extrinsic"]],["bool",15],["extrinsic",4],["hash",6]],["header",6]],[[["hash",6]]],[[["box",3,["fn"]],["fn",8]]],[[],[["error",8],["option",4,["error"]]]],[[],["string",3]],[[["hash",6]],[["error",3],["treeroute",3,["block"]],["result",4,["treeroute","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["index",6],["accountkeyring",4]],["extrinsic",4]],[[["transactionsource",4],["extrinsicfor",6],["blockid",4]]],[[],[["extrinsic",4],["vec",3,["extrinsic"]]]],[[]],[[]],[[]],[[]],[[["u64",15]]]],"p":[[4,"IsBestBlock"],[3,"TestApi"],[3,"Error"],[3,"ChainState"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};